{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/components/AddScoreField.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SentimentVerySatisfiedRoundedIcon from \"@material-ui/icons/SentimentVerySatisfiedRounded\";\nimport EmojiPeopleRoundedIcon from \"@material-ui/icons/EmojiPeopleRounded\";\nexport const AddScoreField = ({\n  players,\n  teams,\n  blueScore,\n  redScore,\n  onBlue,\n  onRed\n}) => {\n  const {\n    0: curBlue,\n    1: setBlue\n  } = useState(blueScore);\n  const {\n    0: curRed,\n    1: setRed\n  } = useState(redScore);\n  return __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    justify: \"center\",\n    alignItems: \"baseline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 5,\n    container: true,\n    spacing: 2,\n    justify: \"space-around\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, teams.blueTeam.map(id => {\n    return __jsx(Grid, {\n      item: true,\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, __jsx(Chip, {\n      key: id,\n      color: \"primary\",\n      label: players.get(id),\n      icon: __jsx(SentimentVerySatisfiedRoundedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 23\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }));\n  })), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \":\")), __jsx(Grid, {\n    item: true,\n    xs: 5,\n    container: true,\n    spacing: 2,\n    justify: \"space-around\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, teams.redTeam.map(id => {\n    return __jsx(Grid, {\n      item: true,\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, __jsx(Chip, {\n      key: id,\n      color: \"secondary\",\n      label: players.get(id),\n      icon: __jsx(EmojiPeopleRoundedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 23\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }));\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    container: true,\n    spacing: 2,\n    justify: \"space-around\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, __jsx(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    type: \"number\",\n    autoComplete: \"off\",\n    label: \"Score Blue\",\n    color: \"primary\",\n    autoFocus: true,\n    value: curBlue,\n    error: curBlue < 0 || curBlue > 0 && curBlue === curRed,\n    onChange: event => {\n      if (event.target.type === \"number\") {\n        const enteredScore = parseInt(event.target.value);\n        onBlue(enteredScore);\n        setBlue(enteredScore);\n      } else {\n        onBlue(0);\n        setBlue(0);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, __jsx(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    type: \"number\",\n    autoComplete: \"off\",\n    label: \"Score Red\",\n    color: \"secondary\",\n    value: curRed,\n    error: curRed < 0 || curRed > 0 && curBlue === curRed,\n    onChange: event => {\n      if (event.target.type === \"number\") {\n        const enteredScore = parseInt(event.target.value);\n        onRed(enteredScore);\n        setRed(enteredScore);\n      } else {\n        onRed(0);\n        setRed(0);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/components/AddScoreField.tsx"],"names":["React","useState","Chip","Grid","TextField","Typography","SentimentVerySatisfiedRoundedIcon","EmojiPeopleRoundedIcon","AddScoreField","players","teams","blueScore","redScore","onBlue","onRed","curBlue","setBlue","curRed","setRed","blueTeam","map","id","get","textAlign","redTeam","event","target","type","enteredScore","parseInt","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FaceRoundedIcon from \"@material-ui/icons/FaceRounded\";\nimport SentimentVerySatisfiedRoundedIcon from \"@material-ui/icons/SentimentVerySatisfiedRounded\";\nimport EmojiPeopleRoundedIcon from \"@material-ui/icons/EmojiPeopleRounded\";\nimport { Players, Team } from \"../util/types\";\n\ninterface PlayerChip {\n  label: string;\n  isBlue: boolean;\n  isRed: boolean;\n  disabled: boolean;\n  id: number;\n}\n\ninterface AddScoreField {\n  players: Players;\n  teams: { blueTeam: Team; redTeam: Team };\n  blueScore: number;\n  redScore: number;\n  // onChange: (points: number, isBlue: boolean) => void;\n  onBlue: (points: number) => void;\n  onRed: (points: number) => void;\n}\n\nexport const AddScoreField: React.FC<AddScoreField> = ({\n  players,\n  teams,\n  blueScore,\n  redScore,\n  onBlue,\n  onRed,\n}) => {\n  const [curBlue, setBlue] = useState(blueScore);\n  const [curRed, setRed] = useState(redScore);\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      spacing={2}\n      justify=\"center\"\n      alignItems=\"baseline\"\n    >\n      <Grid\n        item\n        xs={5}\n        container\n        spacing={2}\n        justify=\"space-around\"\n        alignItems=\"center\"\n      >\n        {teams.blueTeam.map((id) => {\n          return (\n            <Grid item key={id}>\n              <Chip\n                key={id}\n                color=\"primary\"\n                label={players.get(id)}\n                icon={<SentimentVerySatisfiedRoundedIcon />}\n              />\n            </Grid>\n          );\n        })}\n      </Grid>\n      <Grid item xs={2}>\n        <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n          :\n        </Typography>\n      </Grid>\n      <Grid\n        item\n        xs={5}\n        container\n        spacing={2}\n        justify=\"space-around\"\n        alignItems=\"center\"\n      >\n        {teams.redTeam.map((id) => {\n          return (\n            <Grid item key={id}>\n              <Chip\n                key={id}\n                color=\"secondary\"\n                label={players.get(id)}\n                icon={<EmojiPeopleRoundedIcon />}\n              />\n            </Grid>\n          );\n        })}\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        container\n        spacing={2}\n        justify=\"space-around\"\n        alignItems=\"center\"\n      >\n        <Grid item>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            type=\"number\"\n            autoComplete=\"off\"\n            label=\"Score Blue\"\n            color=\"primary\"\n            autoFocus\n            value={curBlue}\n            error={curBlue < 0 || (curBlue > 0 && curBlue === curRed)}\n            onChange={(event) => {\n              if (event.target.type === \"number\") {\n                const enteredScore = parseInt(event.target.value);\n                onBlue(enteredScore);\n                setBlue(enteredScore);\n              } else {\n                onBlue(0);\n                setBlue(0);\n              }\n            }}\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            type=\"number\"\n            autoComplete=\"off\"\n            label=\"Score Red\"\n            color=\"secondary\"\n            value={curRed}\n            error={curRed < 0 || (curRed > 0 && curBlue === curRed)}\n            onChange={(event) => {\n              if (event.target.type === \"number\") {\n                const enteredScore = parseInt(event.target.value);\n                onRed(enteredScore);\n                setRed(enteredScore);\n              } else {\n                onRed(0);\n                setRed(0);\n              }\n            }}\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}