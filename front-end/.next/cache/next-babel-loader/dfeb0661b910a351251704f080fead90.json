{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/components/GroupList.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Fab from \"@material-ui/core/Fab\";\nimport GroupAddRoundedIcon from \"@material-ui/icons/GroupAddRounded\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { GroupListItem } from \"./common/GroupListItem\";\n\nconst handleAdd = () => {\n  console.log(\"New Group!\");\n};\n\nconst handleDelete = groupname => {\n  console.log(\"Handle delete.\", groupname);\n};\n\nconst handleRenameGroup = groupname => {\n  console.log(\"Rename this group\", groupname);\n};\n\nconst handleRenamePlayer = (groupname, player) => {\n  console.log(\"Rename this player\", groupname, player);\n};\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(4),\n    backgroundColor: theme.palette.success.main\n  }\n}));\nexport const GroupList = () => {\n  // Use stle\n  const classes = useStyles(); // For testing porpuses.\n\n  const group1 = {\n    groupname: \"Group1\",\n    players: [\"Player 1.1\", \"Player 1.2\", \"Player 1.3\", \"Player 1.4\"]\n  };\n  const group2 = {\n    groupname: \"Group2\",\n    players: [\"Player 2.1\", \"Player 2.2\", \"Player 2.3\", \"Player 2.4\"]\n  }; // Use state hook\n\n  const initialGroups = [group1, group2];\n  const {\n    0: groups,\n    1: setGroups\n  } = useState(initialGroups);\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(List, {\n    component: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, groups.map(group => {\n    __jsx(GroupListItem, {\n      key: group.groupname,\n      group: group,\n      onDelete: handleDelete,\n      onRenameGroup: handleRenameGroup,\n      onRenamePlayer: handleRenamePlayer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    });\n  })), __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    justify: \"center\",\n    style: {\n      minWidth: \"100vw\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(Fab, {\n    size: \"large\",\n    className: classes.fab,\n    \"aria-label\": \"add\",\n    onClick: handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, __jsx(GroupAddRoundedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/components/GroupList.tsx"],"names":["React","useState","List","Grid","Fab","GroupAddRoundedIcon","makeStyles","GroupListItem","handleAdd","console","log","handleDelete","groupname","handleRenameGroup","handleRenamePlayer","player","useStyles","theme","fab","position","bottom","spacing","backgroundColor","palette","success","main","GroupList","classes","group1","players","group2","initialGroups","groups","setGroups","map","group","minWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Fab from \"@material-ui/core/Fab\";\nimport GroupAddRoundedIcon from \"@material-ui/icons/GroupAddRounded\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { GroupListItem } from \"./common/GroupListItem\";\n\nconst handleAdd = () => {\n  console.log(\"New Group!\");\n};\n\nconst handleDelete = (groupname: string) => {\n  console.log(\"Handle delete.\", groupname);\n};\n\nconst handleRenameGroup = (groupname: string) => {\n  console.log(\"Rename this group\", groupname);\n};\n\nconst handleRenamePlayer = (groupname: string, player: string) => {\n  console.log(\"Rename this player\", groupname, player);\n};\n\nexport interface Group {\n  groupname: string;\n  players: string[];\n}\n\nconst useStyles = makeStyles((theme) => ({\n  fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(4),\n    backgroundColor: theme.palette.success.main,\n  },\n}));\n\nexport const GroupList: React.FC = () => {\n  // Use stle\n  const classes = useStyles();\n\n  // For testing porpuses.\n  const group1: Group = {\n    groupname: \"Group1\",\n    players: [\"Player 1.1\", \"Player 1.2\", \"Player 1.3\", \"Player 1.4\"],\n  };\n  const group2: Group = {\n    groupname: \"Group2\",\n    players: [\"Player 2.1\", \"Player 2.2\", \"Player 2.3\", \"Player 2.4\"],\n  };\n  // Use state hook\n  const initialGroups: Group[] = [group1, group2];\n  const [groups, setGroups] = useState(initialGroups);\n\n  return (\n    <React.Fragment>\n      <List component=\"nav\">\n        {groups.map((group) => {\n          <GroupListItem\n            key={group.groupname}\n            group={group}\n            onDelete={handleDelete}\n            onRenameGroup={handleRenameGroup}\n            onRenamePlayer={handleRenamePlayer}\n          />;\n        })}\n      </List>\n      <Grid\n        container\n        spacing={0}\n        justify=\"center\"\n        style={{ minWidth: \"100vw\" }}\n      >\n        <Grid item>\n          <Fab\n            size=\"large\"\n            className={classes.fab}\n            aria-label=\"add\"\n            onClick={handleAdd}\n          >\n            <GroupAddRoundedIcon />\n          </Fab>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}