{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/components/graphs/WinPercentage.tsx\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useRef, useLayoutEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\n/* Imports for amCharts*/\n// Have to add nextjs transpiler\n// https://github.com/amcharts/amcharts4/issues/1043\n\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4themes_material from \"@amcharts/amcharts4/themes/material\"; // Types\n\nvar WinPercentage = function WinPercentage(_ref) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var data = _ref.data;\n  var chartFinal = useRef(null);\n  useLayoutEffect(_s(function () {\n    _s();\n\n    // ... Chart code\n    // Themes begin\n    am4core.useTheme(am4themes_material);\n    am4core.useTheme(am4themes_animated); // Themes end\n    // Create chart instance\n\n    var chart = am4core.create(\"chartdivWinPercentage\", am4charts.XYChart); // Touch interface\n\n    chart.tapToActivate = true; // Make chart adjust to screen size more.\n\n    chart.responsive.enabled = true; // Create axes\n\n    var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n    dateAxis.renderer.minGridDistance = 50;\n    var valueAxis = chart.yAxes.push(new am4charts.ValueAxis()); // Make fixed ranged (otherwise it's 0 - 120);\n\n    valueAxis.max = 100;\n    valueAxis.min = 0;\n    data.forEach(function (personalData, name) {\n      return createSeries(personalData, name);\n    }); // Create series\n\n    function createSeries(personalData, name) {\n      var series = chart.series.push(new am4charts.LineSeries());\n      series.dataFields.valueY = \"winPercentage\"; // They had + name!!!!!!!!\n\n      series.dataFields.dateX = \"date\";\n      series.strokeWidth = 2;\n      series.minBulletDistance = 10;\n      series.tooltipText = \"{valueY}\";\n      series.tooltip.pointerOrientation = \"vertical\";\n      series.tooltip.background.cornerRadius = 20;\n      series.tooltip.background.fillOpacity = 0.5;\n      series.tooltip.label.padding(12, 12, 12, 12);\n      series.name = name;\n      series.minBulletDistance = 15; // For bullets\n      // Make legend update with the cursor.\n\n      series.legendSettings.valueText = \"{valueY.close}\";\n      series.legendSettings.itemValueText = \"[bold]{valueY}[/bold]\"; // Make bullets grow on hover\n\n      var bullet = series.bullets.push(new am4charts.CircleBullet());\n      bullet.circle.strokeWidth = 2;\n      bullet.circle.radius = 4;\n      bullet.circle.fill = am4core.color(\"#fff\");\n      var bullethover = bullet.states.create(\"hover\");\n      bullethover.properties.scale = 1.3; // Legend interaction\n\n      var segment = series.segments.template;\n      segment.interactionsEnabled = true;\n      var hoverState = segment.states.create(\"hover\");\n      hoverState.properties.strokeWidth = 3;\n      var dimmed = segment.states.create(\"dimmed\");\n      dimmed.properties.stroke = am4core.color(\"#dadada\");\n      segment.events.on(\"over\", function (event) {\n        processOver(event.target.parent.parent.parent);\n      });\n      segment.events.on(\"out\", function (event) {\n        processOut(event.target.parent.parent.parent);\n      });\n      series.data = personalData;\n      return series;\n    } // Create legend\n\n\n    chart.legend = new am4charts.Legend();\n    chart.legend.position = \"top\";\n    chart.legend.scrollable = true;\n    chart.legend.itemContainers.template.events.on(\"over\", function (event) {\n      processOver(event.target.dataItem.dataContext);\n    });\n    chart.legend.itemContainers.template.events.on(\"out\", function (event) {\n      processOut(event.target.dataItem.dataContext);\n    });\n\n    function processOver(hoveredSeries) {\n      hoveredSeries.toFront();\n      hoveredSeries.segments.each(function (segment) {\n        segment.setState(\"hover\");\n      });\n      chart.series.each(function (series) {\n        if (series != hoveredSeries) {\n          // Add any to avoid compiler warning.\n          series.segments.each(function (segment) {\n            segment.setState(\"dimmed\");\n          });\n          series.bulletsContainer.setState(\"dimmed\");\n        }\n      });\n    }\n\n    function processOut(hoveredSeries) {\n      chart.series.each(function (series) {\n        // Add any to avoid compiler warning. Code should work. From amcharts example.\n        series.segments.each(function (segment) {\n          segment.setState(\"default\");\n        });\n        series.bulletsContainer.setState(\"default\");\n      });\n    } // Add scrollbar\n\n\n    chart.scrollbarX = new am4charts.XYChartScrollbar(); // Use first series as display.\n\n    chart.scrollbarX.series.push(chart.series.getIndex(0));\n    chart.scrollbarX.parent = chart.bottomAxesContainer; // Position underneath.\n    // Add cursor\n\n    chart.cursor = new am4charts.XYCursor();\n    chart.cursor.xAxis = dateAxis; // chart.cursor.snapToSeries = series;\n    // ... boiler plate continues\n\n    chartFinal.current = chart;\n    return function () {\n      chart.dispose();\n    };\n  }, \"SGVKaihNoPaFHSK8fC2WGPRZubA=\", false, function () {\n    return [am4core.useTheme, am4core.useTheme];\n  }), []); // When the data prop changes it will update the chart\n\n  useLayoutEffect(function () {\n    var newData = Array.from(data);\n    console.log(newData);\n    var i = 0;\n    chartFinal.current.series.each(function (series) {\n      var seriesData = newData[i];\n      series.data = seriesData[1];\n      i++;\n    });\n  }, [data]);\n  return __jsx(Box, {\n    width: 1,\n    height: 500,\n    id: \"chartdivWinPercentage\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 10\n    }\n  });\n};\n\n_s2(WinPercentage, \"Yh9hKNJGe74FgnbyertCj0TpMgc=\");\n\n_c = WinPercentage;\nexport default WinPercentage;\n\nvar _c;\n\n$RefreshReg$(_c, \"WinPercentage\");","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/components/graphs/WinPercentage.tsx"],"names":["React","useRef","useLayoutEffect","Box","am4core","am4charts","am4themes_animated","am4themes_material","WinPercentage","data","chartFinal","useTheme","chart","create","XYChart","tapToActivate","responsive","enabled","dateAxis","xAxes","push","DateAxis","renderer","minGridDistance","valueAxis","yAxes","ValueAxis","max","min","forEach","personalData","name","createSeries","series","LineSeries","dataFields","valueY","dateX","strokeWidth","minBulletDistance","tooltipText","tooltip","pointerOrientation","background","cornerRadius","fillOpacity","label","padding","legendSettings","valueText","itemValueText","bullet","bullets","CircleBullet","circle","radius","fill","color","bullethover","states","properties","scale","segment","segments","template","interactionsEnabled","hoverState","dimmed","stroke","events","on","event","processOver","target","parent","processOut","legend","Legend","position","scrollable","itemContainers","dataItem","dataContext","hoveredSeries","toFront","each","setState","bulletsContainer","scrollbarX","XYChartScrollbar","getIndex","bottomAxesContainer","cursor","XYCursor","xAxis","current","dispose","newData","Array","from","console","log","i","seriesData"],"mappings":"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","sourcesContent":["import React, { useRef, useLayoutEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\n/* Imports for amCharts*/\n// Have to add nextjs transpiler\n// https://github.com/amcharts/amcharts4/issues/1043\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4themes_material from \"@amcharts/amcharts4/themes/material\";\n// Types\nimport { WinPercentageDP } from \"../../util/types\";\n\ninterface WinPercentageProps {\n  data: Map<string, WinPercentageDP[]>;\n}\n\nconst WinPercentage: React.FC<WinPercentageProps> = ({ data }) => {\n  const chartFinal = useRef(null);\n\n  useLayoutEffect(() => {\n    // ... Chart code\n    // Themes begin\n    am4core.useTheme(am4themes_material);\n    am4core.useTheme(am4themes_animated);\n    // Themes end\n    // Create chart instance\n    let chart = am4core.create(\"chartdivWinPercentage\", am4charts.XYChart);\n\n    // Touch interface\n    chart.tapToActivate = true;\n    // Make chart adjust to screen size more.\n    chart.responsive.enabled = true;\n\n    // Create axes\n    let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n    dateAxis.renderer.minGridDistance = 50;\n\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    // Make fixed ranged (otherwise it's 0 - 120);\n    valueAxis.max = 100;\n    valueAxis.min = 0;\n\n    data.forEach((personalData, name) => createSeries(personalData, name));\n\n    // Create series\n    function createSeries(personalData: WinPercentageDP[], name: string) {\n      let series = chart.series.push(new am4charts.LineSeries());\n      series.dataFields.valueY = \"winPercentage\"; // They had + name!!!!!!!!\n      series.dataFields.dateX = \"date\";\n      series.strokeWidth = 2;\n      series.minBulletDistance = 10;\n      series.tooltipText = \"{valueY}\";\n      series.tooltip.pointerOrientation = \"vertical\";\n      series.tooltip.background.cornerRadius = 20;\n      series.tooltip.background.fillOpacity = 0.5;\n      series.tooltip.label.padding(12, 12, 12, 12);\n      series.name = name;\n      series.minBulletDistance = 15; // For bullets\n      // Make legend update with the cursor.\n      series.legendSettings.valueText = \"{valueY.close}\";\n      series.legendSettings.itemValueText = \"[bold]{valueY}[/bold]\";\n      // Make bullets grow on hover\n      let bullet = series.bullets.push(new am4charts.CircleBullet());\n      bullet.circle.strokeWidth = 2;\n      bullet.circle.radius = 4;\n      bullet.circle.fill = am4core.color(\"#fff\");\n\n      let bullethover = bullet.states.create(\"hover\");\n      bullethover.properties.scale = 1.3;\n\n      // Legend interaction\n      let segment = series.segments.template;\n      segment.interactionsEnabled = true;\n\n      let hoverState = segment.states.create(\"hover\");\n      hoverState.properties.strokeWidth = 3;\n\n      let dimmed = segment.states.create(\"dimmed\");\n      dimmed.properties.stroke = am4core.color(\"#dadada\");\n\n      segment.events.on(\"over\", function (event) {\n        processOver(event.target.parent.parent.parent);\n      });\n\n      segment.events.on(\"out\", function (event) {\n        processOut(event.target.parent.parent.parent);\n      });\n\n      series.data = personalData;\n      return series;\n    }\n\n    // Create legend\n    chart.legend = new am4charts.Legend();\n    chart.legend.position = \"top\";\n    chart.legend.scrollable = true;\n    chart.legend.itemContainers.template.events.on(\"over\", function (event) {\n      processOver(event.target.dataItem.dataContext);\n    });\n\n    chart.legend.itemContainers.template.events.on(\"out\", function (event) {\n      processOut(event.target.dataItem.dataContext);\n    });\n\n    function processOver(hoveredSeries) {\n      hoveredSeries.toFront();\n\n      hoveredSeries.segments.each(function (segment) {\n        segment.setState(\"hover\");\n      });\n\n      chart.series.each(function (series) {\n        if (series != hoveredSeries) {\n          // Add any to avoid compiler warning.\n          (series as any).segments.each(function (segment) {\n            segment.setState(\"dimmed\");\n          });\n          series.bulletsContainer.setState(\"dimmed\");\n        }\n      });\n    }\n\n    function processOut(hoveredSeries) {\n      chart.series.each(function (series) {\n        // Add any to avoid compiler warning. Code should work. From amcharts example.\n        (series as any).segments.each(function (segment) {\n          segment.setState(\"default\");\n        });\n        series.bulletsContainer.setState(\"default\");\n      });\n    }\n\n    // Add scrollbar\n    chart.scrollbarX = new am4charts.XYChartScrollbar();\n    // Use first series as display.\n    (chart.scrollbarX as am4charts.XYChartScrollbar).series.push(\n      chart.series.getIndex(0)\n    );\n    chart.scrollbarX.parent = chart.bottomAxesContainer; // Position underneath.\n\n    // Add cursor\n    chart.cursor = new am4charts.XYCursor();\n    chart.cursor.xAxis = dateAxis;\n    // chart.cursor.snapToSeries = series;\n\n    // ... boiler plate continues\n    chartFinal.current = chart;\n\n    return () => {\n      chart.dispose();\n    };\n  }, []);\n\n  // When the data prop changes it will update the chart\n  useLayoutEffect(() => {\n    const newData = Array.from(data);\n    console.log(newData);\n    let i = 0;\n    chartFinal.current.series.each(function (series) {\n      const seriesData = newData[i];\n      series.data = seriesData[1];\n      i++;\n    });\n  }, [data]);\n\n  return <Box width={1} height={500} id=\"chartdivWinPercentage\"></Box>;\n};\n\nexport default WinPercentage;\n"]},"metadata":{},"sourceType":"module"}