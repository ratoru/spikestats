{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/pages/about.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { LogoBar } from \"../components/LogoBar\"; // Need to use browser rendering for all amCharts.\n// https://github.com/amcharts/amcharts4/issues/272#issuecomment-646326596\n\nimport dynamic from \"next/dynamic\";\nconst AboutTimeLine = dynamic(() => import(\"../components/graphs/AboutTimeLine\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../components/graphs/AboutTimeLine\")],\n    modules: [\"../components/graphs/AboutTimeLine\"]\n  }\n});\nexport default function About() {\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(LogoBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(AboutTimeLine, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"h1\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"About\"), __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, \"Hi! This little web app allows you to track your 'Roundnet' games. I hope you enjoy it.\"), __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Furthermore, this is a programming project I am working on in my free time. You can find the code\", \" \", __jsx(\"a\", {\n    href: \"https://github.com/raphtorru/spike-stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"here\"), \". If you have constructive feedback feel free to contact me.\"), __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"Please remember your username! There is no way of getting your account back if you lose it. I did not use emails because I didn't want to bother with security issues.\"), __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Special thanks to Christina Joo for helping me with the icon design.\"))));\n}","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/pages/about.tsx"],"names":["React","Grid","Typography","LogoBar","dynamic","AboutTimeLine","ssr","About","textAlign"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,OAAT,QAAwB,uBAAxB,C,CAEA;AACA;;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEA,MAAMC,aAAa,GAAGD,OAAO,CAC3B,MAAM,OAAO,oCAAP,CADqB,EAE3B;AACEE,EAAAA,GAAG,EAAE,KADP;AAAA;AAAA,wCADa,oCACb;AAAA,cADa,oCACb;AAAA;AAAA,CAF2B,CAA7B;AAOA,eAAe,SAASC,KAAT,GAAiB;AAC9B,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,OAAO,EAAC,QAApC;AAA6C,IAAA,UAAU,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAIE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FAJF,EAQE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0GAEmC,GAFnC,EAGE;AAAG,IAAA,IAAI,EAAC,0CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,iEARF,EAcE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8KAdF,EAmBE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EAnBF,CAJF,CAFF,CADF;AAiCD","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { LogoBar } from \"../components/LogoBar\";\n\n// Need to use browser rendering for all amCharts.\n// https://github.com/amcharts/amcharts4/issues/272#issuecomment-646326596\nimport dynamic from \"next/dynamic\";\n\nconst AboutTimeLine = dynamic(\n  () => import(\"../components/graphs/AboutTimeLine\"),\n  {\n    ssr: false,\n  }\n);\n\nexport default function About() {\n  return (\n    <React.Fragment>\n      <LogoBar />\n      <Grid container spacing={4} justify=\"center\" alignItems=\"center\">\n        <Grid item xs={12}>\n          <AboutTimeLine />\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h1\" style={{ textAlign: \"center\" }}>\n            About\n          </Typography>\n          <Typography>\n            Hi! This little web app allows you to track your 'Roundnet' games. I\n            hope you enjoy it.\n          </Typography>\n          <Typography>\n            Furthermore, this is a programming project I am working on in my\n            free time. You can find the code{\" \"}\n            <a href=\"https://github.com/raphtorru/spike-stats\">here</a>. If you\n            have constructive feedback feel free to contact me.\n          </Typography>\n          <Typography>\n            Please remember your username! There is no way of getting your\n            account back if you lose it. I did not use emails because I didn't\n            want to bother with security issues.\n          </Typography>\n          <Typography>\n            Special thanks to Christina Joo for helping me with the icon design.\n          </Typography>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}