{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/pages/stats/[groupname].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { MainBar } from \"../../components/MainBar\";\nimport { NavStats } from \"../../components/NavStats\";\nimport { GameTable } from \"../../components/GameTable\";\nimport { ServeTeam } from \"../../util/types\";\nimport { AddChips } from \"../../components/AddChips\";\nimport Typography from \"@material-ui/core/Typography\";\nexport default function Stats() {\n  _s();\n\n  var _this = this;\n\n  var router = useRouter();\n  var groupname = router.query.groupname; // For testing\n\n  var examplePlayers = new Map([[0, \"Raphael\"], [1, \"Alex\"], [2, \"Valentin\"], [3, \"Sonam\"], [4, \"Timon\"]]);\n  var exampleGames = [{\n    id: 0,\n    blueTeam: [4, 3],\n    redTeam: [1, 2],\n    score: [21, 17],\n    serve: ServeTeam.Blue,\n    date: new Date()\n  }, {\n    id: 1,\n    blueTeam: [0, 1],\n    redTeam: [3, 2],\n    score: [10, 21],\n    serve: ServeTeam.Red,\n    date: new Date()\n  }];\n\n  var _useState = useState(exampleGames),\n      games = _useState[0],\n      setGames = _useState[1];\n\n  var handleDelete = function handleDelete(id) {\n    console.log(\"Delete this game from the server.\", id);\n    setGames(games.filter(function (game) {\n      return game[\"id\"] !== id;\n    }));\n  };\n\n  var handleAdd = function handleAdd() {\n    var emptyTeam = [-1, -1];\n    var selectedTeams = {\n      blueTeam: emptyTeam,\n      redTeam: emptyTeam\n    };\n\n    var handleSelectPlayer = function handleSelectPlayer(id, isBlue) {\n      var selectedTeam = selectedTeams[isBlue ? \"blueTeam\" : \"redTeam\"];\n      console.log(selectedTeam);\n\n      if (selectedTeam[0] === -1) {\n        selectedTeam[0] = id;\n      } else if (selectedTeam[1] === -1) {\n        selectedTeam[1] == id;\n      }\n    };\n\n    var handleRemovePlayer = function handleRemovePlayer(id, isBlue) {\n      var selectedTeam = selectedTeams[isBlue ? \"blueTeam\" : \"redTeam\"];\n\n      if (selectedTeam[0] === id) {\n        selectedTeam[0] = -1;\n      } else if (selectedTeam[1] === id) {\n        selectedTeam[1] == -1;\n      }\n    };\n\n    var AddGameSwal = withReactContent(Swal);\n    AddGameSwal.fire({\n      title: \"Add Game\",\n      html: __jsx(AddChips, {\n        players: examplePlayers,\n        teams: selectedTeams,\n        onSelect: handleSelectPlayer,\n        onDelete: handleRemovePlayer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }),\n      showCancelButton: true\n    });\n    console.log(selectedTeams);\n    var dummyGame = {\n      id: 5,\n      blueTeam: [1, 2],\n      redTeam: [3, 0],\n      score: [21, 10],\n      serve: ServeTeam.Blue,\n      date: new Date()\n    };\n    setGames(function (games) {\n      return [].concat(_toConsumableArray(games), [dummyGame]);\n    });\n  };\n\n  var tab1 = __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 16\n    }\n  }, groupname);\n\n  var tab2 = __jsx(GameTable, {\n    onDelete: handleDelete,\n    games: games,\n    players: examplePlayers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  });\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, __jsx(MainBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), __jsx(NavStats, {\n    tab1Content: tab1,\n    tab2Content: tab2,\n    onAdd: handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(Stats, \"6diCFyUYGr4kNlhb1YHxAqzAqdg=\", false, function () {\n  return [useRouter];\n});\n\n_c = Stats;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/pages/stats/[groupname].tsx"],"names":["React","useState","useRouter","Swal","withReactContent","MainBar","NavStats","GameTable","ServeTeam","AddChips","Typography","Stats","router","groupname","query","examplePlayers","Map","exampleGames","id","blueTeam","redTeam","score","serve","Blue","date","Date","Red","games","setGames","handleDelete","console","log","filter","game","handleAdd","emptyTeam","selectedTeams","handleSelectPlayer","isBlue","selectedTeam","handleRemovePlayer","AddGameSwal","fire","title","html","showCancelButton","dummyGame","tab1","tab2"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { MainBar } from \"../../components/MainBar\";\nimport { NavStats } from \"../../components/NavStats\";\nimport { GameTable } from \"../../components/GameTable\";\nimport { Game, Players, ServeTeam, Team } from \"../../util/types\";\nimport { AddChips } from \"../../components/AddChips\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function Stats() {\n  const router = useRouter();\n  const { groupname } = router.query;\n\n  // For testing\n  const examplePlayers: Players = new Map([\n    [0, \"Raphael\"],\n    [1, \"Alex\"],\n    [2, \"Valentin\"],\n    [3, \"Sonam\"],\n    [4, \"Timon\"],\n  ]);\n\n  const exampleGames: Game[] = [\n    {\n      id: 0,\n      blueTeam: [4, 3],\n      redTeam: [1, 2],\n      score: [21, 17],\n      serve: ServeTeam.Blue,\n      date: new Date(),\n    },\n    {\n      id: 1,\n      blueTeam: [0, 1],\n      redTeam: [3, 2],\n      score: [10, 21],\n      serve: ServeTeam.Red,\n      date: new Date(),\n    },\n  ];\n  const [games, setGames] = useState(exampleGames);\n  const handleDelete = (id: number) => {\n    console.log(\"Delete this game from the server.\", id);\n    setGames(games.filter((game) => game[\"id\"] !== id));\n  };\n\n  const handleAdd = () => {\n    const emptyTeam: Team = [-1, -1];\n    const selectedTeams = { blueTeam: emptyTeam, redTeam: emptyTeam };\n    const handleSelectPlayer = (id: number, isBlue: boolean) => {\n      const selectedTeam = selectedTeams[isBlue ? \"blueTeam\" : \"redTeam\"];\n      console.log(selectedTeam);\n      if (selectedTeam[0] === -1) {\n        selectedTeam[0] = id;\n      } else if (selectedTeam[1] === -1) {\n        selectedTeam[1] == id;\n      }\n    };\n    const handleRemovePlayer = (id: number, isBlue: boolean) => {\n      const selectedTeam = selectedTeams[isBlue ? \"blueTeam\" : \"redTeam\"];\n      if (selectedTeam[0] === id) {\n        selectedTeam[0] = -1;\n      } else if (selectedTeam[1] === id) {\n        selectedTeam[1] == -1;\n      }\n    };\n    const AddGameSwal = withReactContent(Swal);\n    AddGameSwal.fire({\n      title: \"Add Game\",\n      html: (\n        <AddChips\n          players={examplePlayers}\n          teams={selectedTeams}\n          onSelect={handleSelectPlayer}\n          onDelete={handleRemovePlayer}\n        />\n      ),\n      showCancelButton: true,\n    });\n    console.log(selectedTeams);\n    const dummyGame: Game = {\n      id: 5,\n      blueTeam: [1, 2],\n      redTeam: [3, 0],\n      score: [21, 10],\n      serve: ServeTeam.Blue,\n      date: new Date(),\n    };\n    setGames((games) => [...games, dummyGame]);\n  };\n\n  const tab1 = <Typography>{groupname}</Typography>;\n  const tab2 = (\n    <GameTable onDelete={handleDelete} games={games} players={examplePlayers} />\n  );\n\n  return (\n    <React.Fragment>\n      <MainBar />\n      <NavStats tab1Content={tab1} tab2Content={tab2} onAdd={handleAdd} />\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}