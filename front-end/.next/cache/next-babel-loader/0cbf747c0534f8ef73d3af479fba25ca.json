{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/components/GroupList.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useState } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport GroupAddRoundedIcon from \"@material-ui/icons/GroupAddRounded\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Swal from \"sweetalert2\";\nimport { GroupListItem } from \"./common/GroupListItem\";\nimport { errorToast } from \"../util/swals\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100vw\",\n      // maxWidth: 360,\n      backgroundColor: theme.palette.background.paper\n    },\n    // fab: {\n    //   position: \"fixed\",\n    //   bottom: theme.spacing(4),\n    //   backgroundColor: theme.palette.success.main,\n    // },\n    fabButton: {\n      position: \"absolute\",\n      // zIndex: 1,\n      // top: -30,\n      bottom: theme.spacing(4),\n      left: 0,\n      right: 0,\n      margin: \"0 auto\"\n    }\n  };\n});\nexport var GroupList = function GroupList() {\n  _s();\n\n  // Use style\n  var classes = useStyles(); // Use state hook\n\n  var _useState = useState([]),\n      groups = _useState[0],\n      setGroups = _useState[1]; // Add a group\n\n\n  var handleAdd = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var newGroup, PlayerSwal, _yield$Swal$fire, newGroupname, _yield$PlayerSwal$fir, newPlayer, reason, _yield$PlayerSwal$fir2, temp, curReason;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              newGroup = {\n                groupname: \"\",\n                players: []\n              }; // Template for adding players.\n\n              PlayerSwal = Swal.mixin({\n                icon: \"question\",\n                showCancelButton: true,\n                confirmButtonText: \"Next &rarr;\",\n                footer: \"Leave box empty to stop adding players.\",\n                input: \"text\",\n                inputPlaceholder: \"New Name\",\n                inputValidator: function inputValidator(value) {\n                  var _iterator = _createForOfIteratorHelper(newGroup.players),\n                      _step;\n\n                  try {\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      var player = _step.value;\n\n                      if (player === value) {\n                        return \"Name is not unique!\";\n                      }\n                    }\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n                },\n                progressSteps: [\"1\", \"2\", \"3\"],\n                currentProgressStep: \"1\"\n              }); // Ask for new group name.\n\n              _context.next = 4;\n              return Swal.fire({\n                title: \"New Group Name\",\n                text: \"Must be a unique group name.\",\n                icon: \"question\",\n                showCancelButton: true,\n                confirmButtonText: \"Next &rarr;\",\n                input: \"text\",\n                inputPlaceholder: \"New group name\",\n                inputValidator: function inputValidator(value) {\n                  if (!value) {\n                    return \"Enter a name.\";\n                  }\n\n                  var _iterator2 = _createForOfIteratorHelper(groups),\n                      _step2;\n\n                  try {\n                    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                      var group = _step2.value;\n\n                      if (group.groupname === value) {\n                        return \"Name is not unique!\";\n                      }\n                    }\n                  } catch (err) {\n                    _iterator2.e(err);\n                  } finally {\n                    _iterator2.f();\n                  }\n                },\n                progressSteps: [\"1\", \"2\", \"3\"],\n                currentProgressStep: \"0\"\n              });\n\n            case 4:\n              _yield$Swal$fire = _context.sent;\n              newGroupname = _yield$Swal$fire.value;\n\n              if (newGroupname) {\n                _context.next = 8;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 8:\n              newGroup.groupname = \"\".concat(newGroupname); // Add Players until \"\" is returned.\n\n              _context.next = 11;\n              return PlayerSwal.fire({\n                title: \"Add Player #\".concat(newGroup.players.length + 1),\n                text: \"So far you have: \".concat(newGroup.players.join(\", \"))\n              });\n\n            case 11:\n              _yield$PlayerSwal$fir = _context.sent;\n              newPlayer = _yield$PlayerSwal$fir.value;\n              reason = _yield$PlayerSwal$fir.dismiss;\n\n              if (!reason) {\n                _context.next = 16;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 16:\n              if (!newPlayer) {\n                _context.next = 28;\n                break;\n              }\n\n              newGroup.players.push(\"\".concat(newPlayer));\n              _context.next = 20;\n              return PlayerSwal.fire({\n                title: \"Add Player #\".concat(newGroup.players.length + 1),\n                text: \"So far you have: \".concat(newGroup.players.join(\", \"))\n              });\n\n            case 20:\n              _yield$PlayerSwal$fir2 = _context.sent;\n              temp = _yield$PlayerSwal$fir2.value;\n              curReason = _yield$PlayerSwal$fir2.dismiss;\n\n              if (!curReason) {\n                _context.next = 25;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 25:\n              newPlayer = temp;\n              _context.next = 16;\n              break;\n\n            case 28:\n              Swal.fire({\n                title: \"Group: \".concat(newGroup.groupname),\n                text: \"Players: \".concat(newGroup.players.join(\", \")),\n                icon: \"success\",\n                confirmButtonText: \"Finish\",\n                showCancelButton: true,\n                progressSteps: [\"1\", \"2\", \"3\"],\n                currentProgressStep: \"2\",\n                preConfirm: function preConfirm() {\n                  // If everything went well.\n                  if (newGroup.groupname !== \"\" && newGroup.players.length >= 4) {\n                    setGroups(function (groups) {\n                      return [].concat(_toConsumableArray(groups), [newGroup]);\n                    }); // Call server here.\n                  } else {\n                    Swal.fire({\n                      title: \"Something went wrong.\",\n                      text: \"Remember: You need at least four players.\",\n                      icon: \"error\"\n                    });\n                  }\n                }\n              });\n\n            case 29:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleAdd() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // Delete a group\n\n\n  var handleDelete = function handleDelete(groupname) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert deleting \".concat(groupname, \"!\"),\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: \"Yes, delete it!\",\n      focusConfirm: false,\n      focusCancel: true,\n      cancelButtonText: \"No, cancel!\"\n    }).then(function (result) {\n      if (result.value) {\n        // Save old state\n        var prevGroups = _toConsumableArray(groups); // Update UI.\n\n\n        setGroups(groups.filter(function (curGroup) {\n          return curGroup.groupname !== groupname;\n        }));\n        console.log(\",Handle delete.\", groupname, groups); // Call backend and revert if error.\n\n        var apiSuccess = true;\n\n        if (!apiSuccess) {\n          errorToast.fire({\n            text: \"The group was already deleted.\"\n          });\n          setGroups(prevGroups);\n        }\n      }\n    });\n  }; // Rename a group\n\n\n  var handleRenameGroup = function handleRenameGroup(oldName, newName) {\n    // New name can't be the old name.\n    var newGroups = [];\n\n    var _iterator3 = _createForOfIteratorHelper(groups),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var curGroup = _step3.value;\n        var curName = curGroup.groupname; // Check if the name is unique.\n\n        if (newName === curName) {\n          errorToast.fire({\n            text: \"Group name is not unique!\"\n          });\n          return;\n        }\n\n        if (curName === oldName) {\n          // Modify old name.\n          newGroups.push({\n            groupname: newName,\n            players: curGroup.players\n          });\n        } else {\n          newGroups.push(curGroup);\n        }\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n\n    setGroups(newGroups); // Call server here.\n  }; // Rename a player.\n\n\n  var handleRenamePlayer = function handleRenamePlayer(groupname, oldPlayer, newPlayer) {\n    // New name can't be the old name.\n    var newGroups = [];\n\n    var _iterator4 = _createForOfIteratorHelper(groups),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var curGroup = _step4.value;\n        var newPlayers = curGroup.players;\n\n        if (groupname === curGroup.groupname) {\n          // Check if the name is unique.\n          newPlayers = [];\n\n          var _iterator5 = _createForOfIteratorHelper(curGroup.players),\n              _step5;\n\n          try {\n            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n              var player = _step5.value;\n\n              if (player === newPlayer) {\n                errorToast.fire({\n                  text: \"Group name is not unique!\"\n                });\n                return;\n              }\n\n              if (player === oldPlayer) {\n                newPlayers.push(newPlayer);\n              } else {\n                newPlayers.push(player);\n              }\n            }\n          } catch (err) {\n            _iterator5.e(err);\n          } finally {\n            _iterator5.f();\n          }\n\n          newGroups.push({\n            groupname: curGroup.groupname,\n            players: newPlayers\n          });\n        }\n\n        setGroups(newGroups); // Call server here.\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  };\n\n  var content;\n\n  if (groups.length == 0) {\n    content = __jsx(Typography, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 7\n      }\n    }, \"Seems like you have no groups yet. Create one by clicking the button below.\");\n  } else {\n    content = __jsx(List, {\n      component: \"nav\",\n      className: classes.root,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 7\n      }\n    }, groups.map(function (group) {\n      return __jsx(GroupListItem, {\n        key: group.groupname,\n        group: group,\n        onDelete: handleDelete,\n        onRenameGroup: handleRenameGroup,\n        onRenamePlayer: handleRenamePlayer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }\n      });\n    }));\n  }\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 5\n    }\n  }, content, __jsx(Tooltip, {\n    title: \"New Group\",\n    arrow: true,\n    placement: \"top\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }\n  }, __jsx(Fab, {\n    size: \"large\",\n    className: classes.fabButton,\n    \"aria-label\": \"add\",\n    color: \"secondary\",\n    onClick: handleAdd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }\n  }, __jsx(GroupAddRoundedIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(GroupList, \"p1lH/QNdryKV2CDgQTAuQTS67n0=\", false, function () {\n  return [useStyles];\n});\n\n_c = GroupList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupList\");","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/components/GroupList.tsx"],"names":["React","useState","List","Fab","Tooltip","GroupAddRoundedIcon","Typography","makeStyles","Swal","GroupListItem","errorToast","useStyles","theme","root","width","backgroundColor","palette","background","paper","fabButton","position","bottom","spacing","left","right","margin","GroupList","classes","groups","setGroups","handleAdd","newGroup","groupname","players","PlayerSwal","mixin","icon","showCancelButton","confirmButtonText","footer","input","inputPlaceholder","inputValidator","value","player","progressSteps","currentProgressStep","fire","title","text","group","newGroupname","length","join","newPlayer","reason","dismiss","push","temp","curReason","preConfirm","handleDelete","focusConfirm","focusCancel","cancelButtonText","then","result","prevGroups","filter","curGroup","console","log","apiSuccess","handleRenameGroup","oldName","newName","newGroups","curName","handleRenamePlayer","oldPlayer","newPlayers","content","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport GroupAddRoundedIcon from \"@material-ui/icons/GroupAddRounded\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Swal from \"sweetalert2\";\nimport { GroupListItem } from \"./common/GroupListItem\";\nimport { errorToast } from \"../util/swals\";\n\nexport interface Group {\n  groupname: string;\n  players: string[];\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100vw\",\n    // maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  // fab: {\n  //   position: \"fixed\",\n  //   bottom: theme.spacing(4),\n  //   backgroundColor: theme.palette.success.main,\n  // },\n  fabButton: {\n    position: \"absolute\",\n    // zIndex: 1,\n    // top: -30,\n    bottom: theme.spacing(4),\n    left: 0,\n    right: 0,\n    margin: \"0 auto\",\n  },\n}));\n\nexport const GroupList: React.FC = () => {\n  // Use style\n  const classes = useStyles();\n\n  // Use state hook\n  const [groups, setGroups] = useState([]);\n\n  // Add a group\n  const handleAdd = async () => {\n    let newGroup: Group = {\n      groupname: \"\",\n      players: [],\n    };\n\n    // Template for adding players.\n    const PlayerSwal = Swal.mixin({\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonText: \"Next &rarr;\",\n      footer: \"Leave box empty to stop adding players.\",\n      input: \"text\",\n      inputPlaceholder: \"New Name\",\n      inputValidator: (value) => {\n        for (let player of newGroup.players) {\n          if (player === value) {\n            return \"Name is not unique!\";\n          }\n        }\n      },\n      progressSteps: [\"1\", \"2\", \"3\"],\n      currentProgressStep: \"1\",\n    });\n\n    // Ask for new group name.\n    const { value: newGroupname } = await Swal.fire({\n      title: \"New Group Name\",\n      text: \"Must be a unique group name.\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonText: \"Next &rarr;\",\n      input: \"text\",\n      inputPlaceholder: \"New group name\",\n      inputValidator: (value) => {\n        if (!value) {\n          return \"Enter a name.\";\n        }\n        for (let group of groups) {\n          if (group.groupname === value) {\n            return \"Name is not unique!\";\n          }\n        }\n      },\n      progressSteps: [\"1\", \"2\", \"3\"],\n      currentProgressStep: \"0\",\n    });\n    if (!newGroupname) {\n      return;\n    }\n    newGroup.groupname = `${newGroupname}`;\n\n    // Add Players until \"\" is returned.\n    let { value: newPlayer, dismiss: reason } = await PlayerSwal.fire({\n      title: `Add Player #${newGroup.players.length + 1}`,\n      text: `So far you have: ${newGroup.players.join(\", \")}`,\n    });\n    if (reason) {\n      return;\n    }\n    while (newPlayer) {\n      newGroup.players.push(`${newPlayer}`);\n      const { value: temp, dismiss: curReason } = await PlayerSwal.fire({\n        title: `Add Player #${newGroup.players.length + 1}`,\n        text: `So far you have: ${newGroup.players.join(\", \")}`,\n      });\n      if (curReason) {\n        return;\n      }\n      newPlayer = temp;\n    }\n\n    Swal.fire({\n      title: `Group: ${newGroup.groupname}`,\n      text: `Players: ${newGroup.players.join(\", \")}`,\n      icon: \"success\",\n      confirmButtonText: \"Finish\",\n      showCancelButton: true,\n      progressSteps: [\"1\", \"2\", \"3\"],\n      currentProgressStep: \"2\",\n      preConfirm: () => {\n        // If everything went well.\n        if (newGroup.groupname !== \"\" && newGroup.players.length >= 4) {\n          setGroups((groups) => [...groups, newGroup]);\n          // Call server here.\n        } else {\n          Swal.fire({\n            title: \"Something went wrong.\",\n            text: \"Remember: You need at least four players.\",\n            icon: \"error\",\n          });\n        }\n      },\n    });\n  };\n\n  // Delete a group\n  const handleDelete = (groupname: string) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: `You won't be able to revert deleting ${groupname}!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: \"Yes, delete it!\",\n      focusConfirm: false,\n      focusCancel: true,\n      cancelButtonText: \"No, cancel!\",\n    }).then((result) => {\n      if (result.value) {\n        // Save old state\n        const prevGroups = [...groups];\n        // Update UI.\n        setGroups(\n          groups.filter((curGroup) => curGroup.groupname !== groupname)\n        );\n        console.log(\",Handle delete.\", groupname, groups);\n        // Call backend and revert if error.\n        const apiSuccess = true;\n        if (!apiSuccess) {\n          errorToast.fire({ text: \"The group was already deleted.\" });\n          setGroups(prevGroups);\n        }\n      }\n    });\n  };\n\n  // Rename a group\n  const handleRenameGroup = (oldName: string, newName: string) => {\n    // New name can't be the old name.\n\n    const newGroups: Group[] = [];\n    for (let curGroup of groups) {\n      const curName = curGroup.groupname;\n      // Check if the name is unique.\n      if (newName === curName) {\n        errorToast.fire({ text: \"Group name is not unique!\" });\n        return;\n      }\n      if (curName === oldName) {\n        // Modify old name.\n        newGroups.push({ groupname: newName, players: curGroup.players });\n      } else {\n        newGroups.push(curGroup);\n      }\n    }\n    setGroups(newGroups);\n    // Call server here.\n  };\n\n  // Rename a player.\n  const handleRenamePlayer = (\n    groupname: string,\n    oldPlayer: string,\n    newPlayer: string\n  ) => {\n    // New name can't be the old name.\n    const newGroups: Group[] = [];\n    for (let curGroup of groups) {\n      let newPlayers = curGroup.players;\n      if (groupname === curGroup.groupname) {\n        // Check if the name is unique.\n        newPlayers = [];\n        for (let player of curGroup.players) {\n          if (player === newPlayer) {\n            errorToast.fire({ text: \"Group name is not unique!\" });\n            return;\n          }\n          if (player === oldPlayer) {\n            newPlayers.push(newPlayer);\n          } else {\n            newPlayers.push(player);\n          }\n        }\n        newGroups.push({ groupname: curGroup.groupname, players: newPlayers });\n      }\n      setGroups(newGroups);\n      // Call server here.\n    }\n  };\n\n  let content: React.ReactNode;\n  if (groups.length == 0) {\n    content = (\n      <Typography align=\"center\">\n        Seems like you have no groups yet. Create one by clicking the button\n        below.\n      </Typography>\n    );\n  } else {\n    content = (\n      <List component=\"nav\" className={classes.root}>\n        {groups.map((group) => {\n          return (\n            <GroupListItem\n              key={group.groupname}\n              group={group}\n              onDelete={handleDelete}\n              onRenameGroup={handleRenameGroup}\n              onRenamePlayer={handleRenamePlayer}\n            />\n          );\n        })}\n      </List>\n    );\n  }\n  return (\n    <React.Fragment>\n      {content}\n      <Tooltip title=\"New Group\" arrow placement=\"top\">\n        <Fab\n          size=\"large\"\n          className={classes.fabButton}\n          aria-label=\"add\"\n          color=\"secondary\"\n          onClick={handleAdd}\n        >\n          <GroupAddRoundedIcon />\n        </Fab>\n      </Tooltip>\n      {/* <Grid\n        container\n        spacing={0}\n        justify=\"center\"\n        style={{ minWidth: \"100vw\" }}\n      >\n        <Grid item>\n        </Grid>\n      </Grid> */}\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}