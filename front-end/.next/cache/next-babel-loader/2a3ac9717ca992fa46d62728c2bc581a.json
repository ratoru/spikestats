{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/util/swals.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { AddChips } from \"../components/addComponents/AddChips\";\nimport { AddScoreField } from \"../components/addComponents/AddScoreField\";\nimport { AddServe } from \"../components/addComponents/AddServe\";\nimport { AddConfirm } from \"../components/addComponents/AddConfirm\";\nimport { ServeTeam } from \"./types\"; // Template for error messages.\n\nexport var errorToast = Swal.mixin({\n  title: \"Something went wrong!\",\n  icon: \"error\",\n  toast: true,\n  position: \"center\",\n  showConfirmButton: false,\n  timer: 4000,\n  timerProgressBar: true\n});\nexport function teamSelection(_x) {\n  return _teamSelection.apply(this, arguments);\n} // Score Selection\n\nfunction _teamSelection() {\n  _teamSelection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(players) {\n    var emptyTeamBlue, emptyTeamRed, selectedTeams, handleSelectPlayer, handleRemovePlayer, AddGameSwal, _yield$AddGameSwal$fi, finalSelection;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            emptyTeamBlue = [-1, -1];\n            emptyTeamRed = [-1, -1];\n            selectedTeams = {\n              blueTeam: emptyTeamBlue,\n              redTeam: emptyTeamRed\n            };\n\n            handleSelectPlayer = function handleSelectPlayer(id, isBlue) {\n              if (isBlue) {\n                if (selectedTeams.blueTeam[0] === -1) {\n                  selectedTeams.blueTeam[0] = id;\n                } else {\n                  selectedTeams.blueTeam[1] = id;\n                }\n              } else {\n                if (selectedTeams.redTeam[0] === -1) {\n                  selectedTeams.redTeam[0] = id;\n                } else {\n                  selectedTeams.redTeam[1] = id;\n                }\n              }\n            };\n\n            handleRemovePlayer = function handleRemovePlayer(id, isBlue) {\n              if (isBlue) {\n                if (selectedTeams.blueTeam[0] === id) {\n                  selectedTeams.blueTeam[0] = -1;\n                } else {\n                  selectedTeams.blueTeam[1] = -1;\n                }\n              } else {\n                if (selectedTeams.redTeam[0] === id) {\n                  selectedTeams.redTeam[0] = -1;\n                } else {\n                  selectedTeams.redTeam[1] = -1;\n                }\n              }\n            };\n\n            AddGameSwal = withReactContent(Swal);\n            _context.next = 8;\n            return AddGameSwal.fire({\n              title: \"Choose Teams\",\n              html: __jsx(AddChips, {\n                players: players,\n                teams: selectedTeams,\n                onSelect: handleSelectPlayer,\n                onDelete: handleRemovePlayer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 7\n                }\n              }),\n              showCancelButton: true,\n              confirmButtonText: \"Next &rarr;\",\n              progressSteps: [\"1\", \"2\", \"3\", \"4\"],\n              currentProgressStep: \"0\",\n              preConfirm: function preConfirm() {\n                if (selectedTeams.blueTeam[0] === -1 || selectedTeams.blueTeam[1] === -1 || selectedTeams.redTeam[0] === -1 || selectedTeams.redTeam[1] === -1) {\n                  AddGameSwal.showValidationMessage(\"You must select four players.\");\n                  return false;\n                }\n\n                return selectedTeams;\n              }\n            });\n\n          case 8:\n            _yield$AddGameSwal$fi = _context.sent;\n            finalSelection = _yield$AddGameSwal$fi.value;\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              if (!finalSelection) {\n                reject();\n              } else {\n                resolve(finalSelection);\n              }\n            }));\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _teamSelection.apply(this, arguments);\n}\n\nexport function scoreSelection(_x2, _x3) {\n  return _scoreSelection.apply(this, arguments);\n} // Serve Selection\n\nfunction _scoreSelection() {\n  _scoreSelection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(players, teamSelection) {\n    var blueScore, redScore, handleChange, scoreSwal, _yield$scoreSwal$fire, finalScore;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            handleChange = function handleChange(score, isBlue) {\n              isBlue ? blueScore = score : redScore = score;\n            };\n\n            scoreSwal = withReactContent(Swal);\n            _context2.next = 4;\n            return scoreSwal.fire({\n              title: \"Enter the Score\",\n              html: __jsx(AddScoreField, {\n                players: players,\n                teams: teamSelection,\n                blueScore: blueScore,\n                redScore: redScore,\n                onChange: handleChange,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 7\n                }\n              }),\n              showCancelButton: true,\n              confirmButtonText: \"Next &rarr;\",\n              progressSteps: [\"1\", \"2\", \"3\", \"4\"],\n              currentProgressStep: \"1\",\n              preConfirm: function preConfirm() {\n                if (blueScore >= 0 && redScore >= 0 && blueScore !== redScore) {\n                  var score = [blueScore, redScore];\n                  return score;\n                }\n\n                scoreSwal.showValidationMessage(\"The score can't be a tie.\");\n                return false;\n              }\n            });\n\n          case 4:\n            _yield$scoreSwal$fire = _context2.sent;\n            finalScore = _yield$scoreSwal$fire.value;\n            return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n              if (!finalScore) {\n                reject();\n              } else {\n                resolve(finalScore);\n              }\n            }));\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n  return _scoreSelection.apply(this, arguments);\n}\n\nexport function serveSelection(_x4, _x5, _x6) {\n  return _serveSelection.apply(this, arguments);\n} // Confirm Selection\n\nfunction _serveSelection() {\n  _serveSelection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(players, teamSelection, score) {\n    var curServeSelection, handleChange, scoreSwal, _yield$scoreSwal$fire2, teamWithServe;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            curServeSelection = \"\";\n\n            handleChange = function handleChange(newSelection) {\n              curServeSelection = newSelection;\n            };\n\n            scoreSwal = withReactContent(Swal);\n            _context3.next = 5;\n            return scoreSwal.fire({\n              title: \"Initial Serve\",\n              html: __jsx(AddServe, {\n                players: players,\n                teams: teamSelection,\n                score: score,\n                onChange: handleChange,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 7\n                }\n              }),\n              showCancelButton: true,\n              confirmButtonText: \"Next &rarr;\",\n              progressSteps: [\"1\", \"2\", \"3\", \"4\"],\n              currentProgressStep: \"2\",\n              preConfirm: function preConfirm() {\n                if (curServeSelection === \"\") {\n                  scoreSwal.showValidationMessage(\"Select who had the initial serve.\");\n                  return false;\n                }\n\n                return curServeSelection;\n              }\n            });\n\n          case 5:\n            _yield$scoreSwal$fire2 = _context3.sent;\n            teamWithServe = _yield$scoreSwal$fire2.value;\n            return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n              if (!teamWithServe) {\n                reject();\n              } else {\n                resolve(teamWithServe === \"blue\" ? ServeTeam.Blue : ServeTeam.Red);\n              }\n            }));\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n  return _serveSelection.apply(this, arguments);\n}\n\nexport function confirmSelection(_x7, _x8, _x9, _x10) {\n  return _confirmSelection.apply(this, arguments);\n}\n\nfunction _confirmSelection() {\n  _confirmSelection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(players, teamSelection, score, serve) {\n    var scoreSwal, result;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            scoreSwal = withReactContent(Swal);\n            _context4.next = 3;\n            return scoreSwal.fire({\n              icon: \"success\",\n              title: \"Confirm Game\",\n              html: __jsx(AddConfirm, {\n                players: players,\n                teams: teamSelection,\n                score: score,\n                serve: serve,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 7\n                }\n              }),\n              showCancelButton: true,\n              confirmButtonText: \"Finish\",\n              progressSteps: [\"1\", \"2\", \"3\", \"4\"],\n              currentProgressStep: \"3\"\n            });\n\n          case 3:\n            result = _context4.sent;\n            return _context4.abrupt(\"return\", new Promise(function (resolve, reject) {\n              if (!result) {\n                reject();\n              } else {\n                resolve(true);\n              }\n            }));\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, this);\n  }));\n  return _confirmSelection.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/util/swals.tsx"],"names":["React","Swal","withReactContent","AddChips","AddScoreField","AddServe","AddConfirm","ServeTeam","errorToast","mixin","title","icon","toast","position","showConfirmButton","timer","timerProgressBar","teamSelection","players","emptyTeamBlue","emptyTeamRed","selectedTeams","blueTeam","redTeam","handleSelectPlayer","id","isBlue","handleRemovePlayer","AddGameSwal","fire","html","showCancelButton","confirmButtonText","progressSteps","currentProgressStep","preConfirm","showValidationMessage","finalSelection","value","Promise","resolve","reject","scoreSelection","handleChange","score","blueScore","redScore","scoreSwal","finalScore","serveSelection","curServeSelection","newSelection","teamWithServe","Blue","Red","confirmSelection","serve","result"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { AddChips } from \"../components/addComponents/AddChips\";\nimport { AddScoreField } from \"../components/addComponents/AddScoreField\";\nimport { AddServe } from \"../components/addComponents/AddServe\";\nimport { AddConfirm } from \"../components/addComponents/AddConfirm\";\nimport { Team, Players, ServeTeam } from \"./types\";\n\n// Template for error messages.\nexport const errorToast = Swal.mixin({\n  title: \"Something went wrong!\",\n  icon: \"error\",\n  toast: true,\n  position: \"center\",\n  showConfirmButton: false,\n  timer: 4000,\n  timerProgressBar: true,\n});\n\ninterface Selection {\n  blueTeam: Team;\n  redTeam: Team;\n}\nexport async function teamSelection(players: Players): Promise<Selection> {\n  const emptyTeamBlue: Team = [-1, -1];\n  const emptyTeamRed: Team = [-1, -1];\n  const selectedTeams = { blueTeam: emptyTeamBlue, redTeam: emptyTeamRed };\n  const handleSelectPlayer = (id: number, isBlue: boolean) => {\n    if (isBlue) {\n      if (selectedTeams.blueTeam[0] === -1) {\n        selectedTeams.blueTeam[0] = id;\n      } else {\n        selectedTeams.blueTeam[1] = id;\n      }\n    } else {\n      if (selectedTeams.redTeam[0] === -1) {\n        selectedTeams.redTeam[0] = id;\n      } else {\n        selectedTeams.redTeam[1] = id;\n      }\n    }\n  };\n  const handleRemovePlayer = (id: number, isBlue: boolean) => {\n    if (isBlue) {\n      if (selectedTeams.blueTeam[0] === id) {\n        selectedTeams.blueTeam[0] = -1;\n      } else {\n        selectedTeams.blueTeam[1] = -1;\n      }\n    } else {\n      if (selectedTeams.redTeam[0] === id) {\n        selectedTeams.redTeam[0] = -1;\n      } else {\n        selectedTeams.redTeam[1] = -1;\n      }\n    }\n  };\n  const AddGameSwal = withReactContent(Swal);\n  const { value: finalSelection } = await AddGameSwal.fire({\n    title: \"Choose Teams\",\n    html: (\n      <AddChips\n        players={players}\n        teams={selectedTeams}\n        onSelect={handleSelectPlayer}\n        onDelete={handleRemovePlayer}\n      />\n    ),\n    showCancelButton: true,\n    confirmButtonText: \"Next &rarr;\",\n    progressSteps: [\"1\", \"2\", \"3\", \"4\"],\n    currentProgressStep: \"0\",\n    preConfirm: () => {\n      if (\n        selectedTeams.blueTeam[0] === -1 ||\n        selectedTeams.blueTeam[1] === -1 ||\n        selectedTeams.redTeam[0] === -1 ||\n        selectedTeams.redTeam[1] === -1\n      ) {\n        AddGameSwal.showValidationMessage(\"You must select four players.\");\n        return false;\n      }\n      return selectedTeams;\n    },\n  });\n  // Correct and neccessary syntax??\n  return new Promise((resolve, reject) => {\n    if (!finalSelection) {\n      reject();\n    } else {\n      resolve(finalSelection);\n    }\n  });\n}\n\n// Score Selection\nexport async function scoreSelection(\n  players: Players,\n  teamSelection: Selection\n): Promise<[number, number]> {\n  let blueScore: number;\n  let redScore: number;\n  const handleChange = (score: number, isBlue: boolean) => {\n    isBlue ? (blueScore = score) : (redScore = score);\n  };\n  const scoreSwal = withReactContent(Swal);\n  const { value: finalScore } = await scoreSwal.fire({\n    title: \"Enter the Score\",\n    html: (\n      <AddScoreField\n        players={players}\n        teams={teamSelection}\n        blueScore={blueScore}\n        redScore={redScore}\n        onChange={handleChange}\n      />\n    ),\n    showCancelButton: true,\n    confirmButtonText: \"Next &rarr;\",\n    progressSteps: [\"1\", \"2\", \"3\", \"4\"],\n    currentProgressStep: \"1\",\n    preConfirm: () => {\n      if (blueScore >= 0 && redScore >= 0 && blueScore !== redScore) {\n        const score: [number, number] = [blueScore, redScore];\n        return score;\n      }\n      scoreSwal.showValidationMessage(\"The score can't be a tie.\");\n      return false;\n    },\n  });\n  // Correct and neccessary syntax??\n  return new Promise((resolve, reject) => {\n    if (!finalScore) {\n      reject();\n    } else {\n      resolve(finalScore);\n    }\n  });\n}\n\n// Serve Selection\nexport async function serveSelection(\n  players: Players,\n  teamSelection: Selection,\n  score: [number, number]\n): Promise<ServeTeam> {\n  let curServeSelection = \"\";\n  const handleChange = (newSelection: string) => {\n    curServeSelection = newSelection;\n  };\n\n  const scoreSwal = withReactContent(Swal);\n  const { value: teamWithServe } = await scoreSwal.fire({\n    title: \"Initial Serve\",\n    html: (\n      <AddServe\n        players={players}\n        teams={teamSelection}\n        score={score}\n        onChange={handleChange}\n      />\n    ),\n    showCancelButton: true,\n    confirmButtonText: \"Next &rarr;\",\n    progressSteps: [\"1\", \"2\", \"3\", \"4\"],\n    currentProgressStep: \"2\",\n    preConfirm: () => {\n      if (curServeSelection === \"\") {\n        scoreSwal.showValidationMessage(\"Select who had the initial serve.\");\n        return false;\n      }\n      return curServeSelection;\n    },\n  });\n  // Correct and neccessary syntax??\n  return new Promise((resolve, reject) => {\n    if (!teamWithServe) {\n      reject();\n    } else {\n      resolve(teamWithServe === \"blue\" ? ServeTeam.Blue : ServeTeam.Red);\n    }\n  });\n}\n\n// Confirm Selection\nexport async function confirmSelection(\n  players: Players,\n  teamSelection: Selection,\n  score: [number, number],\n  serve: ServeTeam\n): Promise<boolean> {\n  const scoreSwal = withReactContent(Swal);\n  const result = await scoreSwal.fire({\n    icon: \"success\",\n    title: \"Confirm Game\",\n    html: (\n      <AddConfirm\n        players={players}\n        teams={teamSelection}\n        score={score}\n        serve={serve}\n      />\n    ),\n    showCancelButton: true,\n    confirmButtonText: \"Finish\",\n    progressSteps: [\"1\", \"2\", \"3\", \"4\"],\n    currentProgressStep: \"3\",\n  });\n  // Correct and neccessary syntax??\n  return new Promise((resolve, reject) => {\n    if (!result) {\n      reject();\n    } else {\n      resolve(true);\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}