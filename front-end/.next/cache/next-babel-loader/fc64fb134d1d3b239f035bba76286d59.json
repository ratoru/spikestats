{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/pages/stats/[groupname].tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { MainBar } from \"../../components/MainBar\";\nimport { NavStats } from \"../../components/NavStats\";\nimport { GameTable } from \"../../components/GameTable\";\nimport { AllCharts } from \"../../components/AllCharts\";\nimport { ServeTeam } from \"../../util/types\";\nimport { teamSelection, scoreSelection, serveSelection, confirmSelection } from \"../../util/swals\";\nexport default function Stats() {\n  const router = useRouter();\n  const {\n    groupname\n  } = router.query; // Testing\n\n  const ids = {\n    id1: \"5abf58a4-7b23-44dc-b497-de518b6b9b8b\",\n    id2: \"0a38dddb-07ef-498e-8d5f-0e02790c91e2\",\n    id3: \"b9d3b52e-9ae9-4d50-9b2e-dc1d648831fb\",\n    id4: \"e430c506-18eb-4b15-98da-938ebb8ee4c0\",\n    id5: \"991acbc0-4969-4de0-9be2-c1b7771342a2\"\n  }; // For testing\n\n  const examplePlayers = new Map([[ids.id1, \"Raphael\"], [ids.id2, \"Alex\"], [ids.id3, \"Valentin\"], [ids.id4, \"Sonam\"], [ids.id5, \"Timon\"]]);\n  const exampleGames = [{\n    id: uuidv4(),\n    blueTeam: [ids.id1, ids.id3],\n    redTeam: [ids.id2, ids.id5],\n    score: [21, 17],\n    serve: ServeTeam.Red,\n    date: new Date()\n  }, {\n    id: uuidv4(),\n    blueTeam: [ids.id1, ids.id2],\n    redTeam: [ids.id4, ids.id3],\n    score: [10, 21],\n    serve: ServeTeam.Red,\n    date: new Date()\n  }, {\n    id: uuidv4(),\n    blueTeam: [ids.id1, ids.id3],\n    redTeam: [ids.id4, ids.id2],\n    score: [23, 21],\n    serve: ServeTeam.Red,\n    date: new Date()\n  }, {\n    id: uuidv4(),\n    blueTeam: [ids.id5, ids.id2],\n    redTeam: [ids.id4, ids.id3],\n    score: [15, 21],\n    serve: ServeTeam.Red,\n    date: new Date()\n  }];\n  const {\n    0: games,\n    1: setGames\n  } = useState(exampleGames);\n\n  const handleDelete = id => {\n    console.log(\"Delete this game from the server.\", id);\n    setGames(games.filter(game => game[\"id\"] !== id));\n  };\n\n  const handleAdd = async () => {\n    const addedGame = {\n      id: uuidv4(),\n      blueTeam: [\"\", \"\"],\n      redTeam: [\"\", \"\"],\n      score: [-1, -1],\n      serve: ServeTeam.Blue,\n      date: new Date()\n    };\n    teamSelection(examplePlayers).then(curTeamSelection => {\n      addedGame.blueTeam = curTeamSelection.blueTeam;\n      addedGame.redTeam = curTeamSelection.redTeam;\n      return scoreSelection(examplePlayers, curTeamSelection);\n    }).then(curScore => {\n      addedGame.score = curScore;\n      return serveSelection(examplePlayers, {\n        blueTeam: addedGame.blueTeam,\n        redTeam: addedGame.redTeam\n      }, curScore);\n    }).then(curServingTeam => {\n      addedGame.serve = curServingTeam;\n      return confirmSelection(examplePlayers, {\n        blueTeam: addedGame.blueTeam,\n        redTeam: addedGame.redTeam\n      }, addedGame.score, curServingTeam);\n    }).then(() => {\n      setGames(games => [...games, addedGame]); // Call server!\n    }).catch(() => {\n      return;\n    });\n  };\n\n  const tab1 = __jsx(AllCharts, {\n    groupname: groupname,\n    games: games,\n    players: examplePlayers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  });\n\n  const tab2 = __jsx(GameTable, {\n    onDelete: handleDelete,\n    games: games,\n    players: examplePlayers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  });\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, __jsx(MainBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), __jsx(NavStats, {\n    tab1Content: tab1,\n    tab2Content: tab2,\n    onAdd: handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/pages/stats/[groupname].tsx"],"names":["React","useState","useRouter","v4","uuidv4","MainBar","NavStats","GameTable","AllCharts","ServeTeam","teamSelection","scoreSelection","serveSelection","confirmSelection","Stats","router","groupname","query","ids","id1","id2","id3","id4","id5","examplePlayers","Map","exampleGames","id","blueTeam","redTeam","score","serve","Red","date","Date","games","setGames","handleDelete","console","log","filter","game","handleAdd","addedGame","Blue","then","curTeamSelection","curScore","curServingTeam","catch","tab1","tab2"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { MainBar } from \"../../components/MainBar\";\nimport { NavStats } from \"../../components/NavStats\";\nimport { GameTable } from \"../../components/GameTable\";\nimport { AllCharts } from \"../../components/AllCharts\";\nimport { Game, Players, ServeTeam } from \"../../util/types\";\nimport {\n  teamSelection,\n  scoreSelection,\n  serveSelection,\n  confirmSelection,\n} from \"../../util/swals\";\n\nexport default function Stats() {\n  const router = useRouter();\n  const { groupname } = router.query;\n\n  // Testing\n  const ids = {\n    id1: \"5abf58a4-7b23-44dc-b497-de518b6b9b8b\",\n    id2: \"0a38dddb-07ef-498e-8d5f-0e02790c91e2\",\n    id3: \"b9d3b52e-9ae9-4d50-9b2e-dc1d648831fb\",\n    id4: \"e430c506-18eb-4b15-98da-938ebb8ee4c0\",\n    id5: \"991acbc0-4969-4de0-9be2-c1b7771342a2\",\n  };\n  // For testing\n  const examplePlayers: Players = new Map([\n    [ids.id1, \"Raphael\"],\n    [ids.id2, \"Alex\"],\n    [ids.id3, \"Valentin\"],\n    [ids.id4, \"Sonam\"],\n    [ids.id5, \"Timon\"],\n  ]);\n\n  const exampleGames: Game[] = [\n    {\n      id: uuidv4(),\n      blueTeam: [ids.id1, ids.id3],\n      redTeam: [ids.id2, ids.id5],\n      score: [21, 17],\n      serve: ServeTeam.Red,\n      date: new Date(),\n    },\n    {\n      id: uuidv4(),\n      blueTeam: [ids.id1, ids.id2],\n      redTeam: [ids.id4, ids.id3],\n      score: [10, 21],\n      serve: ServeTeam.Red,\n      date: new Date(),\n    },\n    {\n      id: uuidv4(),\n      blueTeam: [ids.id1, ids.id3],\n      redTeam: [ids.id4, ids.id2],\n      score: [23, 21],\n      serve: ServeTeam.Red,\n      date: new Date(),\n    },\n    {\n      id: uuidv4(),\n      blueTeam: [ids.id5, ids.id2],\n      redTeam: [ids.id4, ids.id3],\n      score: [15, 21],\n      serve: ServeTeam.Red,\n      date: new Date(),\n    },\n  ];\n  const [games, setGames] = useState(exampleGames);\n  const handleDelete = (id: string) => {\n    console.log(\"Delete this game from the server.\", id);\n    setGames(games.filter((game) => game[\"id\"] !== id));\n  };\n\n  const handleAdd = async () => {\n    const addedGame: Game = {\n      id: uuidv4(),\n      blueTeam: [\"\", \"\"],\n      redTeam: [\"\", \"\"],\n      score: [-1, -1],\n      serve: ServeTeam.Blue,\n      date: new Date(),\n    };\n    teamSelection(examplePlayers)\n      .then((curTeamSelection) => {\n        addedGame.blueTeam = curTeamSelection.blueTeam;\n        addedGame.redTeam = curTeamSelection.redTeam;\n        return scoreSelection(examplePlayers, curTeamSelection);\n      })\n      .then((curScore) => {\n        addedGame.score = curScore;\n        return serveSelection(\n          examplePlayers,\n          { blueTeam: addedGame.blueTeam, redTeam: addedGame.redTeam },\n          curScore\n        );\n      })\n      .then((curServingTeam) => {\n        addedGame.serve = curServingTeam;\n        return confirmSelection(\n          examplePlayers,\n          { blueTeam: addedGame.blueTeam, redTeam: addedGame.redTeam },\n          addedGame.score,\n          curServingTeam\n        );\n      })\n      .then(() => {\n        setGames((games) => [...games, addedGame]);\n        // Call server!\n      })\n      .catch(() => {\n        return;\n      });\n  };\n\n  const tab1 = (\n    <AllCharts groupname={groupname} games={games} players={examplePlayers} />\n  );\n  const tab2 = (\n    <GameTable onDelete={handleDelete} games={games} players={examplePlayers} />\n  );\n\n  return (\n    <React.Fragment>\n      <MainBar />\n      <NavStats tab1Content={tab1} tab2Content={tab2} onAdd={handleAdd} />\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}