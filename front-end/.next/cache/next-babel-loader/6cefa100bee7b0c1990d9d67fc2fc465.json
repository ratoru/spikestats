{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/components/AddServe.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SportsHandballIcon from \"@material-ui/icons/SportsHandball\";\nimport SentimentVerySatisfiedRoundedIcon from \"@material-ui/icons/SentimentVerySatisfiedRounded\";\nimport EmojiPeopleRoundedIcon from \"@material-ui/icons/EmojiPeopleRounded\";\nexport var AddServe = function AddServe(_ref) {\n  _s();\n\n  var players = _ref.players,\n      teams = _ref.teams,\n      score = _ref.score;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedValue = _React$useState2[0],\n      setSelectedValue = _React$useState2[1];\n\n  var handleChange = function handleChange(event) {\n    setSelectedValue(event.target.value);\n  };\n\n  return __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    justify: \"center\",\n    alignItems: \"baseline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 5,\n    container: true,\n    spacing: 2,\n    justify: \"space-around\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, teams.blueTeam.map(function (id) {\n    return __jsx(Grid, {\n      item: true,\n      key: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, __jsx(Chip, {\n      key: id,\n      color: \"primary\",\n      label: players.get(id),\n      icon: __jsx(SentimentVerySatisfiedRoundedIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 23\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }));\n  })), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, score[0], \" : \", score[1])), __jsx(Grid, {\n    item: true,\n    xs: 5,\n    container: true,\n    spacing: 2,\n    justify: \"space-around\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, teams.redTeam.map(function (id) {\n    return __jsx(Grid, {\n      item: true,\n      key: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, __jsx(Chip, {\n      key: id,\n      color: \"secondary\",\n      label: players.get(id),\n      icon: __jsx(EmojiPeopleRoundedIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 23\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }));\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    container: true,\n    spacing: 2,\n    justify: \"space-around\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Blue Serve\"), __jsx(Radio, {\n    checked: selectedValue === \"blue\",\n    onChange: handleChange,\n    color: \"primary\",\n    checkedIcon: __jsx(SportsHandballIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 26\n      }\n    }),\n    value: \"blue\",\n    name: \"blueServe\",\n    inputProps: {\n      \"aria-label\": \"Initial serve blue\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    display: \"inline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Red Serve\"), __jsx(Radio, {\n    checked: selectedValue === \"red\",\n    onChange: handleChange,\n    color: \"secondary\",\n    checkedIcon: __jsx(SportsHandballIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 26\n      }\n    }),\n    value: \"red\",\n    name: \"redServe\",\n    inputProps: {\n      \"aria-label\": \"Initial serve red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(AddServe, \"3549XmxMMOyg6yW+rzOI1hhPUfs=\");\n\n_c = AddServe;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddServe\");","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/components/AddServe.tsx"],"names":["React","Chip","Grid","Radio","Typography","SportsHandballIcon","SentimentVerySatisfiedRoundedIcon","EmojiPeopleRoundedIcon","AddServe","players","teams","score","useState","selectedValue","setSelectedValue","handleChange","event","target","value","blueTeam","map","id","get","textAlign","redTeam"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SportsHandballIcon from \"@material-ui/icons/SportsHandball\";\nimport SentimentVerySatisfiedRoundedIcon from \"@material-ui/icons/SentimentVerySatisfiedRounded\";\nimport EmojiPeopleRoundedIcon from \"@material-ui/icons/EmojiPeopleRounded\";\nimport { Players, Team } from \"../util/types\";\n\ninterface PlayerChip {\n  label: string;\n  isBlue: boolean;\n  isRed: boolean;\n  disabled: boolean;\n  id: number;\n}\n\ninterface AddServeProps {\n  players: Players;\n  teams: { blueTeam: Team; redTeam: Team };\n  score: [number, number];\n}\n\nexport const AddServe: React.FC<AddServeProps> = ({\n  players,\n  teams,\n  score,\n}) => {\n  const [selectedValue, setSelectedValue] = React.useState(\"\");\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedValue(event.target.value);\n  };\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      spacing={2}\n      justify=\"center\"\n      alignItems=\"baseline\"\n    >\n      <Grid\n        item\n        xs={5}\n        container\n        spacing={2}\n        justify=\"space-around\"\n        alignItems=\"center\"\n      >\n        {teams.blueTeam.map((id) => {\n          return (\n            <Grid item key={id}>\n              <Chip\n                key={id}\n                color=\"primary\"\n                label={players.get(id)}\n                icon={<SentimentVerySatisfiedRoundedIcon />}\n              />\n            </Grid>\n          );\n        })}\n      </Grid>\n      <Grid item xs={2}>\n        <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n          {score[0]} : {score[1]}\n        </Typography>\n      </Grid>\n      <Grid\n        item\n        xs={5}\n        container\n        spacing={2}\n        justify=\"space-around\"\n        alignItems=\"center\"\n      >\n        {teams.redTeam.map((id) => {\n          return (\n            <Grid item key={id}>\n              <Chip\n                key={id}\n                color=\"secondary\"\n                label={players.get(id)}\n                icon={<EmojiPeopleRoundedIcon />}\n              />\n            </Grid>\n          );\n        })}\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        container\n        spacing={2}\n        justify=\"space-around\"\n        alignItems=\"center\"\n      >\n        <Grid item>\n          <Typography variant=\"h6\">Blue Serve</Typography>\n          <Radio\n            checked={selectedValue === \"blue\"}\n            onChange={handleChange}\n            color=\"primary\"\n            checkedIcon={<SportsHandballIcon />}\n            value=\"blue\"\n            name=\"blueServe\"\n            inputProps={{ \"aria-label\": \"Initial serve blue\" }}\n          />\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\" display=\"inline\">\n            Red Serve\n          </Typography>\n          <Radio\n            checked={selectedValue === \"red\"}\n            onChange={handleChange}\n            color=\"secondary\"\n            checkedIcon={<SportsHandballIcon />}\n            value=\"red\"\n            name=\"redServe\"\n            inputProps={{ \"aria-label\": \"Initial serve red\" }}\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}