{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/components/LoginForm.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Typography } from \"@material-ui/core\";\nimport { InputFormField } from \"./common/InputFormField\";\nvar SignupSchema = Yup.object().shape({\n  username: Yup.string().min(3, \"Too short!\").max(30, \"Too long!\").required(\"Required!\"),\n  password: Yup.string().min(4, \"Too short!\").max(30, \"Too long\").required(\"Required!\")\n});\nexport var LoginForm = function LoginForm(_ref) {\n  var header = _ref.header;\n  var initialValues = {\n    username: \"\",\n    password: \"\"\n  };\n\n  var handleSubmit = function handleSubmit(values) {\n    console.log(\"Submitted \", values);\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(Typography, {\n    variant: \"h1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, header), __jsx(Formik, {\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: SignupSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, function (_ref2) {\n    var dirty = _ref2.dirty,\n        isValid = _ref2.isValid,\n        handleReset = _ref2.handleReset;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, __jsx(InputFormField, {\n      name: \"username\",\n      label: \"Username\",\n      isValid: isValid,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }), __jsx(InputFormField, {\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }), __jsx(\"button\", {\n      disabled: !dirty || !isValid,\n      onClick: handleReset,\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, \"Submit\"));\n  }));\n};\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/components/LoginForm.tsx"],"names":["React","Formik","Form","Yup","Typography","InputFormField","SignupSchema","object","shape","username","string","min","max","required","password","LoginForm","header","initialValues","handleSubmit","values","console","log","dirty","isValid","handleReset"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,cAAT,QAA+B,yBAA/B;AAUA,IAAMC,YAAY,GAAGH,GAAG,CAACI,MAAJ,GAAaC,KAAb,CAAmB;AACtCC,EAAAA,QAAQ,EAAEN,GAAG,CAACO,MAAJ,GACPC,GADO,CACH,CADG,EACA,YADA,EAEPC,GAFO,CAEH,EAFG,EAEC,WAFD,EAGPC,QAHO,CAGE,WAHF,CAD4B;AAKtCC,EAAAA,QAAQ,EAAEX,GAAG,CAACO,MAAJ,GACPC,GADO,CACH,CADG,EACA,YADA,EAEPC,GAFO,CAEH,EAFG,EAEC,UAFD,EAGPC,QAHO,CAGE,WAHF;AAL4B,CAAnB,CAArB;AAWA,OAAO,IAAME,SAAmC,GAAG,SAAtCA,SAAsC,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AACjE,MAAMC,aAAyB,GAAG;AAChCR,IAAAA,QAAQ,EAAE,EADsB;AAEhCK,IAAAA,QAAQ,EAAE;AAFsB,GAAlC;;AAIA,MAAMI,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAA8B;AACjDC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,MAA1B;AACD,GAFD;;AAIA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BH,MAA1B,CADF,EAEE,MAAC,MAAD;AACE,IAAA,aAAa,EAAEC,aADjB;AAEE,IAAA,QAAQ,EAAEC,YAFZ;AAGE,IAAA,gBAAgB,EAAEZ,YAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,iBAAqC;AAAA,QAAlCgB,KAAkC,SAAlCA,KAAkC;AAAA,QAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,QAAlBC,WAAkB,SAAlBA,WAAkB;AACpC,WACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,cAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAC,UAFR;AAGE,MAAA,OAAO,EAAED,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,MAAC,cAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAC,UAFR;AAGE,MAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAWE;AACE,MAAA,QAAQ,EAAE,CAACD,KAAD,IAAU,CAACC,OADvB;AAEE,MAAA,OAAO,EAAEC,WAFX;AAGE,MAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,CADF;AAqBD,GA3BH,CAFF,CADF;AAkCD,CA3CM;KAAMT,S","sourcesContent":["import React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Typography } from \"@material-ui/core\";\nimport { InputFormField } from \"./common/InputFormField\";\n\ninterface FormValues {\n  username: string;\n  password: string;\n}\ninterface LoginFormProps {\n  header: string;\n}\n\nconst SignupSchema = Yup.object().shape({\n  username: Yup.string()\n    .min(3, \"Too short!\")\n    .max(30, \"Too long!\")\n    .required(\"Required!\"),\n  password: Yup.string()\n    .min(4, \"Too short!\")\n    .max(30, \"Too long\")\n    .required(\"Required!\"),\n});\n\nexport const LoginForm: React.FC<LoginFormProps> = ({ header }) => {\n  const initialValues: FormValues = {\n    username: \"\",\n    password: \"\",\n  };\n  const handleSubmit = (values: FormValues): void => {\n    console.log(\"Submitted \", values);\n  };\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h1\">{header}</Typography>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={SignupSchema}\n      >\n        {({ dirty, isValid, handleReset }) => {\n          return (\n            <Form>\n              <InputFormField\n                name=\"username\"\n                label=\"Username\"\n                isValid={isValid}\n              />\n              <InputFormField\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n              />\n              <button\n                disabled={!dirty || !isValid}\n                onClick={handleReset}\n                type=\"submit\"\n              >\n                Submit\n              </button>\n            </Form>\n          );\n        }}\n      </Formik>\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}