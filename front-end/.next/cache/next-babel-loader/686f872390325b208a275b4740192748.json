{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/components/GroupList.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useState } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport GroupAddRoundedIcon from \"@material-ui/icons/GroupAddRounded\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Swal from \"sweetalert2\";\nimport { GroupListItem } from \"./common/GroupListItem\";\n\nvar handleRenameGroup = function handleRenameGroup(groupname) {\n  console.log(\"Rename this group\", groupname);\n};\n\nvar handleRenamePlayer = function handleRenamePlayer(groupname, player) {\n  console.log(\"Rename this player\", groupname, player);\n};\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100vw\",\n      // maxWidth: 360,\n      backgroundColor: theme.palette.background.paper\n    },\n    fab: {\n      position: \"fixed\",\n      bottom: theme.spacing(4),\n      backgroundColor: theme.palette.success.main\n    }\n  };\n});\nexport var GroupList = function GroupList() {\n  _s();\n\n  // Use style\n  var classes = useStyles(); // Use state hook\n\n  var _useState = useState([]),\n      groups = _useState[0],\n      setGroups = _useState[1]; // Add a group\n\n\n  var handleAdd = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var newGroup, PlayerSwal, _yield$Swal$fire, newGroupname, _yield$PlayerSwal$fir, newPlayer, reason, _yield$PlayerSwal$fir2, temp, curReason;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              newGroup = {\n                groupname: \"\",\n                players: []\n              }; // Template for adding players.\n\n              PlayerSwal = Swal.mixin({\n                icon: \"question\",\n                showCancelButton: true,\n                confirmButtonText: \"Next &rarr;\",\n                footer: \"Leave box empty to stop adding players.\",\n                input: \"text\",\n                inputPlaceholder: \"New Name\",\n                inputValidator: function inputValidator(value) {\n                  var _iterator = _createForOfIteratorHelper(newGroup.players),\n                      _step;\n\n                  try {\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      var player = _step.value;\n\n                      if (player === value) {\n                        return \"Name is not unique!\";\n                      }\n                    }\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n                },\n                progressSteps: [\"1\", \"2\", \"3\"],\n                currentProgressStep: \"1\"\n              }); // Ask for new group name.\n\n              _context.next = 4;\n              return Swal.fire({\n                title: \"New Group Name\",\n                text: \"Must be a unique group name.\",\n                icon: \"question\",\n                showCancelButton: true,\n                confirmButtonText: \"Next &rarr;\",\n                input: \"text\",\n                inputPlaceholder: \"New group name\",\n                inputValidator: function inputValidator(value) {\n                  if (!value) {\n                    return \"Enter a name.\";\n                  }\n\n                  var _iterator2 = _createForOfIteratorHelper(groups),\n                      _step2;\n\n                  try {\n                    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                      var group = _step2.value;\n\n                      if (group.groupname === value) {\n                        return \"Name is not unique!\";\n                      }\n                    }\n                  } catch (err) {\n                    _iterator2.e(err);\n                  } finally {\n                    _iterator2.f();\n                  }\n                },\n                progressSteps: [\"1\", \"2\", \"3\"],\n                currentProgressStep: \"0\"\n              });\n\n            case 4:\n              _yield$Swal$fire = _context.sent;\n              newGroupname = _yield$Swal$fire.value;\n\n              if (newGroupname) {\n                _context.next = 8;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 8:\n              newGroup.groupname = \"\".concat(newGroupname); // Add Players until \"\" is returned.\n\n              _context.next = 11;\n              return PlayerSwal.fire({\n                title: \"Add Player #\".concat(newGroup.players.length + 1),\n                text: \"So far you have: \".concat(newGroup.players.join(\" \"))\n              });\n\n            case 11:\n              _yield$PlayerSwal$fir = _context.sent;\n              newPlayer = _yield$PlayerSwal$fir.value;\n              reason = _yield$PlayerSwal$fir.dismiss;\n\n              if (!reason) {\n                _context.next = 16;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 16:\n              if (!newPlayer) {\n                _context.next = 28;\n                break;\n              }\n\n              newGroup.players.push(\"\".concat(newPlayer));\n              _context.next = 20;\n              return PlayerSwal.fire({\n                title: \"Add Player #\".concat(newGroup.players.length + 1),\n                text: \"So far you have: \".concat(newGroup.players.join(\" \"))\n              });\n\n            case 20:\n              _yield$PlayerSwal$fir2 = _context.sent;\n              temp = _yield$PlayerSwal$fir2.value;\n              curReason = _yield$PlayerSwal$fir2.dismiss;\n\n              if (!curReason) {\n                _context.next = 25;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 25:\n              newPlayer = temp;\n              _context.next = 16;\n              break;\n\n            case 28:\n              Swal.fire({\n                title: \"Group: \".concat(newGroup.groupname),\n                text: \"Players: \".concat(newGroup.players.join(\" \")),\n                icon: \"success\",\n                confirmButtonText: \"Finish\",\n                showCancelButton: true,\n                progressSteps: [\"1\", \"2\", \"3\"],\n                currentProgressStep: \"2\",\n                preConfirm: function preConfirm() {\n                  // If everything went well.\n                  if (newGroup.groupname !== \"\" && newGroup.players.length >= 4) {\n                    setGroups(function (groups) {\n                      return [].concat(_toConsumableArray(groups), [newGroup]);\n                    }); // Call server here.\n                  } else {\n                    Swal.fire({\n                      title: \"Something went wrong.\",\n                      text: \"Remember: You need at least four players.\",\n                      icon: \"error\"\n                    });\n                  }\n                }\n              });\n\n            case 29:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleAdd() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // Delete a group\n\n\n  var handleDelete = function handleDelete(groupname) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert deleting \".concat(groupname, \"!\"),\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: \"Yes, delete it!\",\n      focusConfirm: false,\n      focusCancel: true,\n      cancelButtonText: \"No, cancel!\"\n    }).then(function (result) {\n      if (result.value) {\n        // Save old state\n        var prevGroups = _toConsumableArray(groups); // Update UI.\n\n\n        setGroups(groups.filter(function (curGroup) {\n          return curGroup.groupname !== groupname;\n        }));\n        console.log(\"Handle delete.\", groupname, groups); // Call backend and revert if error.\n\n        var apiSuccess = true;\n\n        if (!apiSuccess) {\n          Swal.fire({\n            title: \"Something went wrong!\",\n            text: \"The group was already deleted.\",\n            icon: \"error\",\n            toast: true,\n            position: \"center\",\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true\n          });\n          setGroups(prevGroups);\n        }\n      }\n    });\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }\n  }, __jsx(List, {\n    component: \"nav\",\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, groups.map(function (group) {\n    return __jsx(GroupListItem, {\n      key: group.groupname,\n      group: group,\n      onDelete: handleDelete,\n      onRenameGroup: handleRenameGroup,\n      onRenamePlayer: handleRenamePlayer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    });\n  })), __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    justify: \"center\",\n    style: {\n      minWidth: \"100vw\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, __jsx(Tooltip, {\n    title: \"New Group\",\n    arrow: true,\n    placement: \"top\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, __jsx(Fab, {\n    size: \"large\",\n    className: classes.fab,\n    \"aria-label\": \"add\",\n    onClick: handleAdd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, __jsx(GroupAddRoundedIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }))))));\n};\n\n_s(GroupList, \"p1lH/QNdryKV2CDgQTAuQTS67n0=\", false, function () {\n  return [useStyles];\n});\n\n_c = GroupList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupList\");","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/components/GroupList.tsx"],"names":["React","useState","List","Grid","Fab","Tooltip","GroupAddRoundedIcon","makeStyles","Swal","GroupListItem","handleRenameGroup","groupname","console","log","handleRenamePlayer","player","useStyles","theme","root","width","backgroundColor","palette","background","paper","fab","position","bottom","spacing","success","main","GroupList","classes","groups","setGroups","handleAdd","newGroup","players","PlayerSwal","mixin","icon","showCancelButton","confirmButtonText","footer","input","inputPlaceholder","inputValidator","value","progressSteps","currentProgressStep","fire","title","text","group","newGroupname","length","join","newPlayer","reason","dismiss","push","temp","curReason","preConfirm","handleDelete","focusConfirm","focusCancel","cancelButtonText","then","result","prevGroups","filter","curGroup","apiSuccess","toast","showConfirmButton","timer","timerProgressBar","map","minWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport GroupAddRoundedIcon from \"@material-ui/icons/GroupAddRounded\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Swal from \"sweetalert2\";\nimport { GroupListItem } from \"./common/GroupListItem\";\n\nconst handleRenameGroup = (groupname: string) => {\n  console.log(\"Rename this group\", groupname);\n};\n\nconst handleRenamePlayer = (groupname: string, player: string) => {\n  console.log(\"Rename this player\", groupname, player);\n};\n\nexport interface Group {\n  groupname: string;\n  players: string[];\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100vw\",\n    // maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(4),\n    backgroundColor: theme.palette.success.main,\n  },\n}));\n\nexport const GroupList: React.FC = () => {\n  // Use style\n  const classes = useStyles();\n\n  // Use state hook\n  const [groups, setGroups] = useState([]);\n\n  // Add a group\n  const handleAdd = async () => {\n    let newGroup: Group = {\n      groupname: \"\",\n      players: [],\n    };\n\n    // Template for adding players.\n    const PlayerSwal = Swal.mixin({\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonText: \"Next &rarr;\",\n      footer: \"Leave box empty to stop adding players.\",\n      input: \"text\",\n      inputPlaceholder: \"New Name\",\n      inputValidator: (value) => {\n        for (let player of newGroup.players) {\n          if (player === value) {\n            return \"Name is not unique!\";\n          }\n        }\n      },\n      progressSteps: [\"1\", \"2\", \"3\"],\n      currentProgressStep: \"1\",\n    });\n\n    // Ask for new group name.\n    const { value: newGroupname } = await Swal.fire({\n      title: \"New Group Name\",\n      text: \"Must be a unique group name.\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonText: \"Next &rarr;\",\n      input: \"text\",\n      inputPlaceholder: \"New group name\",\n      inputValidator: (value) => {\n        if (!value) {\n          return \"Enter a name.\";\n        }\n        for (let group of groups) {\n          if (group.groupname === value) {\n            return \"Name is not unique!\";\n          }\n        }\n      },\n      progressSteps: [\"1\", \"2\", \"3\"],\n      currentProgressStep: \"0\",\n    });\n    if (!newGroupname) {\n      return;\n    }\n    newGroup.groupname = `${newGroupname}`;\n\n    // Add Players until \"\" is returned.\n    let { value: newPlayer, dismiss: reason } = await PlayerSwal.fire({\n      title: `Add Player #${newGroup.players.length + 1}`,\n      text: `So far you have: ${newGroup.players.join(\" \")}`,\n    });\n    if (reason) {\n      return;\n    }\n    while (newPlayer) {\n      newGroup.players.push(`${newPlayer}`);\n      const { value: temp, dismiss: curReason } = await PlayerSwal.fire({\n        title: `Add Player #${newGroup.players.length + 1}`,\n        text: `So far you have: ${newGroup.players.join(\" \")}`,\n      });\n      if (curReason) {\n        return;\n      }\n      newPlayer = temp;\n    }\n\n    Swal.fire({\n      title: `Group: ${newGroup.groupname}`,\n      text: `Players: ${newGroup.players.join(\" \")}`,\n      icon: \"success\",\n      confirmButtonText: \"Finish\",\n      showCancelButton: true,\n      progressSteps: [\"1\", \"2\", \"3\"],\n      currentProgressStep: \"2\",\n      preConfirm: () => {\n        // If everything went well.\n        if (newGroup.groupname !== \"\" && newGroup.players.length >= 4) {\n          setGroups((groups) => [...groups, newGroup]);\n          // Call server here.\n        } else {\n          Swal.fire({\n            title: \"Something went wrong.\",\n            text: \"Remember: You need at least four players.\",\n            icon: \"error\",\n          });\n        }\n      },\n    });\n  };\n\n  // Delete a group\n  const handleDelete = (groupname: string) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: `You won't be able to revert deleting ${groupname}!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: \"Yes, delete it!\",\n      focusConfirm: false,\n      focusCancel: true,\n      cancelButtonText: \"No, cancel!\",\n    }).then((result) => {\n      if (result.value) {\n        // Save old state\n        const prevGroups = [...groups];\n        // Update UI.\n        setGroups(\n          groups.filter((curGroup) => curGroup.groupname !== groupname)\n        );\n        console.log(\"Handle delete.\", groupname, groups);\n        // Call backend and revert if error.\n        const apiSuccess = true;\n        if (!apiSuccess) {\n          Swal.fire({\n            title: \"Something went wrong!\",\n            text: \"The group was already deleted.\",\n            icon: \"error\",\n            toast: true,\n            position: \"center\",\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n          });\n          setGroups(prevGroups);\n        }\n      }\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <List component=\"nav\" className={classes.root}>\n        {groups.map((group) => {\n          return (\n            <GroupListItem\n              key={group.groupname}\n              group={group}\n              onDelete={handleDelete}\n              onRenameGroup={handleRenameGroup}\n              onRenamePlayer={handleRenamePlayer}\n            />\n          );\n        })}\n      </List>\n      <Grid\n        container\n        spacing={0}\n        justify=\"center\"\n        style={{ minWidth: \"100vw\" }}\n      >\n        <Grid item>\n          <Tooltip title=\"New Group\" arrow placement=\"top\">\n            <Fab\n              size=\"large\"\n              className={classes.fab}\n              aria-label=\"add\"\n              onClick={handleAdd}\n            >\n              <GroupAddRoundedIcon />\n            </Fab>\n          </Tooltip>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}