{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/components/LoginForm.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PersonRoundedIcon from \"@material-ui/icons/PersonRounded\";\nimport LockRoundedIcon from \"@material-ui/icons/LockRounded\";\nimport { InputFormField } from \"./common/InputFormField\";\nvar SignupSchema = Yup.object().shape({\n  username: Yup.string().min(3, \"Too short!\").max(30, \"Too long!\").required(\"Required!\"),\n  password: Yup.string().min(4, \"Too short!\").max(30, \"Too long!\").required(\"Required!\")\n});\nexport var LoginForm = function LoginForm(_ref) {\n  var header = _ref.header;\n  var initialValues = {\n    username: \"\",\n    password: \"\"\n  };\n\n  var handleSubmit = function handleSubmit(values) {\n    console.log(\"Submitted \", values);\n  };\n\n  return __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    direction: \"column\",\n    justify: \"space-evenly\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      textAlign: \"start\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, header)), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(Formik, {\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: SignupSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var dirty = _ref2.dirty,\n        isValid = _ref2.isValid,\n        handleReset = _ref2.handleReset;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, \" \", __jsx(Grid, {\n      container: true,\n      spacing: 3,\n      direction: \"column\",\n      justify: \"space-evenly\",\n      alignItems: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      item: true,\n      justify: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }, __jsx(InputFormField, {\n      name: \"username\",\n      label: \"Username\",\n      icon: __jsx(PersonRoundedIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    })), __jsx(Grid, {\n      item: true,\n      justify: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }, __jsx(InputFormField, {\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      icon: __jsx(LockRoundedIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    })), __jsx(Grid, {\n      item: true,\n      justify: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }, __jsx(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: !dirty || !isValid,\n      onClick: handleReset,\n      type: \"submit\",\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, \"Submit\"))));\n  })));\n};\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/components/LoginForm.tsx"],"names":["React","Formik","Form","Yup","Typography","Button","Grid","PersonRoundedIcon","LockRoundedIcon","InputFormField","SignupSchema","object","shape","username","string","min","max","required","password","LoginForm","header","initialValues","handleSubmit","values","console","log","textAlign","dirty","isValid","handleReset"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PersonRoundedIcon from \"@material-ui/icons/PersonRounded\";\nimport LockRoundedIcon from \"@material-ui/icons/LockRounded\";\nimport { InputFormField } from \"./common/InputFormField\";\n\ninterface FormValues {\n  username: string;\n  password: string;\n}\ninterface LoginFormProps {\n  header: string;\n}\n\nconst SignupSchema = Yup.object().shape({\n  username: Yup.string()\n    .min(3, \"Too short!\")\n    .max(30, \"Too long!\")\n    .required(\"Required!\"),\n  password: Yup.string()\n    .min(4, \"Too short!\")\n    .max(30, \"Too long!\")\n    .required(\"Required!\"),\n});\n\nexport const LoginForm: React.FC<LoginFormProps> = ({ header }) => {\n  const initialValues: FormValues = {\n    username: \"\",\n    password: \"\",\n  };\n  const handleSubmit = (values: FormValues): void => {\n    console.log(\"Submitted \", values);\n  };\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      direction=\"column\"\n      justify=\"space-evenly\"\n      alignItems=\"center\"\n    >\n      <Grid item xs={12} style={{ textAlign: \"start\" }}>\n        <Typography component=\"h1\" variant=\"h5\">\n          {header}\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          validationSchema={SignupSchema}\n        >\n          {({ dirty, isValid, handleReset }) => {\n            return (\n              <Form>\n                {\" \"}\n                <Grid\n                  container\n                  spacing={3}\n                  direction=\"column\"\n                  justify=\"space-evenly\"\n                  alignItems=\"center\"\n                >\n                  <Grid item justify=\"center\">\n                    <InputFormField\n                      name=\"username\"\n                      label=\"Username\"\n                      icon={<PersonRoundedIcon />}\n                    />\n                  </Grid>\n                  <Grid item justify=\"center\">\n                    <InputFormField\n                      name=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                      icon={<LockRoundedIcon />}\n                    />\n                  </Grid>\n                  <Grid item justify=\"center\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      disabled={!dirty || !isValid}\n                      onClick={handleReset}\n                      type=\"submit\"\n                      fullWidth\n                    >\n                      Submit\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Form>\n            );\n          }}\n        </Formik>\n      </Grid>\n    </Grid>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}