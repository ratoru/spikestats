{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/components/AddScoreField.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SentimentVerySatisfiedRoundedIcon from \"@material-ui/icons/SentimentVerySatisfiedRounded\";\nimport EmojiPeopleRoundedIcon from \"@material-ui/icons/EmojiPeopleRounded\";\nexport const AddScoreField = ({\n  players,\n  teams,\n  blueScore,\n  redScore,\n  onChange\n}) => {\n  return __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    justify: \"center\",\n    alignItems: \"baseline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Blue Team\")), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \":\")), __jsx(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Red Team\")), __jsx(Grid, {\n    item: true,\n    xs: 5,\n    container: true,\n    spacing: 2,\n    justify: \"space-around\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, teams.blueTeam.map(id => {\n    return __jsx(Grid, {\n      item: true,\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, __jsx(Chip, {\n      key: id,\n      color: \"primary\",\n      label: players.get(id),\n      icon: __jsx(SentimentVerySatisfiedRoundedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 23\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }));\n  })), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), __jsx(Grid, {\n    item: true,\n    xs: 5,\n    container: true,\n    spacing: 2,\n    justify: \"space-around\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, teams.redTeam.map(id => {\n    return __jsx(Grid, {\n      item: true,\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, __jsx(Chip, {\n      key: id,\n      color: \"secondary\",\n      label: players.get(id),\n      icon: __jsx(EmojiPeopleRoundedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 23\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }));\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    container: true,\n    spacing: 2,\n    justify: \"space-around\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, __jsx(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    type: \"number\",\n    autoComplete: \"off\",\n    label: \"Score Blue\",\n    color: \"primary\",\n    autoFocus: true,\n    value: blueScore,\n    error: blueScore < 0 || blueScore > 0 && blueScore === redScore,\n    onChange: event => event.target.type === \"number\" ? onChange(parseInt(event.target.value), true) : onChange(0, true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, __jsx(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    type: \"number\",\n    autoComplete: \"off\",\n    label: \"Score Red\",\n    color: \"secondary\",\n    value: redScore,\n    error: redScore < 0 || redScore > 0 && blueScore === redScore,\n    onChange: event => event.target.type === \"number\" ? onChange(parseInt(event.target.value), false) : {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/components/AddScoreField.tsx"],"names":["React","Chip","Grid","TextField","Typography","SentimentVerySatisfiedRoundedIcon","EmojiPeopleRoundedIcon","AddScoreField","players","teams","blueScore","redScore","onChange","textAlign","blueTeam","map","id","get","redTeam","event","target","type","parseInt","value"],"mappings":";;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAGA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAOC,iCAAP,MAA8C,kDAA9C;AACA,OAAOC,sBAAP,MAAmC,uCAAnC;AAmBA,OAAO,MAAMC,aAAsC,GAAG,CAAC;AACrDC,EAAAA,OADqD;AAErDC,EAAAA,KAFqD;AAGrDC,EAAAA,SAHqD;AAIrDC,EAAAA,QAJqD;AAKrDC,EAAAA;AALqD,CAAD,KAMhD;AACJ,SACE,MAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,OAAO,EAAE,CAHX;AAIE,IAAA,OAAO,EAAC,QAJV;AAKE,IAAA,UAAU,EAAC,UALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAPF,EAYE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAE;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CAZF,EAiBE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAE;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAjBF,EAsBE,MAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,EAAE,EAAE,CAFN;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,OAAO,EAAE,CAJX;AAKE,IAAA,OAAO,EAAC,cALV;AAME,IAAA,UAAU,EAAC,QANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGJ,KAAK,CAACK,QAAN,CAAeC,GAAf,CAAoBC,EAAD,IAAQ;AAC1B,WACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,GAAG,EAAEA,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AACE,MAAA,GAAG,EAAEA,EADP;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,KAAK,EAAER,OAAO,CAACS,GAAR,CAAYD,EAAZ,CAHT;AAIE,MAAA,IAAI,EAAE,MAAC,iCAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAUD,GAXA,CARH,CAtBF,EA2CE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3CF,EA4CE,MAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,EAAE,EAAE,CAFN;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,OAAO,EAAE,CAJX;AAKE,IAAA,OAAO,EAAC,cALV;AAME,IAAA,UAAU,EAAC,QANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGP,KAAK,CAACS,OAAN,CAAcH,GAAd,CAAmBC,EAAD,IAAQ;AACzB,WACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,GAAG,EAAEA,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AACE,MAAA,GAAG,EAAEA,EADP;AAEE,MAAA,KAAK,EAAC,WAFR;AAGE,MAAA,KAAK,EAAER,OAAO,CAACS,GAAR,CAAYD,EAAZ,CAHT;AAIE,MAAA,IAAI,EAAE,MAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAUD,GAXA,CARH,CA5CF,EAiEE,MAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,EAAE,EAAE,EAFN;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,OAAO,EAAE,CAJX;AAKE,IAAA,OAAO,EAAC,cALV;AAME,IAAA,UAAU,EAAC,QANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,YAAY,EAAC,KALf;AAME,IAAA,KAAK,EAAC,YANR;AAOE,IAAA,KAAK,EAAC,SAPR;AAQE,IAAA,SAAS,MARX;AASE,IAAA,KAAK,EAAEN,SATT;AAUE,IAAA,KAAK,EAAEA,SAAS,GAAG,CAAZ,IAAkBA,SAAS,GAAG,CAAZ,IAAiBA,SAAS,KAAKC,QAV1D;AAWE,IAAA,QAAQ,EAAGQ,KAAD,IACRA,KAAK,CAACC,MAAN,CAAaC,IAAb,KAAsB,QAAtB,GACIT,QAAQ,CAACU,QAAQ,CAACH,KAAK,CAACC,MAAN,CAAaG,KAAd,CAAT,EAA+B,IAA/B,CADZ,GAEIX,QAAQ,CAAC,CAAD,EAAI,IAAJ,CAdhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,EA2BE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,YAAY,EAAC,KALf;AAME,IAAA,KAAK,EAAC,WANR;AAOE,IAAA,KAAK,EAAC,WAPR;AAQE,IAAA,KAAK,EAAED,QART;AASE,IAAA,KAAK,EAAEA,QAAQ,GAAG,CAAX,IAAiBA,QAAQ,GAAG,CAAX,IAAgBD,SAAS,KAAKC,QATxD;AAUE,IAAA,QAAQ,EAAGQ,KAAD,IACRA,KAAK,CAACC,MAAN,CAAaC,IAAb,KAAsB,QAAtB,GACIT,QAAQ,CAACU,QAAQ,CAACH,KAAK,CAACC,MAAN,CAAaG,KAAd,CAAT,EAA+B,KAA/B,CADZ,GAEI,EAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA3BF,CAjEF,CADF;AAkHD,CAzHM","sourcesContent":["import React, { useState } from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FaceRoundedIcon from \"@material-ui/icons/FaceRounded\";\nimport SentimentVerySatisfiedRoundedIcon from \"@material-ui/icons/SentimentVerySatisfiedRounded\";\nimport EmojiPeopleRoundedIcon from \"@material-ui/icons/EmojiPeopleRounded\";\nimport { Players, Team } from \"../util/types\";\n\ninterface PlayerChip {\n  label: string;\n  isBlue: boolean;\n  isRed: boolean;\n  disabled: boolean;\n  id: number;\n}\n\ninterface AddScoreField {\n  players: Players;\n  teams: { blueTeam: Team; redTeam: Team };\n  blueScore: number;\n  redScore: number;\n  onChange: (points: number, isBlue: boolean) => void;\n}\n\nexport const AddScoreField: React.FC<AddScoreField> = ({\n  players,\n  teams,\n  blueScore,\n  redScore,\n  onChange,\n}) => {\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      spacing={2}\n      justify=\"center\"\n      alignItems=\"baseline\"\n    >\n      <Grid item xs={5}>\n        <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n          Blue Team\n        </Typography>\n      </Grid>\n      <Grid item xs={2}>\n        <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n          :\n        </Typography>\n      </Grid>\n      <Grid item xs={5}>\n        <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n          Red Team\n        </Typography>\n      </Grid>\n      <Grid\n        item\n        xs={5}\n        container\n        spacing={2}\n        justify=\"space-around\"\n        alignItems=\"center\"\n      >\n        {teams.blueTeam.map((id) => {\n          return (\n            <Grid item key={id}>\n              <Chip\n                key={id}\n                color=\"primary\"\n                label={players.get(id)}\n                icon={<SentimentVerySatisfiedRoundedIcon />}\n              />\n            </Grid>\n          );\n        })}\n      </Grid>\n      <Grid item xs={2} />\n      <Grid\n        item\n        xs={5}\n        container\n        spacing={2}\n        justify=\"space-around\"\n        alignItems=\"center\"\n      >\n        {teams.redTeam.map((id) => {\n          return (\n            <Grid item key={id}>\n              <Chip\n                key={id}\n                color=\"secondary\"\n                label={players.get(id)}\n                icon={<EmojiPeopleRoundedIcon />}\n              />\n            </Grid>\n          );\n        })}\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        container\n        spacing={2}\n        justify=\"space-around\"\n        alignItems=\"center\"\n      >\n        <Grid item>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            type=\"number\"\n            autoComplete=\"off\"\n            label=\"Score Blue\"\n            color=\"primary\"\n            autoFocus\n            value={blueScore}\n            error={blueScore < 0 || (blueScore > 0 && blueScore === redScore)}\n            onChange={(event) =>\n              event.target.type === \"number\"\n                ? onChange(parseInt(event.target.value), true)\n                : onChange(0, true)\n            }\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            type=\"number\"\n            autoComplete=\"off\"\n            label=\"Score Red\"\n            color=\"secondary\"\n            value={redScore}\n            error={redScore < 0 || (redScore > 0 && blueScore === redScore)}\n            onChange={(event) =>\n              event.target.type === \"number\"\n                ? onChange(parseInt(event.target.value), false)\n                : {}\n            }\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}