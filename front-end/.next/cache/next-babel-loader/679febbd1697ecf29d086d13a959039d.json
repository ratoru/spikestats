{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/components/common/PlayerListItem.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport SportsHandballRoundedIcon from \"@material-ui/icons/SportsHandballRounded\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport { FormikListItem } from \"./FormikListItem\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    nested: {\n      paddingLeft: theme.spacing(4)\n    }\n  });\n});\nexport var PlayerListItem = function PlayerListItem(_ref) {\n  _s();\n\n  var player = _ref.player,\n      onRename = _ref.onRename;\n  var classes = useStyles(); // State to control editing of groupname.\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      editing = _React$useState2[0],\n      setEdit = _React$useState2[1];\n\n  var handlePlayerRename = function handlePlayerRename(values) {\n    setEdit(!editing);\n    onRename(player.uuid, values.newName);\n  };\n\n  var onCancel = function onCancel() {\n    setEdit(!editing);\n  };\n\n  var editMode = __jsx(FormikListItem, {\n    initialValue: player.name,\n    label: \"Player Name\",\n    onSubmit: handlePlayerRename,\n    onCancel: onCancel,\n    onClickAway: function onClickAway() {\n      return setEdit(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  });\n\n  var normalMode = __jsx(ListItem, {\n    className: classes.nested,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(ListItemIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(SportsHandballRoundedIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })), __jsx(ListItemText, {\n    primary: player.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), __jsx(ListItemSecondaryAction, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(Tooltip, {\n    title: \"Rename Player\",\n    arrow: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(IconButton, {\n    onClick: function onClick() {\n      return setEdit(!editing);\n    },\n    edge: \"end\",\n    \"aria-label\": \"change player's name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, __jsx(EditRoundedIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  })))));\n\n  var content = editing ? editMode : normalMode;\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 10\n    }\n  }, content);\n};\n\n_s(PlayerListItem, \"SAMTpelNKRlP5Hh0CouRHnkALSU=\", false, function () {\n  return [useStyles];\n});\n\n_c = PlayerListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerListItem\");","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/components/common/PlayerListItem.tsx"],"names":["React","ListItem","ListItemIcon","ListItemText","ListItemSecondaryAction","Tooltip","IconButton","EditRoundedIcon","SportsHandballRoundedIcon","makeStyles","createStyles","FormikListItem","useStyles","theme","nested","paddingLeft","spacing","PlayerListItem","player","onRename","classes","useState","editing","setEdit","handlePlayerRename","values","uuid","newName","onCancel","editMode","name","normalMode","content"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport SportsHandballRoundedIcon from \"@material-ui/icons/SportsHandballRounded\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport { FormikListItem } from \"./FormikListItem\";\nimport { Player } from \"../../util/types\";\n\ninterface PlayerListItemProps {\n  player: Player;\n  onRename: (oldPlayerId: string, newName: string) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n  })\n);\n\nexport const PlayerListItem: React.FC<PlayerListItemProps> = ({\n  player,\n  onRename,\n}) => {\n  const classes = useStyles();\n\n  // State to control editing of groupname.\n  const [editing, setEdit] = React.useState(false);\n\n  const handlePlayerRename = (values: { newName: string }): void => {\n    setEdit(!editing);\n    onRename(player.uuid, values.newName);\n  };\n\n  const onCancel = () => {\n    setEdit(!editing);\n  };\n\n  const editMode = (\n    <FormikListItem\n      initialValue={player.name}\n      label=\"Player Name\"\n      onSubmit={handlePlayerRename}\n      onCancel={onCancel}\n      onClickAway={() => setEdit(false)}\n    />\n  );\n\n  const normalMode = (\n    <ListItem className={classes.nested}>\n      <ListItemIcon>\n        <SportsHandballRoundedIcon />\n      </ListItemIcon>\n      <ListItemText primary={player.name} />\n      <ListItemSecondaryAction>\n        <Tooltip title=\"Rename Player\" arrow>\n          <IconButton\n            onClick={() => setEdit(!editing)}\n            edge=\"end\"\n            aria-label=\"change player's name\"\n          >\n            <EditRoundedIcon />\n          </IconButton>\n        </Tooltip>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n  const content: React.ReactNode = editing ? editMode : normalMode;\n\n  return <React.Fragment>{content}</React.Fragment>;\n};\n"]},"metadata":{},"sourceType":"module"}