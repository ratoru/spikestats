{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/components/common/GroupListItem.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { List, ListSubheader, ListItem, ListItemText, ListItemSecondaryAction, Button, Collapse, ButtonGroup, Tooltip, Divider, TextField, Typography } from \"@material-ui/core\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport ExpandLessRounded from \"@material-ui/icons/ExpandLessRounded\";\nimport ExpandMoreRounded from \"@material-ui/icons/ExpandMoreRounded\";\nimport DeleteForeverRoundedIcon from \"@material-ui/icons/DeleteForeverRounded\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\nimport CancelRoundedIcon from \"@material-ui/icons/CancelRounded\";\nimport { Formik, Form, Field } from \"formik\";\nimport { PlayerListItem } from \"./PlayerListItem\";\n\n// Navigates to the games page for that group.\nfunction openGroup() {\n  console.log(\"open this group\");\n}\n\nexport var GroupListItem = function GroupListItem(_ref) {\n  _s();\n\n  var group = _ref.group,\n      onDelete = _ref.onDelete,\n      onRenameGroup = _ref.onRenameGroup,\n      onRenamePlayer = _ref.onRenamePlayer;\n\n  // State to control the visibility of the player sublist\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var openPlayers = function openPlayers() {\n    setOpen(!open);\n  }; // State to control editing of groupname.\n\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      editing = _React$useState4[0],\n      setEdit = _React$useState4[1]; // Wrapper for onRename to bind group to player.\n\n\n  var handleSpecificPlayer = function handleSpecificPlayer(player) {\n    onRenamePlayer(group.groupname, player);\n  };\n\n  var handleGroupRename = function handleGroupRename(values) {\n    onRenameGroup(group.groupname, values.newName);\n    setEdit(!editing);\n  }; // Used to initialize the formik form\n\n\n  var initialValues = {\n    newName: group.groupname\n  };\n\n  var editMode = __jsx(Formik, {\n    initialValues: initialValues,\n    onSubmit: handleGroupRename,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, function (_ref2) {\n    var dirty = _ref2.dirty;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, __jsx(ListItemText, {\n      primary: __jsx(Field, {\n        name: \"newName\",\n        as: TextField,\n        variant: \"outlined\",\n        label: \"Group Name\",\n        defaultValue: group.groupname,\n        autoFocus: true,\n        autoComplete: \"off\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 19\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }), __jsx(ListItemSecondaryAction, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, __jsx(ButtonGroup, {\n      variant: \"contained\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, __jsx(Tooltip, {\n      title: \"Rename Group\",\n      arrow: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }, __jsx(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      disabled: !dirty,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, __jsx(CheckCircleRoundedIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 23\n      }\n    }))), __jsx(Tooltip, {\n      title: \"Cancel\",\n      arrow: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }\n    }, __jsx(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: function onClick() {\n        return setEdit(!editing);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, __jsx(CancelRoundedIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 23\n      }\n    })))))));\n  });\n\n  var normalMode = __jsx(ListItem, {\n    button: true,\n    onClick: openGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, __jsx(ListItemText, {\n    primary: __jsx(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 30\n      }\n    }, group.groupname),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), __jsx(ListItemSecondaryAction, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, __jsx(ButtonGroup, {\n    disableElevation: true,\n    variant: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, __jsx(Tooltip, {\n    title: \"Show Players\",\n    arrow: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    onClick: openPlayers,\n    \"aria-label\": \"show players\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, open ? __jsx(ExpandLessRounded, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 23\n    }\n  }) : __jsx(ExpandMoreRounded, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 47\n    }\n  }))), __jsx(Tooltip, {\n    title: \"Rename\",\n    arrow: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return setEdit(!editing);\n    },\n    \"aria-label\": \"change groupname\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, __jsx(EditRoundedIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }))), __jsx(Tooltip, {\n    title: \"Delete\",\n    arrow: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return onDelete(group.groupname);\n    },\n    \"aria-label\": \"delete group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, __jsx(DeleteForeverRoundedIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }))))));\n\n  var content = editing ? editMode : normalMode;\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, content, __jsx(Collapse, {\n    \"in\": open,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, __jsx(List, {\n    component: \"div\",\n    subheader: __jsx(ListSubheader, {\n      component: \"div\",\n      id: \"nested-list-subheader\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, \"Players\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, group.players.map(function (player) {\n    return __jsx(PlayerListItem, {\n      key: player,\n      player: player,\n      onRename: handleSpecificPlayer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    });\n  }))), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(GroupListItem, \"bUxCKDzZ3uU0qw/hlQSV1cMrVl4=\");\n\n_c = GroupListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupListItem\");","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/components/common/GroupListItem.tsx"],"names":["React","List","ListSubheader","ListItem","ListItemText","ListItemSecondaryAction","Button","Collapse","ButtonGroup","Tooltip","Divider","TextField","Typography","EditRoundedIcon","ExpandLessRounded","ExpandMoreRounded","DeleteForeverRoundedIcon","CheckCircleRoundedIcon","CancelRoundedIcon","Formik","Form","Field","PlayerListItem","openGroup","console","log","GroupListItem","group","onDelete","onRenameGroup","onRenamePlayer","useState","open","setOpen","openPlayers","editing","setEdit","handleSpecificPlayer","player","groupname","handleGroupRename","values","newName","initialValues","editMode","dirty","normalMode","content","players","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  List,\n  ListSubheader,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Button,\n  Collapse,\n  ButtonGroup,\n  Tooltip,\n  Divider,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport ExpandLessRounded from \"@material-ui/icons/ExpandLessRounded\";\nimport ExpandMoreRounded from \"@material-ui/icons/ExpandMoreRounded\";\nimport DeleteForeverRoundedIcon from \"@material-ui/icons/DeleteForeverRounded\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\nimport CancelRoundedIcon from \"@material-ui/icons/CancelRounded\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { Group } from \"../GroupList\";\nimport { PlayerListItem } from \"./PlayerListItem\";\nimport { string } from \"yup\";\n\ninterface GroupListItemProps {\n  group: Group;\n  onDelete: (groupname: string) => void;\n  onRenameGroup: (oldName: string, newName: string) => void;\n  onRenamePlayer: (groupname: string, player: string) => void;\n}\n\n// Navigates to the games page for that group.\nfunction openGroup() {\n  console.log(\"open this group\");\n}\n\nexport const GroupListItem: React.FC<GroupListItemProps> = ({\n  group,\n  onDelete,\n  onRenameGroup,\n  onRenamePlayer,\n}) => {\n  // State to control the visibility of the player sublist\n  const [open, setOpen] = React.useState(false);\n  const openPlayers = () => {\n    setOpen(!open);\n  };\n\n  // State to control editing of groupname.\n  const [editing, setEdit] = React.useState(false);\n\n  // Wrapper for onRename to bind group to player.\n  const handleSpecificPlayer = (player: string) => {\n    onRenamePlayer(group.groupname, player);\n  };\n\n  const handleGroupRename = (values: { newName: string }): void => {\n    onRenameGroup(group.groupname, values.newName);\n    setEdit(!editing);\n  };\n\n  // Used to initialize the formik form\n  const initialValues = {\n    newName: group.groupname,\n  };\n\n  const editMode = (\n    <Formik initialValues={initialValues} onSubmit={handleGroupRename}>\n      {({ dirty }) => {\n        return (\n          <Form>\n            <ListItem>\n              <ListItemText\n                primary={\n                  <Field\n                    name=\"newName\"\n                    as={TextField}\n                    variant=\"outlined\"\n                    label=\"Group Name\"\n                    defaultValue={group.groupname}\n                    autoFocus\n                    autoComplete=\"off\"\n                  />\n                }\n              />\n              <ListItemSecondaryAction>\n                <ButtonGroup variant=\"contained\">\n                  <Tooltip title=\"Rename Group\" arrow>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      type=\"submit\"\n                      disabled={!dirty}\n                    >\n                      <CheckCircleRoundedIcon />\n                    </Button>\n                  </Tooltip>\n                  <Tooltip title=\"Cancel\" arrow>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => setEdit(!editing)}\n                    >\n                      <CancelRoundedIcon />\n                    </Button>\n                  </Tooltip>\n                </ButtonGroup>\n              </ListItemSecondaryAction>\n            </ListItem>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n\n  const normalMode = (\n    <ListItem button onClick={openGroup}>\n      <ListItemText primary={<Typography>{group.groupname}</Typography>} />\n      <ListItemSecondaryAction>\n        <ButtonGroup disableElevation variant=\"text\">\n          <Tooltip title=\"Show Players\" arrow>\n            <Button onClick={openPlayers} aria-label=\"show players\">\n              {open ? <ExpandLessRounded /> : <ExpandMoreRounded />}\n            </Button>\n          </Tooltip>\n          <Tooltip title=\"Rename\" arrow>\n            <Button\n              onClick={() => setEdit(!editing)}\n              aria-label=\"change groupname\"\n            >\n              <EditRoundedIcon />\n            </Button>\n          </Tooltip>\n          <Tooltip title=\"Delete\" arrow>\n            <Button\n              onClick={() => onDelete(group.groupname)}\n              aria-label=\"delete group\"\n            >\n              <DeleteForeverRoundedIcon />\n            </Button>\n          </Tooltip>\n        </ButtonGroup>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n  const content = editing ? editMode : normalMode;\n  return (\n    <React.Fragment>\n      {content}\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List\n          component=\"div\"\n          subheader={\n            <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n              Players\n            </ListSubheader>\n          }\n        >\n          {group.players.map((player) => {\n            return (\n              <PlayerListItem\n                key={player}\n                player={player}\n                onRename={handleSpecificPlayer}\n              />\n            );\n          })}\n        </List>\n      </Collapse>\n      <Divider />\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}