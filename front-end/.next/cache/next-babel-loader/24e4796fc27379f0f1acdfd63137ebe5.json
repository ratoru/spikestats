{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/util/swals.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { AddChips } from \"../components/AddChips\";\n// Template for error messages.\nexport const errorToast = Swal.mixin({\n  title: \"Something went wrong!\",\n  icon: \"error\",\n  toast: true,\n  position: \"center\",\n  showConfirmButton: false,\n  timer: 4000,\n  timerProgressBar: true\n});\nexport async function teamSelection(players) {\n  const emptyTeamBlue = [-1, -1];\n  const emptyTeamRed = [-1, -1];\n  const selectedTeams = {\n    blueTeam: emptyTeamBlue,\n    redTeam: emptyTeamRed\n  };\n\n  const handleSelectPlayer = (id, isBlue) => {\n    if (isBlue) {\n      if (selectedTeams.blueTeam[0] === -1) {\n        selectedTeams.blueTeam[0] = id;\n      } else {\n        selectedTeams.blueTeam[1] = id;\n      }\n    } else {\n      if (selectedTeams.redTeam[0] === -1) {\n        selectedTeams.redTeam[0] = id;\n      } else {\n        selectedTeams.redTeam[1] = id;\n      }\n    }\n  };\n\n  const handleRemovePlayer = (id, isBlue) => {\n    if (isBlue) {\n      if (selectedTeams.blueTeam[0] === id) {\n        selectedTeams.blueTeam[0] = -1;\n      } else {\n        selectedTeams.blueTeam[1] = -1;\n      }\n    } else {\n      if (selectedTeams.redTeam[0] === id) {\n        selectedTeams.redTeam[0] = -1;\n      } else {\n        selectedTeams.redTeam[1] = -1;\n      }\n    }\n  };\n\n  const AddGameSwal = withReactContent(Swal);\n  const {\n    value: finalSelection\n  } = await AddGameSwal.fire({\n    title: \"Choose Teams\",\n    html: __jsx(AddChips, {\n      players: players,\n      teams: selectedTeams,\n      onSelect: handleSelectPlayer,\n      onDelete: handleRemovePlayer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }),\n    showCancelButton: true,\n    confirmButtonText: \"Next &rarr;\",\n    progressSteps: [\"1\", \"2\", \"3\"],\n    currentProgressStep: \"0\",\n    preConfirm: () => {\n      if (selectedTeams.blueTeam[0] === -1 || selectedTeams.blueTeam[1] === -1 || selectedTeams.redTeam[0] === -1 || selectedTeams.redTeam[1] === -1) {\n        AddGameSwal.showValidationMessage(\"You must select four players.\");\n        return false;\n      }\n\n      return selectedTeams;\n    }\n  }); // Correct and neccessary syntax??\n\n  return new Promise((resolve, reject) => {\n    if (!finalSelection) {\n      reject();\n    } else {\n      resolve(finalSelection);\n    }\n  });\n}","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/util/swals.tsx"],"names":["React","Swal","withReactContent","AddChips","errorToast","mixin","title","icon","toast","position","showConfirmButton","timer","timerProgressBar","teamSelection","players","emptyTeamBlue","emptyTeamRed","selectedTeams","blueTeam","redTeam","handleSelectPlayer","id","isBlue","handleRemovePlayer","AddGameSwal","value","finalSelection","fire","html","showCancelButton","confirmButtonText","progressSteps","currentProgressStep","preConfirm","showValidationMessage","Promise","resolve","reject"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { AddChips } from \"../components/AddChips\";\nimport { Team, Players } from \"./types\";\n\n// Template for error messages.\nexport const errorToast = Swal.mixin({\n  title: \"Something went wrong!\",\n  icon: \"error\",\n  toast: true,\n  position: \"center\",\n  showConfirmButton: false,\n  timer: 4000,\n  timerProgressBar: true,\n});\n\ninterface Selection {\n  blueTeam: Team;\n  redTeam: Team;\n}\nexport async function teamSelection(players: Players): Promise<Selection> {\n  const emptyTeamBlue: Team = [-1, -1];\n  const emptyTeamRed: Team = [-1, -1];\n  const selectedTeams = { blueTeam: emptyTeamBlue, redTeam: emptyTeamRed };\n  const handleSelectPlayer = (id: number, isBlue: boolean) => {\n    if (isBlue) {\n      if (selectedTeams.blueTeam[0] === -1) {\n        selectedTeams.blueTeam[0] = id;\n      } else {\n        selectedTeams.blueTeam[1] = id;\n      }\n    } else {\n      if (selectedTeams.redTeam[0] === -1) {\n        selectedTeams.redTeam[0] = id;\n      } else {\n        selectedTeams.redTeam[1] = id;\n      }\n    }\n  };\n  const handleRemovePlayer = (id: number, isBlue: boolean) => {\n    if (isBlue) {\n      if (selectedTeams.blueTeam[0] === id) {\n        selectedTeams.blueTeam[0] = -1;\n      } else {\n        selectedTeams.blueTeam[1] = -1;\n      }\n    } else {\n      if (selectedTeams.redTeam[0] === id) {\n        selectedTeams.redTeam[0] = -1;\n      } else {\n        selectedTeams.redTeam[1] = -1;\n      }\n    }\n  };\n\n  const AddGameSwal = withReactContent(Swal);\n  const { value: finalSelection } = await AddGameSwal.fire({\n    title: \"Choose Teams\",\n    html: (\n      <AddChips\n        players={players}\n        teams={selectedTeams}\n        onSelect={handleSelectPlayer}\n        onDelete={handleRemovePlayer}\n      />\n    ),\n    showCancelButton: true,\n    confirmButtonText: \"Next &rarr;\",\n    progressSteps: [\"1\", \"2\", \"3\"],\n    currentProgressStep: \"0\",\n    preConfirm: () => {\n      if (\n        selectedTeams.blueTeam[0] === -1 ||\n        selectedTeams.blueTeam[1] === -1 ||\n        selectedTeams.redTeam[0] === -1 ||\n        selectedTeams.redTeam[1] === -1\n      ) {\n        AddGameSwal.showValidationMessage(\"You must select four players.\");\n        return false;\n      }\n      return selectedTeams;\n    },\n  });\n  // Correct and neccessary syntax??\n  return new Promise((resolve, reject) => {\n    if (!finalSelection) {\n      reject();\n    } else {\n      resolve(finalSelection);\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}