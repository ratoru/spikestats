{"ast":null,"code":"// This file provides helper functions to tranform the data from the server\n// into data the react components can use.\n// Takes in a Game and converts it to the format used in the GameTable.\nexport function gameToRow(game, players) {\n  return {\n    id: game[\"id\"],\n    blueTeam: teamToString(game[\"blueTeam\"], players),\n    redTeam: teamToString(game[\"redTeam\"], players),\n    score: game[\"score\"].join(\":\"),\n    serve: game[\"serve\"],\n    date: game[\"date\"]\n  };\n}\n\nfunction teamToString(team, players) {\n  return team.map(playerId => players.get(playerId)).join(\", \");\n}","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/utils.tsx"],"names":["gameToRow","game","players","id","blueTeam","teamToString","redTeam","score","join","serve","date","team","map","playerId","get"],"mappings":"AAAA;AACA;AAGA;AACA,OAAO,SAASA,SAAT,CAAmBC,IAAnB,EAA+BC,OAA/B,EAAiD;AACtD,SAAO;AACLC,IAAAA,EAAE,EAAEF,IAAI,CAAC,IAAD,CADH;AAELG,IAAAA,QAAQ,EAAEC,YAAY,CAACJ,IAAI,CAAC,UAAD,CAAL,EAAmBC,OAAnB,CAFjB;AAGLI,IAAAA,OAAO,EAAED,YAAY,CAACJ,IAAI,CAAC,SAAD,CAAL,EAAkBC,OAAlB,CAHhB;AAILK,IAAAA,KAAK,EAAEN,IAAI,CAAC,OAAD,CAAJ,CAAcO,IAAd,CAAmB,GAAnB,CAJF;AAKLC,IAAAA,KAAK,EAAER,IAAI,CAAC,OAAD,CALN;AAMLS,IAAAA,IAAI,EAAET,IAAI,CAAC,MAAD;AANL,GAAP;AAQD;;AAED,SAASI,YAAT,CAAsBM,IAAtB,EAAkCT,OAAlC,EAA4D;AAC1D,SAAOS,IAAI,CAACC,GAAL,CAAUC,QAAD,IAAcX,OAAO,CAACY,GAAR,CAAYD,QAAZ,CAAvB,EAA8CL,IAA9C,CAAmD,IAAnD,CAAP;AACD","sourcesContent":["// This file provides helper functions to tranform the data from the server\n// into data the react components can use.\nimport { Game, Team, Players } from \"./types\";\n\n// Takes in a Game and converts it to the format used in the GameTable.\nexport function gameToRow(game: Game, players: Players) {\n  return {\n    id: game[\"id\"],\n    blueTeam: teamToString(game[\"blueTeam\"], players),\n    redTeam: teamToString(game[\"redTeam\"], players),\n    score: game[\"score\"].join(\":\"),\n    serve: game[\"serve\"],\n    date: game[\"date\"],\n  };\n}\n\nfunction teamToString(team: Team, players: Players): string {\n  return team.map((playerId) => players.get(playerId)).join(\", \");\n}\n"]},"metadata":{},"sourceType":"module"}