{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/components/common/MuiMenu.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { Menu, MenuItem, ListItemIcon, ListItemText, useTheme } from \"@material-ui/core\";\nimport { Turn as Hamburger } from \"hamburger-react\";\nexport var MuiMenu = function MuiMenu(_ref) {\n  _s();\n\n  var items = _ref.items,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 32 : _ref$size,\n      color = _ref.color;\n\n  // State form Hamburger\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isOpen = _React$useState2[0],\n      setOpen = _React$useState2[1]; // Boiler-plate code from MUI for the menu\n\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      anchorEl = _React$useState4[0],\n      setAnchorEl = _React$useState4[1];\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  }; // Allows you to refer to your defined theme.\n\n\n  var theme = useTheme();\n  var themeColors = [theme.palette.primary.main, theme.palette.secondary.main, theme.palette.error.main, theme.palette.info.main, theme.palette.success.main];\n  var numColors = themeColors.length;\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(Hamburger, {\n    size: size,\n    color: color,\n    label: \"Show menu\",\n    rounded: true,\n    toggled: isOpen,\n    toggle: setOpen // onToggle={(toggled) => {\n    //   if (toggled) {\n    //     // open menu\n    //     handleClick;\n    //   } else {\n    //     // close menu\n    //     handleClose;\n    //   }\n    // }}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), __jsx(Menu, {\n    id: \"customized-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, items.map(function (curItem, index) {\n    __jsx(Link, {\n      href: curItem[2],\n      passHref: true,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, __jsx(MenuItem, {\n      component: \"a\",\n      style: {\n        backgroundColor: themeColors[index % numColors]\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, __jsx(ListItemIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, curItem[1]), __jsx(ListItemText, {\n      primary: curItem[0],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    })));\n  })));\n};\n\n_s(MuiMenu, \"9nZLJB1fWwuq2b29BFlDN/ktsPM=\", false, function () {\n  return [useTheme];\n});\n\n_c = MuiMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"MuiMenu\");","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/components/common/MuiMenu.tsx"],"names":["React","Link","Menu","MenuItem","ListItemIcon","ListItemText","useTheme","Turn","Hamburger","MuiMenu","items","size","color","useState","isOpen","setOpen","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","theme","themeColors","palette","primary","main","secondary","error","info","success","numColors","length","Boolean","map","curItem","index","backgroundColor"],"mappings":"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","sourcesContent":["import React, { ReactElement } from \"react\";\nimport Link from \"next/link\";\nimport {\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  useTheme,\n} from \"@material-ui/core\";\nimport { Turn as Hamburger } from \"hamburger-react\";\n\nexport type MuiMenuItem = [string, ReactElement, string];\n\ninterface MuiMenuProps {\n  items: MuiMenuItem[];\n  color: string;\n  size?: number;\n}\n\nexport const MuiMenu: React.FC<MuiMenuProps> = ({\n  items,\n  size = 32,\n  color,\n}) => {\n  // State form Hamburger\n  const [isOpen, setOpen] = React.useState(true);\n  // Boiler-plate code from MUI for the menu\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  // Allows you to refer to your defined theme.\n  const theme = useTheme();\n  const themeColors = [\n    theme.palette.primary.main,\n    theme.palette.secondary.main,\n    theme.palette.error.main,\n    theme.palette.info.main,\n    theme.palette.success.main,\n  ];\n  let numColors = themeColors.length;\n\n  return (\n    <React.Fragment>\n      <div onClick={handleClick}>\n        <Hamburger\n          size={size}\n          color={color}\n          label=\"Show menu\"\n          rounded\n          toggled={isOpen}\n          toggle={setOpen}\n          // onToggle={(toggled) => {\n          //   if (toggled) {\n          //     // open menu\n          //     handleClick;\n          //   } else {\n          //     // close menu\n          //     handleClose;\n          //   }\n          // }}\n        />\n      </div>\n      <Menu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {items.map((curItem, index) => {\n          <Link href={curItem[2]} passHref key={index}>\n            <MenuItem\n              component=\"a\"\n              style={{ backgroundColor: themeColors[index % numColors] }}\n            >\n              <ListItemIcon>{curItem[1]}</ListItemIcon>\n              <ListItemText primary={curItem[0]} />\n            </MenuItem>\n          </Link>;\n        })}\n      </Menu>\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}