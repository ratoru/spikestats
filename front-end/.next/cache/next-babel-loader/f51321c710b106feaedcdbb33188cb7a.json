{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/pages/stats/[groupname].tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { MainBar } from \"../../components/MainBar\";\nvar Winner;\n\n(function (Winner) {\n  Winner[Winner[\"Team1\"] = 0] = \"Team1\";\n  Winner[Winner[\"Team2\"] = 1] = \"Team2\";\n})(Winner || (Winner = {}));\n\nexport default function Stats() {\n  const router = useRouter();\n  const {\n    groupname\n  } = router.query;\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(MainBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, groupname));\n}","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/pages/stats/[groupname].tsx"],"names":["React","useRouter","Typography","MainBar","Winner","Stats","router","groupname","query"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,OAAT,QAAwB,0BAAxB;IAOKC,M;;WAAAA,M;AAAAA,EAAAA,M,CAAAA,M;AAAAA,EAAAA,M,CAAAA,M;GAAAA,M,KAAAA,M;;AAkBL,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAgBD,MAAM,CAACE,KAA7B;AACA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaD,SAAb,CAFF,CADF;AAMD","sourcesContent":["import React from \"react\";\nimport { useRouter } from \"next/router\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { MainBar } from \"../../components/MainBar\";\n\ninterface Team {\n  firstPlayerId: number;\n  secondPlayerId: number;\n}\n\nenum Winner {\n  Team1,\n  Team2,\n}\n\ninterface Score {\n  pointsTeam1: number;\n  pointsTeam2: number;\n}\n\ninterface Game {\n  teams: [Team, Team];\n  winner: Winner;\n  score: Score;\n  serve: Winner;\n  date: Date;\n}\n\nexport default function Stats() {\n  const router = useRouter();\n  const { groupname } = router.query;\n  return (\n    <React.Fragment>\n      <MainBar />\n      <Typography>{groupname}</Typography>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}