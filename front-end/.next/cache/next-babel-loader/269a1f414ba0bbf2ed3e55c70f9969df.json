{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/components/GroupList.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Fab from \"@material-ui/core/Fab\";\nimport GroupAddRoundedIcon from \"@material-ui/icons/GroupAddRounded\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { GroupListItem } from \"./common/GroupListItem\";\n\nvar handleAdd = function handleAdd() {\n  console.log(\"New Group!\");\n};\n\nvar handleDelete = function handleDelete(groupname) {\n  console.log(\"Handle delete.\", groupname);\n};\n\nvar handleRenameGroup = function handleRenameGroup(groupname) {\n  console.log(\"Rename this group\", groupname);\n};\n\nvar handleRenamePlayer = function handleRenamePlayer(groupname, player) {\n  console.log(\"Rename this player\", groupname, player);\n};\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100vw\",\n      // maxWidth: 360,\n      backgroundColor: theme.palette.background.paper\n    },\n    fab: {\n      position: \"fixed\",\n      bottom: theme.spacing(4),\n      backgroundColor: theme.palette.success.main\n    }\n  };\n});\nexport var GroupList = function GroupList() {\n  _s();\n\n  // Use stle\n  var classes = useStyles(); // For testing porpuses.\n\n  var group1 = {\n    groupname: \"Group1\",\n    players: [\"Player 1.1\", \"Player 1.2\", \"Player 1.3\", \"Player 1.4\"]\n  };\n  var group2 = {\n    groupname: \"Group2\",\n    players: [\"Player 2.1\", \"Player 2.2\", \"Player 2.3\", \"Player 2.4\"]\n  }; // Use state hook\n\n  var initialGroups = [group1, group2];\n\n  var _useState = useState(initialGroups),\n      groups = _useState[0],\n      setGroups = _useState[1];\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, __jsx(List, {\n    component: \"nav\",\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, groups.map(function (group) {\n    return __jsx(GroupListItem, {\n      key: group.groupname,\n      group: group,\n      onDelete: handleDelete,\n      onRenameGroup: handleRenameGroup,\n      onRenamePlayer: handleRenamePlayer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    });\n  })), __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    justify: \"center\",\n    style: {\n      minWidth: \"100vw\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, __jsx(Fab, {\n    size: \"large\",\n    className: classes.fab,\n    \"aria-label\": \"add\",\n    onClick: handleAdd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, __jsx(GroupAddRoundedIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(GroupList, \"Nj1MZwqejXhRKCAHFVtjFc1NRFA=\", false, function () {\n  return [useStyles];\n});\n\n_c = GroupList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupList\");","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/components/GroupList.tsx"],"names":["React","useState","List","Grid","Fab","GroupAddRoundedIcon","makeStyles","GroupListItem","handleAdd","console","log","handleDelete","groupname","handleRenameGroup","handleRenamePlayer","player","useStyles","theme","root","width","backgroundColor","palette","background","paper","fab","position","bottom","spacing","success","main","GroupList","classes","group1","players","group2","initialGroups","groups","setGroups","map","group","minWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Divider from \"@material-ui/core/Divider\";\nimport GroupAddRoundedIcon from \"@material-ui/icons/GroupAddRounded\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { GroupListItem } from \"./common/GroupListItem\";\n\nconst handleAdd = () => {\n  console.log(\"New Group!\");\n};\n\nconst handleDelete = (groupname: string) => {\n  console.log(\"Handle delete.\", groupname);\n};\n\nconst handleRenameGroup = (groupname: string) => {\n  console.log(\"Rename this group\", groupname);\n};\n\nconst handleRenamePlayer = (groupname: string, player: string) => {\n  console.log(\"Rename this player\", groupname, player);\n};\n\nexport interface Group {\n  groupname: string;\n  players: string[];\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100vw\",\n    // maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(4),\n    backgroundColor: theme.palette.success.main,\n  },\n}));\n\nexport const GroupList: React.FC = () => {\n  // Use stle\n  const classes = useStyles();\n\n  // For testing porpuses.\n  const group1: Group = {\n    groupname: \"Group1\",\n    players: [\"Player 1.1\", \"Player 1.2\", \"Player 1.3\", \"Player 1.4\"],\n  };\n  const group2: Group = {\n    groupname: \"Group2\",\n    players: [\"Player 2.1\", \"Player 2.2\", \"Player 2.3\", \"Player 2.4\"],\n  };\n  // Use state hook\n  const initialGroups: Group[] = [group1, group2];\n  const [groups, setGroups] = useState(initialGroups);\n\n  return (\n    <React.Fragment>\n      <List component=\"nav\" className={classes.root}>\n        {groups.map((group) => {\n          return (\n            <GroupListItem\n              key={group.groupname}\n              group={group}\n              onDelete={handleDelete}\n              onRenameGroup={handleRenameGroup}\n              onRenamePlayer={handleRenamePlayer}\n            />\n          );\n        })}\n      </List>\n      <Grid\n        container\n        spacing={0}\n        justify=\"center\"\n        style={{ minWidth: \"100vw\" }}\n      >\n        <Grid item>\n          <Fab\n            size=\"large\"\n            className={classes.fab}\n            aria-label=\"add\"\n            onClick={handleAdd}\n          >\n            <GroupAddRoundedIcon />\n          </Fab>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}