{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/src/components/graphs/PlayerPoints.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef, useLayoutEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\n/* Imports for amCharts*/\n// Have to add nextjs transpiler\n// https://github.com/amcharts/amcharts4/issues/1043\n\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4themes_material from \"@amcharts/amcharts4/themes/material\"; // Types\n\nconst PlayerPoints = ({\n  data\n}) => {\n  const chartFinal = useRef(null);\n  useLayoutEffect(() => {\n    // ... Chart code\n    // Themes begin\n    am4core.useTheme(am4themes_material);\n    am4core.useTheme(am4themes_animated); // Themes end\n    // Create chart instance\n\n    let chart = am4core.create(\"chartdivPlayers\", am4charts.XYChart);\n    chart.scrollbarX = new am4core.Scrollbar(); // Touch interface\n\n    chart.tapToActivate = true; // Make chart adjust to screen size more.\n\n    chart.responsive.enabled = true;\n    chart.data = data;\n    chart.responsive.enabled = true; // Create axes\n\n    let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.dataFields.category = \"name\";\n    categoryAxis.renderer.grid.template.location = 0;\n    categoryAxis.renderer.minGridDistance = 30;\n    categoryAxis.renderer.labels.template.horizontalCenter = \"right\";\n    categoryAxis.renderer.labels.template.verticalCenter = \"middle\";\n    categoryAxis.renderer.labels.template.rotation = 270;\n    categoryAxis.tooltip.disabled = true;\n    categoryAxis.renderer.minHeight = 110;\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.renderer.minWidth = 50; // valueAxis.title.text = \"Points\";\n    // Create series\n\n    let series = chart.series.push(new am4charts.ColumnSeries());\n    series.sequencedInterpolation = true;\n    series.dataFields.valueY = \"points\";\n    series.dataFields.categoryX = \"name\";\n    series.tooltipText = \"[{categoryX}: bold]{valueY}[/]\";\n    series.columns.template.strokeWidth = 0;\n    series.tooltip.pointerOrientation = \"vertical\";\n    series.columns.template.column.cornerRadiusTopLeft = 10;\n    series.columns.template.column.cornerRadiusTopRight = 10;\n    series.columns.template.column.fillOpacity = 0.8; // on hover, make corner radiuses bigger\n\n    let hoverState = series.columns.template.column.states.create(\"hover\");\n    hoverState.properties.cornerRadiusTopLeft = 0;\n    hoverState.properties.cornerRadiusTopRight = 0;\n    hoverState.properties.fillOpacity = 1;\n    series.columns.template.adapter.add(\"fill\", function (fill, target) {\n      return chart.colors.getIndex(target.dataItem.index + 1);\n    }); // Cursor\n\n    chart.cursor = new am4charts.XYCursor(); // ... boiler plate continues\n\n    chartFinal.current = chart;\n    return () => {\n      chart.dispose();\n    };\n  }, []); // When the data prop changes it will update the chart\n\n  useLayoutEffect(() => {\n    chartFinal.current.data = data;\n  }, [data]);\n  return __jsx(Box, {\n    width: 1,\n    height: 500,\n    id: \"chartdivPlayers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default PlayerPoints;","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/src/components/graphs/PlayerPoints.tsx"],"names":["React","useRef","useLayoutEffect","Box","am4core","am4charts","am4themes_animated","am4themes_material","PlayerPoints","data","chartFinal","useTheme","chart","create","XYChart","scrollbarX","Scrollbar","tapToActivate","responsive","enabled","categoryAxis","xAxes","push","CategoryAxis","dataFields","category","renderer","grid","template","location","minGridDistance","labels","horizontalCenter","verticalCenter","rotation","tooltip","disabled","minHeight","valueAxis","yAxes","ValueAxis","minWidth","series","ColumnSeries","sequencedInterpolation","valueY","categoryX","tooltipText","columns","strokeWidth","pointerOrientation","column","cornerRadiusTopLeft","cornerRadiusTopRight","fillOpacity","hoverState","states","properties","adapter","add","fill","target","colors","getIndex","dataItem","index","cursor","XYCursor","current","dispose"],"mappings":"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","sourcesContent":["import React, { useRef, useLayoutEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\n/* Imports for amCharts*/\n// Have to add nextjs transpiler\n// https://github.com/amcharts/amcharts4/issues/1043\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4themes_material from \"@amcharts/amcharts4/themes/material\";\n// Types\nimport { PlayerPointsDataInstance } from \"../../util/types\";\n\ninterface PlayerPointsProps {\n  data: PlayerPointsDataInstance[];\n}\n\nconst PlayerPoints: React.FC<PlayerPointsProps> = ({ data }) => {\n  const chartFinal = useRef(null);\n\n  useLayoutEffect(() => {\n    // ... Chart code\n    // Themes begin\n    am4core.useTheme(am4themes_material);\n    am4core.useTheme(am4themes_animated);\n    // Themes end\n\n    // Create chart instance\n    let chart = am4core.create(\"chartdivPlayers\", am4charts.XYChart);\n    chart.scrollbarX = new am4core.Scrollbar();\n\n    // Touch interface\n    chart.tapToActivate = true;\n    // Make chart adjust to screen size more.\n    chart.responsive.enabled = true;\n\n    chart.data = data;\n\n    chart.responsive.enabled = true;\n    // Create axes\n    let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.dataFields.category = \"name\";\n    categoryAxis.renderer.grid.template.location = 0;\n    categoryAxis.renderer.minGridDistance = 30;\n    categoryAxis.renderer.labels.template.horizontalCenter = \"right\";\n    categoryAxis.renderer.labels.template.verticalCenter = \"middle\";\n    categoryAxis.renderer.labels.template.rotation = 270;\n    categoryAxis.tooltip.disabled = true;\n    categoryAxis.renderer.minHeight = 110;\n\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.renderer.minWidth = 50;\n    // valueAxis.title.text = \"Points\";\n\n    // Create series\n    let series = chart.series.push(new am4charts.ColumnSeries());\n    series.sequencedInterpolation = true;\n    series.dataFields.valueY = \"points\";\n    series.dataFields.categoryX = \"name\";\n    series.tooltipText = \"[{categoryX}: bold]{valueY}[/]\";\n    series.columns.template.strokeWidth = 0;\n\n    series.tooltip.pointerOrientation = \"vertical\";\n\n    series.columns.template.column.cornerRadiusTopLeft = 10;\n    series.columns.template.column.cornerRadiusTopRight = 10;\n    series.columns.template.column.fillOpacity = 0.8;\n\n    // on hover, make corner radiuses bigger\n    let hoverState = series.columns.template.column.states.create(\"hover\");\n    hoverState.properties.cornerRadiusTopLeft = 0;\n    hoverState.properties.cornerRadiusTopRight = 0;\n    hoverState.properties.fillOpacity = 1;\n\n    series.columns.template.adapter.add(\"fill\", function (fill, target) {\n      return chart.colors.getIndex(target.dataItem.index + 1);\n    });\n\n    // Cursor\n    chart.cursor = new am4charts.XYCursor();\n\n    // ... boiler plate continues\n    chartFinal.current = chart;\n\n    return () => {\n      chart.dispose();\n    };\n  }, []);\n\n  // When the data prop changes it will update the chart\n  useLayoutEffect(() => {\n    chartFinal.current.data = data;\n  }, [data]);\n\n  return <Box width={1} height={500} id=\"chartdivPlayers\"></Box>;\n};\n\nexport default PlayerPoints;\n"]},"metadata":{},"sourceType":"module"}