{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/components/LoginForm.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport Router from \"next/router\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link as MuiLink } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport PersonRoundedIcon from \"@material-ui/icons/PersonRounded\";\nimport LockRoundedIcon from \"@material-ui/icons/LockRounded\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { FormikField } from \"./common/FormikField\";\nimport Swal from \"sweetalert2\";\nvar useStyles = makeStyles({\n  root: {\n    background: \"#ECECEC\"\n  }\n});\nvar SignupSchema = Yup.object().shape({\n  username: Yup.string().min(3, \"Too short!\").max(30, \"Too long!\").required(\"Required!\"),\n  password: Yup.string().min(4, \"Too short!\").max(30, \"Too long!\").required(\"Required!\")\n});\nexport var LoginForm = function LoginForm(_ref) {\n  _s();\n\n  var header = _ref.header,\n      loginRoute = _ref.loginRoute,\n      registerRoute = _ref.registerRoute;\n  var classes = useStyles();\n  var theme = useTheme();\n  var initialValues = {\n    username: \"\",\n    password: \"\"\n  };\n\n  var handleSubmit = function handleSubmit(values) {\n    // Call server HERE\n    if (values.username === \"yes\") {\n      Router.push(\"\".concat(loginRoute));\n    } else {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Wrong username or password\",\n        toast: true,\n        position: \"center\",\n        showConfirmButton: false,\n        timer: 5000,\n        timerProgressBar: true\n      });\n    }\n  };\n\n  return __jsx(Box, {\n    padding: 4,\n    maxWidth: \"sm\",\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    style: {\n      textAlign: \"left\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, header), __jsx(Formik, {\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: SignupSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, function (_ref2) {\n    var dirty = _ref2.dirty,\n        isValid = _ref2.isValid;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, __jsx(FormikField, {\n      name: \"username\",\n      label: \"Username\",\n      icon: __jsx(PersonRoundedIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 23\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }), __jsx(FormikField, {\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      icon: __jsx(LockRoundedIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 23\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }), __jsx(Box, {\n      my: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: !dirty || !isValid,\n      type: \"submit\",\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, \"Sign In\")), __jsx(Link, {\n      href: \"\".concat(registerRoute),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, __jsx(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, __jsx(MuiLink, {\n      href: \"#\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }, \"Register.\"))));\n  }));\n};\n\n_s(LoginForm, \"VtevrTi9kvKTG+vqc/SYVHiEGOM=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/components/LoginForm.tsx"],"names":["React","Link","Router","Formik","Form","Yup","Typography","MuiLink","Button","Box","PersonRoundedIcon","LockRoundedIcon","makeStyles","useTheme","FormikField","Swal","useStyles","root","background","SignupSchema","object","shape","username","string","min","max","required","password","LoginForm","header","loginRoute","registerRoute","classes","theme","initialValues","handleSubmit","values","push","fire","icon","title","toast","position","showConfirmButton","timer","timerProgressBar","textAlign","dirty","isValid"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Link from \"next/link\";\nimport Router from \"next/router\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link as MuiLink } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport PersonRoundedIcon from \"@material-ui/icons/PersonRounded\";\nimport LockRoundedIcon from \"@material-ui/icons/LockRounded\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { FormikField } from \"./common/FormikField\";\nimport Swal from \"sweetalert2\";\n\nconst useStyles = makeStyles({\n  root: {\n    background: \"#ECECEC\",\n  },\n});\n\ninterface FormValues {\n  username: string;\n  password: string;\n}\ninterface LoginFormProps {\n  header: string;\n  loginRoute: string;\n  registerRoute: string;\n}\n\nconst SignupSchema = Yup.object().shape({\n  username: Yup.string()\n    .min(3, \"Too short!\")\n    .max(30, \"Too long!\")\n    .required(\"Required!\"),\n  password: Yup.string()\n    .min(4, \"Too short!\")\n    .max(30, \"Too long!\")\n    .required(\"Required!\"),\n});\n\nexport const LoginForm: React.FC<LoginFormProps> = ({\n  header,\n  loginRoute,\n  registerRoute,\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const initialValues: FormValues = {\n    username: \"\",\n    password: \"\",\n  };\n\n  const handleSubmit = (values: FormValues): void => {\n    // Call server HERE\n    if (values.username === \"yes\") {\n      Router.push(`${loginRoute}`);\n    } else {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Wrong username or password\",\n        toast: true,\n        position: \"center\",\n        showConfirmButton: false,\n        timer: 5000,\n        timerProgressBar: true,\n      });\n    }\n  };\n\n  return (\n    <Box padding={4} maxWidth=\"sm\" className={classes.root}>\n      <Typography component=\"h1\" variant=\"h5\" style={{ textAlign: \"left\" }}>\n        {header}\n      </Typography>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={SignupSchema}\n      >\n        {({ dirty, isValid }) => {\n          return (\n            <Form>\n              <FormikField\n                name=\"username\"\n                label=\"Username\"\n                icon={<PersonRoundedIcon />}\n              />\n              <FormikField\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                icon={<LockRoundedIcon />}\n              />\n              <Box my={2}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={!dirty || !isValid}\n                  type=\"submit\"\n                  fullWidth\n                >\n                  Sign In\n                </Button>\n              </Box>\n              <Link href={`${registerRoute}`}>\n                <Typography>\n                  <MuiLink href=\"#\">Register.</MuiLink>\n                </Typography>\n              </Link>\n            </Form>\n          );\n        }}\n      </Formik>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}