{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/util/swals.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { AddChips } from \"../components/AddChips\";\n// Template for error messages.\nexport var errorToast = Swal.mixin({\n  title: \"Something went wrong!\",\n  icon: \"error\",\n  toast: true,\n  position: \"center\",\n  showConfirmButton: false,\n  timer: 4000,\n  timerProgressBar: true\n});\nexport function teamSelection(_x) {\n  return _teamSelection.apply(this, arguments);\n}\n\nfunction _teamSelection() {\n  _teamSelection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(players) {\n    var emptyTeamBlue, emptyTeamRed, selectedTeams, handleSelectPlayer, handleRemovePlayer, AddGameSwal, _yield$AddGameSwal$fi, finalSelection;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            emptyTeamBlue = [-1, -1];\n            emptyTeamRed = [-1, -1];\n            selectedTeams = {\n              blueTeam: emptyTeamBlue,\n              redTeam: emptyTeamRed\n            };\n\n            handleSelectPlayer = function handleSelectPlayer(id, isBlue) {\n              if (isBlue) {\n                if (selectedTeams.blueTeam[0] === -1) {\n                  selectedTeams.blueTeam[0] = id;\n                } else {\n                  selectedTeams.blueTeam[1] = id;\n                }\n              } else {\n                if (selectedTeams.redTeam[0] === -1) {\n                  selectedTeams.redTeam[0] = id;\n                } else {\n                  selectedTeams.redTeam[1] = id;\n                }\n              }\n            };\n\n            handleRemovePlayer = function handleRemovePlayer(id, isBlue) {\n              if (isBlue) {\n                if (selectedTeams.blueTeam[0] === id) {\n                  selectedTeams.blueTeam[0] = -1;\n                } else {\n                  selectedTeams.blueTeam[1] = -1;\n                }\n              } else {\n                if (selectedTeams.redTeam[0] === id) {\n                  selectedTeams.redTeam[0] = -1;\n                } else {\n                  selectedTeams.redTeam[1] = -1;\n                }\n              }\n            };\n\n            AddGameSwal = withReactContent(Swal);\n            _context.next = 8;\n            return AddGameSwal.fire({\n              title: \"Choose Teams\",\n              html: __jsx(AddChips, {\n                players: players,\n                teams: selectedTeams,\n                onSelect: handleSelectPlayer,\n                onDelete: handleRemovePlayer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 7\n                }\n              }),\n              showCancelButton: true,\n              confirmButtonText: \"Next &rarr;\",\n              progressSteps: [\"1\", \"2\", \"3\"],\n              currentProgressStep: \"0\",\n              preConfirm: function preConfirm() {\n                if (selectedTeams.blueTeam[0] === -1 || selectedTeams.blueTeam[1] === -1 || selectedTeams.redTeam[0] === -1 || selectedTeams.redTeam[1] === -1) {\n                  AddGameSwal.showValidationMessage(\"You must select four players.\");\n                  return false;\n                }\n\n                return selectedTeams;\n              }\n            });\n\n          case 8:\n            _yield$AddGameSwal$fi = _context.sent;\n            finalSelection = _yield$AddGameSwal$fi.value;\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              if (!finalSelection) {\n                reject();\n              } else {\n                resolve(finalSelection);\n              }\n            }));\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _teamSelection.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/util/swals.tsx"],"names":["React","Swal","withReactContent","AddChips","errorToast","mixin","title","icon","toast","position","showConfirmButton","timer","timerProgressBar","teamSelection","players","emptyTeamBlue","emptyTeamRed","selectedTeams","blueTeam","redTeam","handleSelectPlayer","id","isBlue","handleRemovePlayer","AddGameSwal","fire","html","showCancelButton","confirmButtonText","progressSteps","currentProgressStep","preConfirm","showValidationMessage","finalSelection","value","Promise","resolve","reject"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { AddChips } from \"../components/AddChips\";\nimport { Team, Players } from \"./types\";\n\n// Template for error messages.\nexport const errorToast = Swal.mixin({\n  title: \"Something went wrong!\",\n  icon: \"error\",\n  toast: true,\n  position: \"center\",\n  showConfirmButton: false,\n  timer: 4000,\n  timerProgressBar: true,\n});\n\ninterface Selection {\n  blueTeam: Team;\n  redTeam: Team;\n}\nexport async function teamSelection(players: Players): Promise<Selection> {\n  const emptyTeamBlue: Team = [-1, -1];\n  const emptyTeamRed: Team = [-1, -1];\n  const selectedTeams = { blueTeam: emptyTeamBlue, redTeam: emptyTeamRed };\n  const handleSelectPlayer = (id: number, isBlue: boolean) => {\n    if (isBlue) {\n      if (selectedTeams.blueTeam[0] === -1) {\n        selectedTeams.blueTeam[0] = id;\n      } else {\n        selectedTeams.blueTeam[1] = id;\n      }\n    } else {\n      if (selectedTeams.redTeam[0] === -1) {\n        selectedTeams.redTeam[0] = id;\n      } else {\n        selectedTeams.redTeam[1] = id;\n      }\n    }\n  };\n  const handleRemovePlayer = (id: number, isBlue: boolean) => {\n    if (isBlue) {\n      if (selectedTeams.blueTeam[0] === id) {\n        selectedTeams.blueTeam[0] = -1;\n      } else {\n        selectedTeams.blueTeam[1] = -1;\n      }\n    } else {\n      if (selectedTeams.redTeam[0] === id) {\n        selectedTeams.redTeam[0] = -1;\n      } else {\n        selectedTeams.redTeam[1] = -1;\n      }\n    }\n  };\n\n  const AddGameSwal = withReactContent(Swal);\n  const { value: finalSelection } = await AddGameSwal.fire({\n    title: \"Choose Teams\",\n    html: (\n      <AddChips\n        players={players}\n        teams={selectedTeams}\n        onSelect={handleSelectPlayer}\n        onDelete={handleRemovePlayer}\n      />\n    ),\n    showCancelButton: true,\n    confirmButtonText: \"Next &rarr;\",\n    progressSteps: [\"1\", \"2\", \"3\"],\n    currentProgressStep: \"0\",\n    preConfirm: () => {\n      if (\n        selectedTeams.blueTeam[0] === -1 ||\n        selectedTeams.blueTeam[1] === -1 ||\n        selectedTeams.redTeam[0] === -1 ||\n        selectedTeams.redTeam[1] === -1\n      ) {\n        AddGameSwal.showValidationMessage(\"You must select four players.\");\n        return false;\n      }\n      return selectedTeams;\n    },\n  });\n  // Correct and neccessary syntax??\n  return new Promise((resolve, reject) => {\n    if (!finalSelection) {\n      reject();\n    } else {\n      resolve(finalSelection);\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}