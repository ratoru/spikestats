{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/components/common/MuiMenu.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { Menu, MenuItem, ListItemIcon, ListItemText, useTheme, Tooltip } from \"@material-ui/core\";\nimport { Turn as Hamburger } from \"hamburger-react\";\nexport const MuiMenu = ({\n  items,\n  size = 32,\n  color\n}) => {\n  // Hamburger state\n  const [isOpen, setOpen] = React.useState(false); // Boiler-plate code from MUI for the menu\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null); // Adjustment to also close Hamburger.\n\n    setOpen(!isOpen);\n  }; // Allows you to refer to your defined theme.\n\n\n  const theme = useTheme();\n  const themeColors = [theme.palette.primary.main, theme.palette.secondary.main, theme.palette.error.main, theme.palette.info.main, theme.palette.success.main];\n  let numColors = themeColors.length;\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, __jsx(Tooltip, {\n    title: \"Menu\",\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(Hamburger, {\n    size: size,\n    color: color,\n    label: \"Show menu\",\n    rounded: true,\n    toggled: isOpen,\n    toggle: setOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }))), __jsx(Menu, {\n    id: \"customized-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, items.map((curItem, index) => {\n    return __jsx(Link, {\n      href: curItem[2],\n      passHref: true,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, __jsx(MenuItem, {\n      component: \"a\",\n      style: {\n        backgroundColor: themeColors[index % numColors]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, __jsx(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, curItem[1]), __jsx(ListItemText, {\n      primary: curItem[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    })));\n  })));\n};","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/components/common/MuiMenu.tsx"],"names":["React","Link","Menu","MenuItem","ListItemIcon","ListItemText","useTheme","Tooltip","Turn","Hamburger","MuiMenu","items","size","color","isOpen","setOpen","useState","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","theme","themeColors","palette","primary","main","secondary","error","info","success","numColors","length","Boolean","map","curItem","index","backgroundColor"],"mappings":"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","sourcesContent":["import React, { ReactElement } from \"react\";\nimport Link from \"next/link\";\nimport {\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  useTheme,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { Turn as Hamburger } from \"hamburger-react\";\n\nexport type MuiMenuItem = [string, ReactElement, string];\n\ninterface MuiMenuProps {\n  items: MuiMenuItem[];\n  color: string;\n  size?: number;\n}\n\nexport const MuiMenu: React.FC<MuiMenuProps> = ({\n  items,\n  size = 32,\n  color,\n}) => {\n  // Hamburger state\n  const [isOpen, setOpen] = React.useState(false);\n  // Boiler-plate code from MUI for the menu\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n    // Adjustment to also close Hamburger.\n    setOpen(!isOpen);\n  };\n\n  // Allows you to refer to your defined theme.\n  const theme = useTheme();\n  const themeColors = [\n    theme.palette.primary.main,\n    theme.palette.secondary.main,\n    theme.palette.error.main,\n    theme.palette.info.main,\n    theme.palette.success.main,\n  ];\n  let numColors = themeColors.length;\n\n  return (\n    <React.Fragment>\n      <Tooltip title=\"Menu\" arrow>\n        <div onClick={handleClick}>\n          <Hamburger\n            size={size}\n            color={color}\n            label=\"Show menu\"\n            rounded\n            toggled={isOpen}\n            toggle={setOpen}\n          />\n        </div>\n      </Tooltip>\n      <Menu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {items.map((curItem, index) => {\n          return (\n            <Link href={curItem[2]} passHref key={index}>\n              <MenuItem\n                component=\"a\"\n                style={{ backgroundColor: themeColors[index % numColors] }}\n              >\n                <ListItemIcon>{curItem[1]}</ListItemIcon>\n                <ListItemText primary={curItem[0]} />\n              </MenuItem>\n            </Link>\n          );\n        })}\n      </Menu>\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}