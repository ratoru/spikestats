{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/util/swals.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AddChips } from \"../components/AddChips\";\nimport { AddScoreField } from \"../components/AddScoreField\";\n// Template for error messages.\nexport const errorToast = Swal.mixin({\n  title: \"Something went wrong!\",\n  icon: \"error\",\n  toast: true,\n  position: \"center\",\n  showConfirmButton: false,\n  timer: 4000,\n  timerProgressBar: true\n}); // Fixes Appbar overlapping Swal Container\n// AppBar z: 1100, Swal default: 1060\n\nconst useStyles = makeStyles({\n  mySw2Container: {\n    zIndex: 1150\n  }\n});\nexport async function teamSelection(players) {\n  const classes = useStyles();\n  const emptyTeamBlue = [-1, -1];\n  const emptyTeamRed = [-1, -1];\n  const selectedTeams = {\n    blueTeam: emptyTeamBlue,\n    redTeam: emptyTeamRed\n  };\n\n  const handleSelectPlayer = (id, isBlue) => {\n    if (isBlue) {\n      if (selectedTeams.blueTeam[0] === -1) {\n        selectedTeams.blueTeam[0] = id;\n      } else {\n        selectedTeams.blueTeam[1] = id;\n      }\n    } else {\n      if (selectedTeams.redTeam[0] === -1) {\n        selectedTeams.redTeam[0] = id;\n      } else {\n        selectedTeams.redTeam[1] = id;\n      }\n    }\n  };\n\n  const handleRemovePlayer = (id, isBlue) => {\n    if (isBlue) {\n      if (selectedTeams.blueTeam[0] === id) {\n        selectedTeams.blueTeam[0] = -1;\n      } else {\n        selectedTeams.blueTeam[1] = -1;\n      }\n    } else {\n      if (selectedTeams.redTeam[0] === id) {\n        selectedTeams.redTeam[0] = -1;\n      } else {\n        selectedTeams.redTeam[1] = -1;\n      }\n    }\n  };\n\n  const AddGameSwal = withReactContent(Swal);\n  const {\n    value: finalSelection\n  } = await AddGameSwal.fire({\n    customClass: {\n      container: classes.mySw2Container\n    },\n    title: \"Choose Teams\",\n    html: __jsx(AddChips, {\n      players: players,\n      teams: selectedTeams,\n      onSelect: handleSelectPlayer,\n      onDelete: handleRemovePlayer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }),\n    showCancelButton: true,\n    confirmButtonText: \"Next &rarr;\",\n    progressSteps: [\"1\", \"2\", \"3\", \"4\"],\n    currentProgressStep: \"0\",\n    preConfirm: () => {\n      if (selectedTeams.blueTeam[0] === -1 || selectedTeams.blueTeam[1] === -1 || selectedTeams.redTeam[0] === -1 || selectedTeams.redTeam[1] === -1) {\n        AddGameSwal.showValidationMessage(\"You must select four players.\");\n        return false;\n      }\n\n      return selectedTeams;\n    }\n  }); // Correct and neccessary syntax??\n\n  return new Promise((resolve, reject) => {\n    if (!finalSelection) {\n      reject();\n    } else {\n      resolve(finalSelection);\n    }\n  });\n} // Score Selection\n\nexport async function scoreSelection(players, teamSelection) {\n  const classes = useStyles();\n  let blueScore = 0;\n  let redScore = 0;\n\n  const handleChange = (score, isBlue) => {\n    isBlue ? blueScore = score : redScore = score;\n  };\n\n  const scoreSwal = withReactContent(Swal);\n  const {\n    value: finalScore\n  } = await scoreSwal.fire({\n    customClass: {\n      container: classes.mySw2Container\n    },\n    title: \"Enter the Score\",\n    html: __jsx(AddScoreField, {\n      players: players,\n      teams: teamSelection,\n      blueScore: blueScore,\n      redScore: redScore,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }),\n    showCancelButton: true,\n    confirmButtonText: \"Next &rarr;\",\n    progressSteps: [\"1\", \"2\", \"3\", \"4\"],\n    currentProgressStep: \"1\",\n    preConfirm: () => {\n      if (blueScore >= 0 && redScore >= 0 && blueScore !== redScore) {\n        const score = [blueScore, redScore];\n        return score;\n      }\n\n      scoreSwal.showValidationMessage(\"The score can't be a tie.\");\n      return false;\n    }\n  }); // Correct and neccessary syntax??\n\n  return new Promise((resolve, reject) => {\n    if (!finalScore) {\n      reject();\n    } else {\n      resolve(finalScore);\n    }\n  });\n}","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/util/swals.tsx"],"names":["React","Swal","withReactContent","makeStyles","AddChips","AddScoreField","errorToast","mixin","title","icon","toast","position","showConfirmButton","timer","timerProgressBar","useStyles","mySw2Container","zIndex","teamSelection","players","classes","emptyTeamBlue","emptyTeamRed","selectedTeams","blueTeam","redTeam","handleSelectPlayer","id","isBlue","handleRemovePlayer","AddGameSwal","value","finalSelection","fire","customClass","container","html","showCancelButton","confirmButtonText","progressSteps","currentProgressStep","preConfirm","showValidationMessage","Promise","resolve","reject","scoreSelection","blueScore","redScore","handleChange","score","scoreSwal","finalScore"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AddChips } from \"../components/AddChips\";\nimport { AddScoreField } from \"../components/AddScoreField\";\nimport { Team, Players } from \"./types\";\n\n// Template for error messages.\nexport const errorToast = Swal.mixin({\n  title: \"Something went wrong!\",\n  icon: \"error\",\n  toast: true,\n  position: \"center\",\n  showConfirmButton: false,\n  timer: 4000,\n  timerProgressBar: true,\n});\n\n// Fixes Appbar overlapping Swal Container\n// AppBar z: 1100, Swal default: 1060\nconst useStyles = makeStyles({\n  mySw2Container: {\n    zIndex: 1150,\n  },\n});\n\ninterface Selection {\n  blueTeam: Team;\n  redTeam: Team;\n}\nexport async function teamSelection(players: Players): Promise<Selection> {\n  const classes = useStyles();\n  const emptyTeamBlue: Team = [-1, -1];\n  const emptyTeamRed: Team = [-1, -1];\n  const selectedTeams = { blueTeam: emptyTeamBlue, redTeam: emptyTeamRed };\n  const handleSelectPlayer = (id: number, isBlue: boolean) => {\n    if (isBlue) {\n      if (selectedTeams.blueTeam[0] === -1) {\n        selectedTeams.blueTeam[0] = id;\n      } else {\n        selectedTeams.blueTeam[1] = id;\n      }\n    } else {\n      if (selectedTeams.redTeam[0] === -1) {\n        selectedTeams.redTeam[0] = id;\n      } else {\n        selectedTeams.redTeam[1] = id;\n      }\n    }\n  };\n  const handleRemovePlayer = (id: number, isBlue: boolean) => {\n    if (isBlue) {\n      if (selectedTeams.blueTeam[0] === id) {\n        selectedTeams.blueTeam[0] = -1;\n      } else {\n        selectedTeams.blueTeam[1] = -1;\n      }\n    } else {\n      if (selectedTeams.redTeam[0] === id) {\n        selectedTeams.redTeam[0] = -1;\n      } else {\n        selectedTeams.redTeam[1] = -1;\n      }\n    }\n  };\n\n  const AddGameSwal = withReactContent(Swal);\n  const { value: finalSelection } = await AddGameSwal.fire({\n    customClass: { container: classes.mySw2Container },\n    title: \"Choose Teams\",\n    html: (\n      <AddChips\n        players={players}\n        teams={selectedTeams}\n        onSelect={handleSelectPlayer}\n        onDelete={handleRemovePlayer}\n      />\n    ),\n    showCancelButton: true,\n    confirmButtonText: \"Next &rarr;\",\n    progressSteps: [\"1\", \"2\", \"3\", \"4\"],\n    currentProgressStep: \"0\",\n    preConfirm: () => {\n      if (\n        selectedTeams.blueTeam[0] === -1 ||\n        selectedTeams.blueTeam[1] === -1 ||\n        selectedTeams.redTeam[0] === -1 ||\n        selectedTeams.redTeam[1] === -1\n      ) {\n        AddGameSwal.showValidationMessage(\"You must select four players.\");\n        return false;\n      }\n      return selectedTeams;\n    },\n  });\n  // Correct and neccessary syntax??\n  return new Promise((resolve, reject) => {\n    if (!finalSelection) {\n      reject();\n    } else {\n      resolve(finalSelection);\n    }\n  });\n}\n\n// Score Selection\nexport async function scoreSelection(\n  players: Players,\n  teamSelection: Selection\n): Promise<[number, number]> {\n  const classes = useStyles();\n  let blueScore: number = 0;\n  let redScore: number = 0;\n  const handleChange = (score: number, isBlue: boolean) => {\n    isBlue ? (blueScore = score) : (redScore = score);\n  };\n  const scoreSwal = withReactContent(Swal);\n  const { value: finalScore } = await scoreSwal.fire({\n    customClass: { container: classes.mySw2Container },\n    title: \"Enter the Score\",\n    html: (\n      <AddScoreField\n        players={players}\n        teams={teamSelection}\n        blueScore={blueScore}\n        redScore={redScore}\n        onChange={handleChange}\n      />\n    ),\n    showCancelButton: true,\n    confirmButtonText: \"Next &rarr;\",\n    progressSteps: [\"1\", \"2\", \"3\", \"4\"],\n    currentProgressStep: \"1\",\n    preConfirm: () => {\n      if (blueScore >= 0 && redScore >= 0 && blueScore !== redScore) {\n        const score: [number, number] = [blueScore, redScore];\n        return score;\n      }\n      scoreSwal.showValidationMessage(\"The score can't be a tie.\");\n      return false;\n    },\n  });\n  // Correct and neccessary syntax??\n  return new Promise((resolve, reject) => {\n    if (!finalScore) {\n      reject();\n    } else {\n      resolve(finalScore);\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}