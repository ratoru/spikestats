{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/components/GameTable.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// Adapted from MUI Documentation\nimport React, { forwardRef } from \"react\";\nimport MaterialTable from \"material-table\"; // Imports to so that material-table icons are working.\n// Also see https://github.com/mbrn/material-table/issues/1004#issuecomment-525274793\n\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\"; // typings are here:\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => __jsx(AddBox, _extends({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 35\n    }\n  }))),\n  Check: forwardRef((props, ref) => __jsx(Check, _extends({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 37\n    }\n  }))),\n  Clear: forwardRef((props, ref) => __jsx(Clear, _extends({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 37\n    }\n  }))),\n  Delete: forwardRef((props, ref) => __jsx(DeleteOutline, _extends({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 38\n    }\n  }))),\n  DetailPanel: forwardRef((props, ref) => __jsx(ChevronRight, _extends({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }))),\n  Edit: forwardRef((props, ref) => __jsx(Edit, _extends({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 36\n    }\n  }))),\n  Export: forwardRef((props, ref) => __jsx(SaveAlt, _extends({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 38\n    }\n  }))),\n  Filter: forwardRef((props, ref) => __jsx(FilterList, _extends({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 38\n    }\n  }))),\n  FirstPage: forwardRef((props, ref) => __jsx(FirstPage, _extends({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 41\n    }\n  }))),\n  LastPage: forwardRef((props, ref) => __jsx(LastPage, _extends({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 40\n    }\n  }))),\n  NextPage: forwardRef((props, ref) => __jsx(ChevronRight, _extends({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 40\n    }\n  }))),\n  PreviousPage: forwardRef((props, ref) => __jsx(ChevronLeft, _extends({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }))),\n  ResetSearch: forwardRef((props, ref) => __jsx(Clear, _extends({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 43\n    }\n  }))),\n  Search: forwardRef((props, ref) => __jsx(Search, _extends({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 38\n    }\n  }))),\n  SortArrow: forwardRef((props, ref) => __jsx(ArrowUpward, _extends({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 41\n    }\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => __jsx(Remove, _extends({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 47\n    }\n  }))),\n  ViewColumn: forwardRef((props, ref) => __jsx(ViewColumn, _extends({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 42\n    }\n  })))\n};\nexport const GameTable = () => {\n  const [state, setState] = React.useState({\n    columns: [{\n      title: \"Blue Team\",\n      field: \"blueTeam\"\n    }, {\n      title: \"Red Team\",\n      field: \"redTeam\"\n    }, {\n      title: \"Score\",\n      field: \"score\",\n      type: \"numeric\"\n    }, {\n      title: \"Team with Serve\",\n      field: \"serve\",\n      lookup: {\n        0: \"Blue\",\n        1: \"Red\"\n      }\n    }, {\n      title: \"Date\",\n      field: \"date\",\n      type: \"datetime\"\n    }],\n    data: [{\n      blueTeam: \"Raph, Alex\",\n      redTeam: \"Val, Son\",\n      score: \"21:10\",\n      serve: 0,\n      date: new Date()\n    }]\n  });\n  return __jsx(MaterialTable, {\n    title: \"Your Games\",\n    icons: tableIcons,\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        resolve();\n        setState(prevState => {\n          const data = [...prevState.data];\n          data.push(newData);\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            data\n          });\n        });\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        resolve();\n        setState(prevState => {\n          const data = [...prevState.data];\n          data.splice(data.indexOf(oldData), 1);\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            data\n          });\n        });\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  });\n};","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/components/GameTable.tsx"],"names":["React","forwardRef","MaterialTable","AddBox","ArrowUpward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","GameTable","state","setState","useState","columns","title","field","type","lookup","data","blueTeam","redTeam","score","serve","date","Date","onRowAdd","newData","Promise","resolve","prevState","push","onRowDelete","oldData","splice","indexOf"],"mappings":"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","sourcesContent":["// Adapted from MUI Documentation\nimport React, { forwardRef } from \"react\";\nimport MaterialTable, { Column } from \"material-table\";\n// Imports to so that material-table icons are working.\n// Also see https://github.com/mbrn/material-table/issues/1004#issuecomment-525274793\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\n// typings are here:\nimport { Icons } from \"material-table\";\n\nconst tableIcons: Icons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\ninterface Row {\n  blueTeam: string;\n  redTeam: string;\n  score: string;\n  serve: number;\n  date: Date;\n}\n\ninterface TableState {\n  columns: Array<Column<Row>>;\n  data: Row[];\n}\n\ninterface GameTableProps {}\n\nexport const GameTable: React.FC<GameTableProps> = () => {\n  const [state, setState] = React.useState<TableState>({\n    columns: [\n      { title: \"Blue Team\", field: \"blueTeam\" },\n      { title: \"Red Team\", field: \"redTeam\" },\n      { title: \"Score\", field: \"score\", type: \"numeric\" },\n      {\n        title: \"Team with Serve\",\n        field: \"serve\",\n        lookup: { 0: \"Blue\", 1: \"Red\" },\n      },\n      { title: \"Date\", field: \"date\", type: \"datetime\" },\n    ],\n    data: [\n      {\n        blueTeam: \"Raph, Alex\",\n        redTeam: \"Val, Son\",\n        score: \"21:10\",\n        serve: 0,\n        date: new Date(),\n      },\n    ],\n  });\n\n  return (\n    <MaterialTable\n      title=\"Your Games\"\n      icons={tableIcons}\n      columns={state.columns}\n      data={state.data}\n      editable={{\n        onRowAdd: (newData) =>\n          new Promise((resolve) => {\n            resolve();\n            setState((prevState) => {\n              const data = [...prevState.data];\n              data.push(newData);\n              return { ...prevState, data };\n            });\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n            resolve();\n            setState((prevState) => {\n              const data = [...prevState.data];\n              data.splice(data.indexOf(oldData), 1);\n              return { ...prevState, data };\n            });\n          }),\n      }}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}