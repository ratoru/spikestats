{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/components/GroupList.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport GroupAddRoundedIcon from \"@material-ui/icons/GroupAddRounded\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { GroupListItem } from \"./common/GroupListItem\";\n\nconst handleRenameGroup = groupname => {\n  console.log(\"Rename this group\", groupname);\n};\n\nconst handleRenamePlayer = (groupname, player) => {\n  console.log(\"Rename this player\", groupname, player);\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100vw\",\n    // maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(4),\n    backgroundColor: theme.palette.success.main\n  }\n}));\nexport const GroupList = () => {\n  // Use style\n  const classes = useStyles(); // For testing porpuses.\n\n  const group1 = {\n    groupname: \"Group1\",\n    players: [\"Player 1.1\", \"Player 1.2\", \"Player 1.3\", \"Player 1.4\"]\n  };\n  const group2 = {\n    groupname: \"Group2\",\n    players: [\"Player 2.1\", \"Player 2.2\", \"Player 2.3\", \"Player 2.4\"]\n  }; // Use state hook\n\n  const initialGroups = [group1, group2];\n  const {\n    0: groups,\n    1: setGroups\n  } = useState(initialGroups); // Add a group\n\n  const handleAdd = () => {\n    const newGroup = {\n      groupname: \"New Group\",\n      players: [\"New Player 1\", \"New Player 2\"]\n    };\n    const newGroups = [...groups];\n    newGroups.push(newGroup);\n    setGroups(newGroups);\n    console.log(\"New Group!\");\n  }; // Delete a group\n\n\n  const handleDelete = groupname => {\n    console.log(\"Handle delete.\", groupname, groups);\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(List, {\n    component: \"nav\",\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, groups.map(group => {\n    return __jsx(GroupListItem, {\n      key: group.groupname,\n      group: group,\n      onDelete: handleDelete,\n      onRenameGroup: handleRenameGroup,\n      onRenamePlayer: handleRenamePlayer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    });\n  })), __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    justify: \"center\",\n    style: {\n      minWidth: \"100vw\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, __jsx(Tooltip, {\n    title: \"New Group\",\n    arrow: true,\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, __jsx(Fab, {\n    size: \"large\",\n    className: classes.fab,\n    \"aria-label\": \"add\",\n    onClick: handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, __jsx(GroupAddRoundedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }))))));\n};","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/components/GroupList.tsx"],"names":["React","useState","List","Grid","Fab","Tooltip","GroupAddRoundedIcon","makeStyles","GroupListItem","handleRenameGroup","groupname","console","log","handleRenamePlayer","player","useStyles","theme","root","width","backgroundColor","palette","background","paper","fab","position","bottom","spacing","success","main","GroupList","classes","group1","players","group2","initialGroups","groups","setGroups","handleAdd","newGroup","newGroups","push","handleDelete","map","group","minWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport GroupAddRoundedIcon from \"@material-ui/icons/GroupAddRounded\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { GroupListItem } from \"./common/GroupListItem\";\n\nconst handleRenameGroup = (groupname: string) => {\n  console.log(\"Rename this group\", groupname);\n};\n\nconst handleRenamePlayer = (groupname: string, player: string) => {\n  console.log(\"Rename this player\", groupname, player);\n};\n\nexport interface Group {\n  groupname: string;\n  players: string[];\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100vw\",\n    // maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(4),\n    backgroundColor: theme.palette.success.main,\n  },\n}));\n\nexport const GroupList: React.FC = () => {\n  // Use style\n  const classes = useStyles();\n\n  // For testing porpuses.\n  const group1: Group = {\n    groupname: \"Group1\",\n    players: [\"Player 1.1\", \"Player 1.2\", \"Player 1.3\", \"Player 1.4\"],\n  };\n  const group2: Group = {\n    groupname: \"Group2\",\n    players: [\"Player 2.1\", \"Player 2.2\", \"Player 2.3\", \"Player 2.4\"],\n  };\n  // Use state hook\n  const initialGroups: Group[] = [group1, group2];\n  const [groups, setGroups] = useState(initialGroups);\n\n  // Add a group\n  const handleAdd = () => {\n    const newGroup: Group = {\n      groupname: \"New Group\",\n      players: [\"New Player 1\", \"New Player 2\"],\n    };\n    const newGroups: Group[] = [...groups];\n    newGroups.push(newGroup);\n    setGroups(newGroups);\n    console.log(\"New Group!\");\n  };\n\n  // Delete a group\n  const handleDelete = (groupname: string) => {\n    console.log(\"Handle delete.\", groupname, groups);\n  };\n\n  return (\n    <React.Fragment>\n      <List component=\"nav\" className={classes.root}>\n        {groups.map((group) => {\n          return (\n            <GroupListItem\n              key={group.groupname}\n              group={group}\n              onDelete={handleDelete}\n              onRenameGroup={handleRenameGroup}\n              onRenamePlayer={handleRenamePlayer}\n            />\n          );\n        })}\n      </List>\n      <Grid\n        container\n        spacing={0}\n        justify=\"center\"\n        style={{ minWidth: \"100vw\" }}\n      >\n        <Grid item>\n          <Tooltip title=\"New Group\" arrow placement=\"top\">\n            <Fab\n              size=\"large\"\n              className={classes.fab}\n              aria-label=\"add\"\n              onClick={handleAdd}\n            >\n              <GroupAddRoundedIcon />\n            </Fab>\n          </Tooltip>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}