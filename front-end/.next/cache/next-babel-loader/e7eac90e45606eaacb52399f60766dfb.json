{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/pages/stats/[groupname].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { MainBar } from \"../../components/MainBar\";\nimport { NavStats } from \"../../components/NavStats\";\nimport { GameTable } from \"../../components/GameTable\";\nimport { AllCharts } from \"../../components/AllCharts\";\nimport { ServeTeam } from \"../../util/types\";\nimport { teamSelection, scoreSelection, serveSelection, confirmSelection } from \"../../util/swals\";\nexport default function Stats() {\n  _s();\n\n  var router = useRouter();\n  var groupname = router.query.groupname; // For testing\n\n  var examplePlayers = new Map([[0, \"Raphael\"], [1, \"Alex\"], [2, \"Valentin\"], [3, \"Sonam\"], [4, \"Timon\"]]);\n  var exampleGames = [{\n    id: 0,\n    blueTeam: [4, 3],\n    redTeam: [1, 2],\n    score: [21, 17],\n    serve: ServeTeam.Red,\n    date: new Date()\n  }, {\n    id: 1,\n    blueTeam: [0, 1],\n    redTeam: [3, 2],\n    score: [10, 21],\n    serve: ServeTeam.Red,\n    date: new Date()\n  }];\n\n  var _useState = useState(exampleGames),\n      games = _useState[0],\n      setGames = _useState[1];\n\n  var handleDelete = function handleDelete(id) {\n    console.log(\"Delete this game from the server.\", id);\n    setGames(games.filter(function (game) {\n      return game[\"id\"] !== id;\n    }));\n  };\n\n  var handleAdd = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var addedGame;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              addedGame = {\n                id: 100,\n                blueTeam: [-1, -1],\n                redTeam: [-1, -1],\n                score: [-1, -1],\n                serve: ServeTeam.Blue,\n                date: new Date()\n              };\n              teamSelection(examplePlayers).then(function (curTeamSelection) {\n                addedGame.blueTeam = curTeamSelection.blueTeam;\n                addedGame.redTeam = curTeamSelection.redTeam;\n                return scoreSelection(examplePlayers, curTeamSelection);\n              }).then(function (curScore) {\n                addedGame.score = curScore;\n                return serveSelection(examplePlayers, {\n                  blueTeam: addedGame.blueTeam,\n                  redTeam: addedGame.redTeam\n                }, curScore);\n              }).then(function (curServingTeam) {\n                addedGame.serve = curServingTeam;\n                return confirmSelection(examplePlayers, {\n                  blueTeam: addedGame.blueTeam,\n                  redTeam: addedGame.redTeam\n                }, addedGame.score, curServingTeam);\n              }).then(function () {\n                setGames(function (games) {\n                  return [].concat(_toConsumableArray(games), [addedGame]);\n                }); // Call server!\n              })[\"catch\"](function () {\n                return;\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleAdd() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var tab1 = __jsx(AllCharts, {\n    groupname: groupname,\n    games: games,\n    players: examplePlayers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  });\n\n  var tab2 = __jsx(GameTable, {\n    onDelete: handleDelete,\n    games: games,\n    players: examplePlayers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  });\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, __jsx(MainBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }), __jsx(NavStats, {\n    tab1Content: tab1,\n    tab2Content: tab2,\n    onAdd: handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(Stats, \"6diCFyUYGr4kNlhb1YHxAqzAqdg=\", false, function () {\n  return [useRouter];\n});\n\n_c = Stats;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/pages/stats/[groupname].tsx"],"names":["React","useState","useRouter","MainBar","NavStats","GameTable","AllCharts","ServeTeam","teamSelection","scoreSelection","serveSelection","confirmSelection","Stats","router","groupname","query","examplePlayers","Map","exampleGames","id","blueTeam","redTeam","score","serve","Red","date","Date","games","setGames","handleDelete","console","log","filter","game","handleAdd","addedGame","Blue","then","curTeamSelection","curScore","curServingTeam","tab1","tab2"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { MainBar } from \"../../components/MainBar\";\nimport { NavStats } from \"../../components/NavStats\";\nimport { GameTable } from \"../../components/GameTable\";\nimport { AllCharts } from \"../../components/AllCharts\";\nimport { Game, Players, ServeTeam } from \"../../util/types\";\nimport {\n  teamSelection,\n  scoreSelection,\n  serveSelection,\n  confirmSelection,\n} from \"../../util/swals\";\nimport { group } from \"console\";\n\nexport default function Stats() {\n  const router = useRouter();\n  const { groupname } = router.query;\n\n  // For testing\n  const examplePlayers: Players = new Map([\n    [0, \"Raphael\"],\n    [1, \"Alex\"],\n    [2, \"Valentin\"],\n    [3, \"Sonam\"],\n    [4, \"Timon\"],\n  ]);\n\n  const exampleGames: Game[] = [\n    {\n      id: 0,\n      blueTeam: [4, 3],\n      redTeam: [1, 2],\n      score: [21, 17],\n      serve: ServeTeam.Red,\n      date: new Date(),\n    },\n    {\n      id: 1,\n      blueTeam: [0, 1],\n      redTeam: [3, 2],\n      score: [10, 21],\n      serve: ServeTeam.Red,\n      date: new Date(),\n    },\n  ];\n  const [games, setGames] = useState(exampleGames);\n  const handleDelete = (id: number) => {\n    console.log(\"Delete this game from the server.\", id);\n    setGames(games.filter((game) => game[\"id\"] !== id));\n  };\n\n  const handleAdd = async () => {\n    const addedGame: Game = {\n      id: 100,\n      blueTeam: [-1, -1],\n      redTeam: [-1, -1],\n      score: [-1, -1],\n      serve: ServeTeam.Blue,\n      date: new Date(),\n    };\n    teamSelection(examplePlayers)\n      .then((curTeamSelection) => {\n        addedGame.blueTeam = curTeamSelection.blueTeam;\n        addedGame.redTeam = curTeamSelection.redTeam;\n        return scoreSelection(examplePlayers, curTeamSelection);\n      })\n      .then((curScore) => {\n        addedGame.score = curScore;\n        return serveSelection(\n          examplePlayers,\n          { blueTeam: addedGame.blueTeam, redTeam: addedGame.redTeam },\n          curScore\n        );\n      })\n      .then((curServingTeam) => {\n        addedGame.serve = curServingTeam;\n        return confirmSelection(\n          examplePlayers,\n          { blueTeam: addedGame.blueTeam, redTeam: addedGame.redTeam },\n          addedGame.score,\n          curServingTeam\n        );\n      })\n      .then(() => {\n        setGames((games) => [...games, addedGame]);\n        // Call server!\n      })\n      .catch(() => {\n        return;\n      });\n  };\n\n  const tab1 = (\n    <AllCharts groupname={groupname} games={games} players={examplePlayers} />\n  );\n  const tab2 = (\n    <GameTable onDelete={handleDelete} games={games} players={examplePlayers} />\n  );\n\n  return (\n    <React.Fragment>\n      <MainBar />\n      <NavStats tab1Content={tab1} tab2Content={tab2} onAdd={handleAdd} />\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}