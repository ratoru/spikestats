{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/components/common/FormikListItem.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\nimport CancelRoundedIcon from \"@material-ui/icons/CancelRounded\";\nimport * as Yup from \"yup\";\nvar RenameSchema = Yup.object().shape({\n  newName: Yup.string().min(1, \"Too short!\").max(30, \"Too long!\").required(\"Required!\")\n});\nexport var FormikListItem = function FormikListItem(_ref) {\n  var initialValue = _ref.initialValue,\n      label = _ref.label,\n      onSubmit = _ref.onSubmit,\n      onCancel = _ref.onCancel;\n  // Used to initialize the formik form\n  var initialValues = {\n    newName: initialValue\n  };\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    validationSchema: RenameSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, function (_ref2) {\n    var dirty = _ref2.dirty,\n        isValid = _ref2.isValid;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, __jsx(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, __jsx(ListItemText, {\n      primary: __jsx(Field, {\n        name: \"newName\",\n        as: TextField,\n        variant: \"outlined\",\n        label: label,\n        defaultValue: initialValue,\n        autoFocus: true,\n        autoComplete: \"off\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }), __jsx(ListItemSecondaryAction, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, __jsx(ButtonGroup, {\n      variant: \"contained\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, __jsx(Tooltip, {\n      title: \"Rename Group\",\n      arrow: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, __jsx(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      disabled: !dirty || !valid,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, __jsx(CheckCircleRoundedIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 23\n      }\n    }))), __jsx(Tooltip, {\n      title: \"Cancel\",\n      arrow: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }, __jsx(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: onCancel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, __jsx(CancelRoundedIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 23\n      }\n    })))))));\n  });\n};\n_c = FormikListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormikListItem\");","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/components/common/FormikListItem.tsx"],"names":["React","Formik","Form","Field","ListItem","ListItemText","ListItemSecondaryAction","TextField","Button","ButtonGroup","Tooltip","CheckCircleRoundedIcon","CancelRoundedIcon","Yup","RenameSchema","object","shape","newName","string","min","max","required","FormikListItem","initialValue","label","onSubmit","onCancel","initialValues","dirty","isValid","valid"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\nimport CancelRoundedIcon from \"@material-ui/icons/CancelRounded\";\nimport * as Yup from \"yup\";\n\nconst RenameSchema = Yup.object().shape({\n  newName: Yup.string()\n    .min(1, \"Too short!\")\n    .max(30, \"Too long!\")\n    .required(\"Required!\"),\n});\n\ninterface FormValues {\n  newName: string;\n}\n\ninterface FormikListItemProps {\n  initialValue: string;\n  label: string;\n  onSubmit: (values: FormValues) => void;\n  onCancel: () => void;\n}\n\nexport const FormikListItem: React.FC<FormikListItemProps> = ({\n  initialValue,\n  label,\n  onSubmit,\n  onCancel,\n}) => {\n  // Used to initialize the formik form\n  const initialValues: FormValues = {\n    newName: initialValue,\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      validationSchema={RenameSchema}\n    >\n      {({ dirty, isValid }) => {\n        return (\n          <Form>\n            <ListItem>\n              <ListItemText\n                primary={\n                  <Field\n                    name=\"newName\"\n                    as={TextField}\n                    variant=\"outlined\"\n                    label={label}\n                    defaultValue={initialValue}\n                    autoFocus\n                    autoComplete=\"off\"\n                  />\n                }\n              />\n              <ListItemSecondaryAction>\n                <ButtonGroup variant=\"contained\">\n                  <Tooltip title=\"Rename Group\" arrow>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      type=\"submit\"\n                      disabled={!dirty || !valid}\n                    >\n                      <CheckCircleRoundedIcon />\n                    </Button>\n                  </Tooltip>\n                  <Tooltip title=\"Cancel\" arrow>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={onCancel}\n                    >\n                      <CancelRoundedIcon />\n                    </Button>\n                  </Tooltip>\n                </ButtonGroup>\n              </ListItemSecondaryAction>\n            </ListItem>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}