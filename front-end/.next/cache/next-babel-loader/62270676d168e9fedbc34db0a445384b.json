{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/components/graphs/WinPercentage.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef, useLayoutEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\n/* Imports for amCharts*/\n// Have to add nextjs transpiler\n// https://github.com/amcharts/amcharts4/issues/1043\n\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4themes_material from \"@amcharts/amcharts4/themes/material\"; // Types\n\nconst WinPercentage = ({\n  data\n}) => {\n  const chartFinal = useRef(null);\n  useLayoutEffect(() => {\n    // ... Chart code\n    // Themes begin\n    am4core.useTheme(am4themes_material);\n    am4core.useTheme(am4themes_animated); // Themes end\n    // Create chart instance\n\n    let chart = am4core.create(\"chartdivWinPercentage\", am4charts.XYChart); // Create axes\n\n    let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n    dateAxis.renderer.minGridDistance = 50;\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.max = 100;\n    valueAxis.min = 0;\n    data.forEach((personalData, name) => createSeries(personalData, name)); // Create series\n\n    function createSeries(personalData, name) {\n      let series = chart.series.push(new am4charts.LineSeries());\n      series.dataFields.valueY = \"winPercentage\"; // They had + name!!!!!!!!\n\n      series.dataFields.dateX = \"date\";\n      series.strokeWidth = 2;\n      series.minBulletDistance = 10;\n      series.tooltipText = \"{valueY}\";\n      series.tooltip.pointerOrientation = \"vertical\";\n      series.tooltip.background.cornerRadius = 20;\n      series.tooltip.background.fillOpacity = 0.5;\n      series.tooltip.label.padding(12, 12, 12, 12);\n      series.name = name;\n      series.minBulletDistance = 15; // For bullets\n      // Make bullets grow on hover\n\n      let bullet = series.bullets.push(new am4charts.CircleBullet());\n      bullet.circle.strokeWidth = 2;\n      bullet.circle.radius = 4;\n      bullet.circle.fill = am4core.color(\"#fff\");\n      let bullethover = bullet.states.create(\"hover\");\n      bullethover.properties.scale = 1.3; // Legend interaction\n\n      let segment = series.segments.template;\n      segment.interactionsEnabled = true;\n      let hoverState = segment.states.create(\"hover\");\n      hoverState.properties.strokeWidth = 3;\n      let dimmed = segment.states.create(\"dimmed\");\n      dimmed.properties.stroke = am4core.color(\"#dadada\");\n      segment.events.on(\"over\", function (event) {\n        processOver(event.target.parent.parent.parent);\n      });\n      segment.events.on(\"out\", function (event) {\n        processOut(event.target.parent.parent.parent);\n      });\n      series.data = personalData;\n      return series;\n    } // Create legend\n\n\n    chart.legend = new am4charts.Legend();\n    chart.legend.position = \"right\";\n    chart.legend.scrollable = true;\n    chart.legend.itemContainers.template.events.on(\"over\", function (event) {\n      processOver(event.target.dataItem.dataContext);\n    });\n    chart.legend.itemContainers.template.events.on(\"out\", function (event) {\n      processOut(event.target.dataItem.dataContext);\n    });\n\n    function processOver(hoveredSeries) {\n      hoveredSeries.toFront();\n      hoveredSeries.segments.each(function (segment) {\n        segment.setState(\"hover\");\n      });\n      chart.series.each(function (series) {\n        if (series != hoveredSeries) {\n          // Add any to avoid compiler warning.\n          series.segments.each(function (segment) {\n            segment.setState(\"dimmed\");\n          });\n          series.bulletsContainer.setState(\"dimmed\");\n        }\n      });\n    }\n\n    function processOut(hoveredSeries) {\n      chart.series.each(function (series) {\n        // Add any to avoid compiler warning. Code should work. From amcharts example.\n        series.segments.each(function (segment) {\n          segment.setState(\"default\");\n        });\n        series.bulletsContainer.setState(\"default\");\n      });\n    } // Add scrollbar\n\n\n    chart.scrollbarX = new am4charts.XYChartScrollbar(); // Use first series as display.\n\n    chart.scrollbarX.series.push(chart.series.getIndex(0));\n    chart.scrollbarX.parent = chart.bottomAxesContainer; // Position underneath.\n    // Add cursor\n\n    chart.cursor = new am4charts.XYCursor();\n    chart.cursor.xAxis = dateAxis; // chart.cursor.snapToSeries = series;\n    // ... boiler plate continues\n\n    chartFinal.current = chart;\n    return () => {\n      chart.dispose();\n    };\n  }, []); // When the data prop changes it will update the chart\n\n  useLayoutEffect(() => {\n    chartFinal.current.data = data;\n  }, [data]);\n  return __jsx(Box, {\n    width: 1,\n    height: 500,\n    id: \"chartdivWinPercentage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default WinPercentage;","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/components/graphs/WinPercentage.tsx"],"names":["React","useRef","useLayoutEffect","Box","am4core","am4charts","am4themes_animated","am4themes_material","WinPercentage","data","chartFinal","useTheme","chart","create","XYChart","dateAxis","xAxes","push","DateAxis","renderer","minGridDistance","valueAxis","yAxes","ValueAxis","max","min","forEach","personalData","name","createSeries","series","LineSeries","dataFields","valueY","dateX","strokeWidth","minBulletDistance","tooltipText","tooltip","pointerOrientation","background","cornerRadius","fillOpacity","label","padding","bullet","bullets","CircleBullet","circle","radius","fill","color","bullethover","states","properties","scale","segment","segments","template","interactionsEnabled","hoverState","dimmed","stroke","events","on","event","processOver","target","parent","processOut","legend","Legend","position","scrollable","itemContainers","dataItem","dataContext","hoveredSeries","toFront","each","setState","bulletsContainer","scrollbarX","XYChartScrollbar","getIndex","bottomAxesContainer","cursor","XYCursor","xAxis","current","dispose"],"mappings":"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","sourcesContent":["import React, { useRef, useLayoutEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\n/* Imports for amCharts*/\n// Have to add nextjs transpiler\n// https://github.com/amcharts/amcharts4/issues/1043\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4themes_material from \"@amcharts/amcharts4/themes/material\";\n// Types\nimport { WinPercentageDP } from \"../../util/types\";\n\ninterface WinPercentageProps {\n  data: Map<string, WinPercentageDP[]>;\n}\n\nconst WinPercentage: React.FC<WinPercentageProps> = ({ data }) => {\n  const chartFinal = useRef(null);\n\n  useLayoutEffect(() => {\n    // ... Chart code\n    // Themes begin\n    am4core.useTheme(am4themes_material);\n    am4core.useTheme(am4themes_animated);\n    // Themes end\n    // Create chart instance\n    let chart = am4core.create(\"chartdivWinPercentage\", am4charts.XYChart);\n\n    // Create axes\n    let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n    dateAxis.renderer.minGridDistance = 50;\n\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.max = 100;\n    valueAxis.min = 0;\n\n    data.forEach((personalData, name) => createSeries(personalData, name));\n\n    // Create series\n    function createSeries(personalData: WinPercentageDP[], name: string) {\n      let series = chart.series.push(new am4charts.LineSeries());\n      series.dataFields.valueY = \"winPercentage\"; // They had + name!!!!!!!!\n      series.dataFields.dateX = \"date\";\n      series.strokeWidth = 2;\n      series.minBulletDistance = 10;\n      series.tooltipText = \"{valueY}\";\n      series.tooltip.pointerOrientation = \"vertical\";\n      series.tooltip.background.cornerRadius = 20;\n      series.tooltip.background.fillOpacity = 0.5;\n      series.tooltip.label.padding(12, 12, 12, 12);\n      series.name = name;\n      series.minBulletDistance = 15; // For bullets\n      // Make bullets grow on hover\n      let bullet = series.bullets.push(new am4charts.CircleBullet());\n      bullet.circle.strokeWidth = 2;\n      bullet.circle.radius = 4;\n      bullet.circle.fill = am4core.color(\"#fff\");\n\n      let bullethover = bullet.states.create(\"hover\");\n      bullethover.properties.scale = 1.3;\n\n      // Legend interaction\n      let segment = series.segments.template;\n      segment.interactionsEnabled = true;\n\n      let hoverState = segment.states.create(\"hover\");\n      hoverState.properties.strokeWidth = 3;\n\n      let dimmed = segment.states.create(\"dimmed\");\n      dimmed.properties.stroke = am4core.color(\"#dadada\");\n\n      segment.events.on(\"over\", function (event) {\n        processOver(event.target.parent.parent.parent);\n      });\n\n      segment.events.on(\"out\", function (event) {\n        processOut(event.target.parent.parent.parent);\n      });\n\n      series.data = personalData;\n      return series;\n    }\n\n    // Create legend\n    chart.legend = new am4charts.Legend();\n    chart.legend.position = \"right\";\n    chart.legend.scrollable = true;\n    chart.legend.itemContainers.template.events.on(\"over\", function (event) {\n      processOver(event.target.dataItem.dataContext);\n    });\n\n    chart.legend.itemContainers.template.events.on(\"out\", function (event) {\n      processOut(event.target.dataItem.dataContext);\n    });\n\n    function processOver(hoveredSeries) {\n      hoveredSeries.toFront();\n\n      hoveredSeries.segments.each(function (segment) {\n        segment.setState(\"hover\");\n      });\n\n      chart.series.each(function (series) {\n        if (series != hoveredSeries) {\n          // Add any to avoid compiler warning.\n          (series as any).segments.each(function (segment) {\n            segment.setState(\"dimmed\");\n          });\n          series.bulletsContainer.setState(\"dimmed\");\n        }\n      });\n    }\n\n    function processOut(hoveredSeries) {\n      chart.series.each(function (series) {\n        // Add any to avoid compiler warning. Code should work. From amcharts example.\n        (series as any).segments.each(function (segment) {\n          segment.setState(\"default\");\n        });\n        series.bulletsContainer.setState(\"default\");\n      });\n    }\n\n    // Add scrollbar\n    chart.scrollbarX = new am4charts.XYChartScrollbar();\n    // Use first series as display.\n    (chart.scrollbarX as am4charts.XYChartScrollbar).series.push(\n      chart.series.getIndex(0)\n    );\n    chart.scrollbarX.parent = chart.bottomAxesContainer; // Position underneath.\n\n    // Add cursor\n    chart.cursor = new am4charts.XYCursor();\n    chart.cursor.xAxis = dateAxis;\n    // chart.cursor.snapToSeries = series;\n\n    // ... boiler plate continues\n    chartFinal.current = chart;\n\n    return () => {\n      chart.dispose();\n    };\n  }, []);\n\n  // When the data prop changes it will update the chart\n  useLayoutEffect(() => {\n    chartFinal.current.data = data;\n  }, [data]);\n\n  return <Box width={1} height={500} id=\"chartdivWinPercentage\"></Box>;\n};\n\nexport default WinPercentage;\n"]},"metadata":{},"sourceType":"module"}