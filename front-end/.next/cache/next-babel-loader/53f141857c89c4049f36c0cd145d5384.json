{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/util/swals.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { AddChips } from \"../components/addComponents/AddChips\";\nimport { AddScoreField } from \"../components/addComponents/AddScoreField\";\nimport { AddServe } from \"../components/addComponents/AddServe\";\nimport { AddConfirm } from \"../components/addComponents/AddConfirm\";\nimport { AddGroupPlayers } from \"../components/addComponents/AddGroupPlayers\";\nimport { GroupConfirm } from \"../components/addComponents/GroupConfirm\";\nimport { ServeTeam } from \"./types\"; // Template for error messages.\n\nexport var errorToast = Swal.mixin({\n  title: \"Something went wrong!\",\n  icon: \"error\",\n  toast: true,\n  position: \"center\",\n  showConfirmButton: false,\n  timer: 4000,\n  timerProgressBar: true\n});\nexport function teamSelection(_x) {\n  return _teamSelection.apply(this, arguments);\n} // Score Selection\n\nfunction _teamSelection() {\n  _teamSelection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(players) {\n    var emptyTeamBlue, emptyTeamRed, selectedTeams, handleSelectPlayer, handleRemovePlayer, AddGameSwal, _yield$AddGameSwal$fi, finalSelection;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            emptyTeamBlue = [\"\", \"\"];\n            emptyTeamRed = [\"\", \"\"];\n            selectedTeams = {\n              blueTeam: emptyTeamBlue,\n              redTeam: emptyTeamRed\n            };\n\n            handleSelectPlayer = function handleSelectPlayer(id, isBlue) {\n              if (isBlue) {\n                if (selectedTeams.blueTeam[0] === \"\") {\n                  selectedTeams.blueTeam[0] = id;\n                } else {\n                  selectedTeams.blueTeam[1] = id;\n                }\n              } else {\n                if (selectedTeams.redTeam[0] === \"\") {\n                  selectedTeams.redTeam[0] = id;\n                } else {\n                  selectedTeams.redTeam[1] = id;\n                }\n              }\n            };\n\n            handleRemovePlayer = function handleRemovePlayer(id, isBlue) {\n              if (isBlue) {\n                if (selectedTeams.blueTeam[0] === id) {\n                  selectedTeams.blueTeam[0] = \"\";\n                } else {\n                  selectedTeams.blueTeam[1] = \"\";\n                }\n              } else {\n                if (selectedTeams.redTeam[0] === id) {\n                  selectedTeams.redTeam[0] = \"\";\n                } else {\n                  selectedTeams.redTeam[1] = \"\";\n                }\n              }\n            };\n\n            AddGameSwal = withReactContent(Swal);\n            _context.next = 8;\n            return AddGameSwal.fire({\n              title: \"Choose Teams\",\n              html: __jsx(AddChips, {\n                players: players,\n                onSelect: handleSelectPlayer,\n                onDelete: handleRemovePlayer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 7\n                }\n              }),\n              showCancelButton: true,\n              confirmButtonText: \"Next &rarr;\",\n              progressSteps: [\"1\", \"2\", \"3\", \"4\"],\n              currentProgressStep: \"0\",\n              preConfirm: function preConfirm() {\n                if (selectedTeams.blueTeam[0] === \"\" || selectedTeams.blueTeam[1] === \"\" || selectedTeams.redTeam[0] === \"\" || selectedTeams.redTeam[1] === \"\") {\n                  AddGameSwal.showValidationMessage(\"You must select four players.\");\n                  return false;\n                }\n\n                return selectedTeams;\n              }\n            });\n\n          case 8:\n            _yield$AddGameSwal$fi = _context.sent;\n            finalSelection = _yield$AddGameSwal$fi.value;\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              if (!finalSelection) {\n                reject();\n              } else {\n                resolve(finalSelection);\n              }\n            }));\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _teamSelection.apply(this, arguments);\n}\n\nexport function scoreSelection(_x2, _x3) {\n  return _scoreSelection.apply(this, arguments);\n} // Serve Selection\n\nfunction _scoreSelection() {\n  _scoreSelection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(players, teamSelection) {\n    var blueScore, redScore, handleChange, scoreSwal, _yield$scoreSwal$fire, finalScore;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            handleChange = function handleChange(score, isBlue) {\n              isBlue ? blueScore = score : redScore = score;\n            };\n\n            scoreSwal = withReactContent(Swal);\n            _context2.next = 4;\n            return scoreSwal.fire({\n              title: \"Enter the Score\",\n              html: __jsx(AddScoreField, {\n                players: players,\n                teams: teamSelection,\n                blueScore: blueScore,\n                redScore: redScore,\n                onChange: handleChange,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 7\n                }\n              }),\n              showCancelButton: true,\n              confirmButtonText: \"Next &rarr;\",\n              progressSteps: [\"1\", \"2\", \"3\", \"4\"],\n              currentProgressStep: \"1\",\n              preConfirm: function preConfirm() {\n                if (blueScore >= 0 && redScore >= 0 && blueScore !== redScore) {\n                  var score = [blueScore, redScore];\n                  return score;\n                }\n\n                scoreSwal.showValidationMessage(\"The score can't be a tie.\");\n                return false;\n              }\n            });\n\n          case 4:\n            _yield$scoreSwal$fire = _context2.sent;\n            finalScore = _yield$scoreSwal$fire.value;\n            return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n              if (!finalScore) {\n                reject();\n              } else {\n                resolve(finalScore);\n              }\n            }));\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n  return _scoreSelection.apply(this, arguments);\n}\n\nexport function serveSelection(_x4, _x5, _x6) {\n  return _serveSelection.apply(this, arguments);\n} // Confirm Selection\n\nfunction _serveSelection() {\n  _serveSelection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(players, teamSelection, score) {\n    var curServeSelection, handleChange, scoreSwal, _yield$scoreSwal$fire2, teamWithServe;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            curServeSelection = \"\";\n\n            handleChange = function handleChange(newSelection) {\n              curServeSelection = newSelection;\n            };\n\n            scoreSwal = withReactContent(Swal);\n            _context3.next = 5;\n            return scoreSwal.fire({\n              title: \"Initial Serve\",\n              html: __jsx(AddServe, {\n                players: players,\n                teams: teamSelection,\n                score: score,\n                onChange: handleChange,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 7\n                }\n              }),\n              showCancelButton: true,\n              confirmButtonText: \"Next &rarr;\",\n              progressSteps: [\"1\", \"2\", \"3\", \"4\"],\n              currentProgressStep: \"2\",\n              preConfirm: function preConfirm() {\n                if (curServeSelection === \"\") {\n                  scoreSwal.showValidationMessage(\"Select who had the initial serve.\");\n                  return false;\n                }\n\n                return curServeSelection;\n              }\n            });\n\n          case 5:\n            _yield$scoreSwal$fire2 = _context3.sent;\n            teamWithServe = _yield$scoreSwal$fire2.value;\n            return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n              if (!teamWithServe) {\n                reject();\n              } else {\n                resolve(teamWithServe === \"blue\" ? ServeTeam.Blue : ServeTeam.Red);\n              }\n            }));\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n  return _serveSelection.apply(this, arguments);\n}\n\nexport function confirmSelection(_x7, _x8, _x9, _x10) {\n  return _confirmSelection.apply(this, arguments);\n} // Group's Player Selection\n\nfunction _confirmSelection() {\n  _confirmSelection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(players, teamSelection, score, serve) {\n    var scoreSwal, result;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            scoreSwal = withReactContent(Swal);\n            _context4.next = 3;\n            return scoreSwal.fire({\n              icon: \"success\",\n              title: \"Confirm Game\",\n              html: __jsx(AddConfirm, {\n                players: players,\n                teams: teamSelection,\n                score: score,\n                serve: serve,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 7\n                }\n              }),\n              showCancelButton: true,\n              confirmButtonText: \"Finish\",\n              progressSteps: [\"1\", \"2\", \"3\", \"4\"],\n              currentProgressStep: \"3\"\n            });\n\n          case 3:\n            result = _context4.sent;\n            return _context4.abrupt(\"return\", new Promise(function (resolve, reject) {\n              if (!result) {\n                reject();\n              } else {\n                resolve(true);\n              }\n            }));\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, this);\n  }));\n  return _confirmSelection.apply(this, arguments);\n}\n\nexport function groupPlayerSelection(_x11) {\n  return _groupPlayerSelection.apply(this, arguments);\n} // Group Confirmation\n\nfunction _groupPlayerSelection() {\n  _groupPlayerSelection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(groupname) {\n    var players, handleAdd, handleDelete, addGroupPlayersSwal, _yield$addGroupPlayer, playerMap;\n\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            players = new Map();\n\n            handleAdd = function handleAdd(input) {\n              players.set(uuidv4(), input);\n            };\n\n            handleDelete = function handleDelete(playerId) {\n              console.log(\"Delete\", players.get(playerId));\n              players[\"delete\"](playerId);\n            };\n\n            addGroupPlayersSwal = withReactContent(Swal);\n            _context5.next = 6;\n            return addGroupPlayersSwal.fire({\n              title: \"\".concat(groupname),\n              html: __jsx(AddGroupPlayers, {\n                players: players,\n                onAdd: handleAdd,\n                onDelete: handleDelete,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 7\n                }\n              }),\n              showCancelButton: true,\n              confirmButtonText: \"Next &rarr;\",\n              progressSteps: [\"1\", \"2\", \"3\"],\n              currentProgressStep: \"1\",\n              preConfirm: function preConfirm() {\n                if (players.size < 4) {\n                  addGroupPlayersSwal.showValidationMessage(\"You need at least 4 players.\");\n                  return false;\n                }\n\n                return players;\n              }\n            });\n\n          case 6:\n            _yield$addGroupPlayer = _context5.sent;\n            playerMap = _yield$addGroupPlayer.value;\n            return _context5.abrupt(\"return\", new Promise(function (resolve, reject) {\n              if (!playerMap) {\n                reject();\n              } else {\n                resolve(playerMap);\n              }\n            }));\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, this);\n  }));\n  return _groupPlayerSelection.apply(this, arguments);\n}\n\nexport function groupConfirmation(_x12, _x13) {\n  return _groupConfirmation.apply(this, arguments);\n}\n\nfunction _groupConfirmation() {\n  _groupConfirmation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(groupname, players) {\n    var confirmSwal, result;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            confirmSwal = withReactContent(Swal);\n            _context6.next = 3;\n            return confirmSwal.fire({\n              title: \"Confirm\",\n              icon: \"success\",\n              html: __jsx(GroupConfirm, {\n                groupname: groupname,\n                players: players,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 11\n                }\n              }),\n              showCancelButton: true,\n              confirmButtonText: \"Finish\",\n              progressSteps: [\"1\", \"2\", \"3\"],\n              currentProgressStep: \"2\"\n            });\n\n          case 3:\n            result = _context6.sent;\n            return _context6.abrupt(\"return\", new Promise(function (resolve, reject) {\n              if (result.dismiss) {\n                reject();\n              } else {\n                resolve(true);\n              }\n            }));\n\n          case 5:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, this);\n  }));\n  return _groupConfirmation.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/util/swals.tsx"],"names":["React","Swal","withReactContent","v4","uuidv4","AddChips","AddScoreField","AddServe","AddConfirm","AddGroupPlayers","GroupConfirm","ServeTeam","errorToast","mixin","title","icon","toast","position","showConfirmButton","timer","timerProgressBar","teamSelection","players","emptyTeamBlue","emptyTeamRed","selectedTeams","blueTeam","redTeam","handleSelectPlayer","id","isBlue","handleRemovePlayer","AddGameSwal","fire","html","showCancelButton","confirmButtonText","progressSteps","currentProgressStep","preConfirm","showValidationMessage","finalSelection","value","Promise","resolve","reject","scoreSelection","handleChange","score","blueScore","redScore","scoreSwal","finalScore","serveSelection","curServeSelection","newSelection","teamWithServe","Blue","Red","confirmSelection","serve","result","groupPlayerSelection","groupname","Map","handleAdd","input","set","handleDelete","playerId","console","log","get","addGroupPlayersSwal","size","playerMap","groupConfirmation","confirmSwal","dismiss"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { AddChips } from \"../components/addComponents/AddChips\";\nimport { AddScoreField } from \"../components/addComponents/AddScoreField\";\nimport { AddServe } from \"../components/addComponents/AddServe\";\nimport { AddConfirm } from \"../components/addComponents/AddConfirm\";\nimport { AddGroupPlayers } from \"../components/addComponents/AddGroupPlayers\";\nimport { GroupConfirm } from \"../components/addComponents/GroupConfirm\";\nimport { Team, Players, ServeTeam } from \"./types\";\n\n// Template for error messages.\nexport const errorToast = Swal.mixin({\n  title: \"Something went wrong!\",\n  icon: \"error\",\n  toast: true,\n  position: \"center\",\n  showConfirmButton: false,\n  timer: 4000,\n  timerProgressBar: true,\n});\n\ninterface Selection {\n  blueTeam: Team;\n  redTeam: Team;\n}\nexport async function teamSelection(players: Players): Promise<Selection> {\n  const emptyTeamBlue: Team = [\"\", \"\"];\n  const emptyTeamRed: Team = [\"\", \"\"];\n  const selectedTeams = { blueTeam: emptyTeamBlue, redTeam: emptyTeamRed };\n  const handleSelectPlayer = (id: string, isBlue: boolean) => {\n    if (isBlue) {\n      if (selectedTeams.blueTeam[0] === \"\") {\n        selectedTeams.blueTeam[0] = id;\n      } else {\n        selectedTeams.blueTeam[1] = id;\n      }\n    } else {\n      if (selectedTeams.redTeam[0] === \"\") {\n        selectedTeams.redTeam[0] = id;\n      } else {\n        selectedTeams.redTeam[1] = id;\n      }\n    }\n  };\n  const handleRemovePlayer = (id: string, isBlue: boolean) => {\n    if (isBlue) {\n      if (selectedTeams.blueTeam[0] === id) {\n        selectedTeams.blueTeam[0] = \"\";\n      } else {\n        selectedTeams.blueTeam[1] = \"\";\n      }\n    } else {\n      if (selectedTeams.redTeam[0] === id) {\n        selectedTeams.redTeam[0] = \"\";\n      } else {\n        selectedTeams.redTeam[1] = \"\";\n      }\n    }\n  };\n  const AddGameSwal = withReactContent(Swal);\n  const { value: finalSelection } = await AddGameSwal.fire({\n    title: \"Choose Teams\",\n    html: (\n      <AddChips\n        players={players}\n        onSelect={handleSelectPlayer}\n        onDelete={handleRemovePlayer}\n      />\n    ),\n    showCancelButton: true,\n    confirmButtonText: \"Next &rarr;\",\n    progressSteps: [\"1\", \"2\", \"3\", \"4\"],\n    currentProgressStep: \"0\",\n    preConfirm: () => {\n      if (\n        selectedTeams.blueTeam[0] === \"\" ||\n        selectedTeams.blueTeam[1] === \"\" ||\n        selectedTeams.redTeam[0] === \"\" ||\n        selectedTeams.redTeam[1] === \"\"\n      ) {\n        AddGameSwal.showValidationMessage(\"You must select four players.\");\n        return false;\n      }\n      return selectedTeams;\n    },\n  });\n  // Correct and neccessary syntax??\n  return new Promise((resolve, reject) => {\n    if (!finalSelection) {\n      reject();\n    } else {\n      resolve(finalSelection);\n    }\n  });\n}\n\n// Score Selection\nexport async function scoreSelection(\n  players: Players,\n  teamSelection: Selection\n): Promise<[number, number]> {\n  let blueScore: number;\n  let redScore: number;\n  const handleChange = (score: number, isBlue: boolean) => {\n    isBlue ? (blueScore = score) : (redScore = score);\n  };\n  const scoreSwal = withReactContent(Swal);\n  const { value: finalScore } = await scoreSwal.fire({\n    title: \"Enter the Score\",\n    html: (\n      <AddScoreField\n        players={players}\n        teams={teamSelection}\n        blueScore={blueScore}\n        redScore={redScore}\n        onChange={handleChange}\n      />\n    ),\n    showCancelButton: true,\n    confirmButtonText: \"Next &rarr;\",\n    progressSteps: [\"1\", \"2\", \"3\", \"4\"],\n    currentProgressStep: \"1\",\n    preConfirm: () => {\n      if (blueScore >= 0 && redScore >= 0 && blueScore !== redScore) {\n        const score: [number, number] = [blueScore, redScore];\n        return score;\n      }\n      scoreSwal.showValidationMessage(\"The score can't be a tie.\");\n      return false;\n    },\n  });\n  // Correct and neccessary syntax??\n  return new Promise((resolve, reject) => {\n    if (!finalScore) {\n      reject();\n    } else {\n      resolve(finalScore);\n    }\n  });\n}\n\n// Serve Selection\nexport async function serveSelection(\n  players: Players,\n  teamSelection: Selection,\n  score: [number, number]\n): Promise<ServeTeam> {\n  let curServeSelection = \"\";\n  const handleChange = (newSelection: string) => {\n    curServeSelection = newSelection;\n  };\n\n  const scoreSwal = withReactContent(Swal);\n  const { value: teamWithServe } = await scoreSwal.fire({\n    title: \"Initial Serve\",\n    html: (\n      <AddServe\n        players={players}\n        teams={teamSelection}\n        score={score}\n        onChange={handleChange}\n      />\n    ),\n    showCancelButton: true,\n    confirmButtonText: \"Next &rarr;\",\n    progressSteps: [\"1\", \"2\", \"3\", \"4\"],\n    currentProgressStep: \"2\",\n    preConfirm: () => {\n      if (curServeSelection === \"\") {\n        scoreSwal.showValidationMessage(\"Select who had the initial serve.\");\n        return false;\n      }\n      return curServeSelection;\n    },\n  });\n  // Correct and neccessary syntax??\n  return new Promise((resolve, reject) => {\n    if (!teamWithServe) {\n      reject();\n    } else {\n      resolve(teamWithServe === \"blue\" ? ServeTeam.Blue : ServeTeam.Red);\n    }\n  });\n}\n\n// Confirm Selection\nexport async function confirmSelection(\n  players: Players,\n  teamSelection: Selection,\n  score: [number, number],\n  serve: ServeTeam\n): Promise<boolean> {\n  const scoreSwal = withReactContent(Swal);\n  const result = await scoreSwal.fire({\n    icon: \"success\",\n    title: \"Confirm Game\",\n    html: (\n      <AddConfirm\n        players={players}\n        teams={teamSelection}\n        score={score}\n        serve={serve}\n      />\n    ),\n    showCancelButton: true,\n    confirmButtonText: \"Finish\",\n    progressSteps: [\"1\", \"2\", \"3\", \"4\"],\n    currentProgressStep: \"3\",\n  });\n  // Correct and neccessary syntax??\n  return new Promise((resolve, reject) => {\n    if (!result) {\n      reject();\n    } else {\n      resolve(true);\n    }\n  });\n}\n\n// Group's Player Selection\nexport async function groupPlayerSelection(\n  groupname: string\n): Promise<Players> {\n  const players: Players = new Map();\n  const handleAdd = (input: string) => {\n    players.set(uuidv4(), input);\n  };\n  const handleDelete = (playerId: string) => {\n    console.log(\"Delete\", players.get(playerId));\n    players.delete(playerId);\n  };\n\n  const addGroupPlayersSwal = withReactContent(Swal);\n  const { value: playerMap } = await addGroupPlayersSwal.fire({\n    title: `${groupname}`,\n    html: (\n      <AddGroupPlayers\n        players={players}\n        onAdd={handleAdd}\n        onDelete={handleDelete}\n      />\n    ),\n    showCancelButton: true,\n    confirmButtonText: \"Next &rarr;\",\n    progressSteps: [\"1\", \"2\", \"3\"],\n    currentProgressStep: \"1\",\n    preConfirm: () => {\n      if (players.size < 4) {\n        addGroupPlayersSwal.showValidationMessage(\n          \"You need at least 4 players.\"\n        );\n        return false;\n      }\n      return players;\n    },\n  });\n  // Correct and neccessary syntax??\n  return new Promise((resolve, reject) => {\n    if (!playerMap) {\n      reject();\n    } else {\n      resolve(playerMap);\n    }\n  });\n}\n\n// Group Confirmation\nexport async function groupConfirmation(\n  groupname: string,\n  players: Players\n): Promise<boolean> {\n  const confirmSwal = withReactContent(Swal);\n  const result = await confirmSwal.fire({\n    title: \"Confirm\",\n    icon: \"success\",\n    html: <GroupConfirm groupname={groupname} players={players} />,\n    showCancelButton: true,\n    confirmButtonText: \"Finish\",\n    progressSteps: [\"1\", \"2\", \"3\"],\n    currentProgressStep: \"2\",\n  });\n  // Correct and neccessary syntax??\n  return new Promise((resolve, reject) => {\n    if (result.dismiss) {\n      reject();\n    } else {\n      resolve(true);\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}