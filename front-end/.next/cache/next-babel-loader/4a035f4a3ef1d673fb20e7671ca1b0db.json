{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/components/graphs/PlayerWinsTree.tsx\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useRef, useLayoutEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\n/* Imports for amCharts*/\n// Have to add nextjs transpiler\n// https://github.com/amcharts/amcharts4/issues/1043\n\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4themes_material from \"@amcharts/amcharts4/themes/material\"; // Types\n\nvar PlayerWinsTree = function PlayerWinsTree(_ref) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var data = _ref.data;\n  var chartFinal = useRef(null);\n  useLayoutEffect(_s(function () {\n    _s();\n\n    // ... Chart code\n    // Themes begin\n    am4core.useTheme(am4themes_material);\n    am4core.useTheme(am4themes_animated); // Themes end\n    // Create chart instance\n\n    var chart = am4core.create(\"chartdivPlayerWinsTree\", am4charts.TreeMap);\n    chart.hiddenState.properties.opacity = 0; // this makes initial fade in effect\n    // Touch interface\n\n    chart.tapToActivate = true; // Make chart adjust to screen size more.\n\n    chart.responsive.enabled = true;\n    /* Set color step */\n\n    chart.colors.step = 2; // define data fields\n\n    chart.dataFields.value = \"value\";\n    chart.dataFields.name = \"name\";\n    chart.dataFields.children = \"children\";\n    chart.zoomable = false;\n    var bgColor = new am4core.InterfaceColorSet().getFor(\"background\"); // level 0 series template\n\n    var level0SeriesTemplate = chart.seriesTemplates.create(\"0\");\n    var level0ColumnTemplate = level0SeriesTemplate.columns.template;\n    level0ColumnTemplate.column.cornerRadius(10, 10, 10, 10);\n    level0ColumnTemplate.fillOpacity = 0;\n    level0ColumnTemplate.strokeWidth = 4;\n    level0ColumnTemplate.strokeOpacity = 0; // level 1 series template\n\n    var level1SeriesTemplate = chart.seriesTemplates.create(\"1\");\n    var level1ColumnTemplate = level1SeriesTemplate.columns.template;\n    level1SeriesTemplate.tooltip.animationDuration = 0;\n    level1SeriesTemplate.strokeOpacity = 1;\n    level1ColumnTemplate.column.cornerRadius(10, 10, 10, 10);\n    level1ColumnTemplate.fillOpacity = 1;\n    level1ColumnTemplate.strokeWidth = 4;\n    level1ColumnTemplate.stroke = bgColor;\n    var bullet1 = level1SeriesTemplate.bullets.push(new am4charts.LabelBullet());\n    bullet1.locationY = 0.5;\n    bullet1.locationX = 0.5;\n    bullet1.label.text = \"{name}\";\n    bullet1.label.fill = am4core.color(\"#ffffff\");\n    /* Add a navigation bar */\n\n    chart.navigationBar = new am4charts.NavigationBar();\n    /* Add a lagend */\n\n    chart.legend = new am4charts.Legend(); // ... boiler plate continues\n\n    chartFinal.current = chart;\n    return function () {\n      chart.dispose();\n    };\n  }, \"SGVKaihNoPaFHSK8fC2WGPRZubA=\", false, function () {\n    return [am4core.useTheme, am4core.useTheme];\n  }), []); // When the data prop changes it will update the chart\n\n  useLayoutEffect(function () {\n    chartFinal.current.data = data;\n  }, [data]);\n  return __jsx(Box, {\n    width: 1,\n    height: 500,\n    id: \"chartdivPlayerWinsTree\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 10\n    }\n  });\n};\n\n_s2(PlayerWinsTree, \"Yh9hKNJGe74FgnbyertCj0TpMgc=\");\n\n_c = PlayerWinsTree;\nexport default PlayerWinsTree;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerWinsTree\");","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/components/graphs/PlayerWinsTree.tsx"],"names":["React","useRef","useLayoutEffect","Box","am4core","am4charts","am4themes_animated","am4themes_material","PlayerWinsTree","data","chartFinal","useTheme","chart","create","TreeMap","hiddenState","properties","opacity","tapToActivate","responsive","enabled","colors","step","dataFields","value","name","children","zoomable","bgColor","InterfaceColorSet","getFor","level0SeriesTemplate","seriesTemplates","level0ColumnTemplate","columns","template","column","cornerRadius","fillOpacity","strokeWidth","strokeOpacity","level1SeriesTemplate","level1ColumnTemplate","tooltip","animationDuration","stroke","bullet1","bullets","push","LabelBullet","locationY","locationX","label","text","fill","color","navigationBar","NavigationBar","legend","Legend","current","dispose"],"mappings":"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","sourcesContent":["import React, { useRef, useLayoutEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\n/* Imports for amCharts*/\n// Have to add nextjs transpiler\n// https://github.com/amcharts/amcharts4/issues/1043\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4themes_material from \"@amcharts/amcharts4/themes/material\";\n// Types\nimport { PlayerWinsTreeDP } from \"../../util/types\";\n\ninterface PlayerWinsTreeProps {\n  data: PlayerWinsTreeDP[];\n}\n\nconst PlayerWinsTree: React.FC<PlayerWinsTreeProps> = ({ data }) => {\n  const chartFinal = useRef(null);\n\n  useLayoutEffect(() => {\n    // ... Chart code\n    // Themes begin\n    am4core.useTheme(am4themes_material);\n    am4core.useTheme(am4themes_animated);\n    // Themes end\n    // Create chart instance\n    let chart = am4core.create(\"chartdivPlayerWinsTree\", am4charts.TreeMap);\n    chart.hiddenState.properties.opacity = 0; // this makes initial fade in effect\n\n    // Touch interface\n    chart.tapToActivate = true;\n    // Make chart adjust to screen size more.\n    chart.responsive.enabled = true;\n\n    /* Set color step */\n    chart.colors.step = 2;\n\n    // define data fields\n    chart.dataFields.value = \"value\";\n    chart.dataFields.name = \"name\";\n    chart.dataFields.children = \"children\";\n\n    chart.zoomable = false;\n    let bgColor = new am4core.InterfaceColorSet().getFor(\"background\");\n\n    // level 0 series template\n    let level0SeriesTemplate = chart.seriesTemplates.create(\"0\");\n    let level0ColumnTemplate = level0SeriesTemplate.columns.template;\n\n    level0ColumnTemplate.column.cornerRadius(10, 10, 10, 10);\n    level0ColumnTemplate.fillOpacity = 0;\n    level0ColumnTemplate.strokeWidth = 4;\n    level0ColumnTemplate.strokeOpacity = 0;\n\n    // level 1 series template\n    let level1SeriesTemplate = chart.seriesTemplates.create(\"1\");\n    let level1ColumnTemplate = level1SeriesTemplate.columns.template;\n\n    level1SeriesTemplate.tooltip.animationDuration = 0;\n    level1SeriesTemplate.strokeOpacity = 1;\n\n    level1ColumnTemplate.column.cornerRadius(10, 10, 10, 10);\n    level1ColumnTemplate.fillOpacity = 1;\n    level1ColumnTemplate.strokeWidth = 4;\n    level1ColumnTemplate.stroke = bgColor;\n\n    let bullet1 = level1SeriesTemplate.bullets.push(\n      new am4charts.LabelBullet()\n    );\n    bullet1.locationY = 0.5;\n    bullet1.locationX = 0.5;\n    bullet1.label.text = \"{name}\";\n    bullet1.label.fill = am4core.color(\"#ffffff\");\n\n    /* Add a navigation bar */\n    chart.navigationBar = new am4charts.NavigationBar();\n\n    /* Add a lagend */\n    chart.legend = new am4charts.Legend();\n\n    // ... boiler plate continues\n    chartFinal.current = chart;\n\n    return () => {\n      chart.dispose();\n    };\n  }, []);\n\n  // When the data prop changes it will update the chart\n  useLayoutEffect(() => {\n    chartFinal.current.data = data;\n  }, [data]);\n\n  return <Box width={1} height={500} id=\"chartdivPlayerWinsTree\"></Box>;\n};\n\nexport default PlayerWinsTree;\n"]},"metadata":{},"sourceType":"module"}