{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/components/graphs/PlayerWins.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef, useLayoutEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\n/* Imports for amCharts*/\n// Have to add nextjs transpiler\n// https://github.com/amcharts/amcharts4/issues/1043\n\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4themes_material from \"@amcharts/amcharts4/themes/material\"; // Types\n\nconst PlayerWins = ({\n  data\n}) => {\n  const chartFinal = useRef(null);\n  useLayoutEffect(() => {\n    // ... Chart code\n    const dataAndDummy = [{\n      name: \"Dummy\",\n      disabled: true,\n      wins: 1000,\n      color: am4core.color(\"#dadada\"),\n      opacity: 0.3,\n      strokeDasharray: \"4,4\"\n    }, ...data]; // Themes begin\n\n    am4core.useTheme(am4themes_animated);\n    am4core.useTheme(am4themes_material); // Themes end\n    // cointainer to hold both charts\n\n    let container = am4core.create(\"chartdivPlayerWins\", am4core.Container);\n    container.width = am4core.percent(100);\n    container.height = am4core.percent(100);\n    container.layout = \"horizontal\";\n    container.events.on(\"maxsizechanged\", function () {\n      chart1.zIndex = 0;\n      separatorLine.zIndex = 1;\n      dragText.zIndex = 2;\n      chart2.zIndex = 3;\n    });\n    let chart1 = container.createChild(am4charts.PieChart);\n    chart1.fontSize = 11;\n    chart1.hiddenState.properties.opacity = 0; // this makes initial fade in effect\n\n    chart1.data = dataAndDummy;\n    chart1.radius = am4core.percent(70);\n    chart1.innerRadius = am4core.percent(40);\n    chart1.zIndex = 1;\n    let series1 = chart1.series.push(new am4charts.PieSeries());\n    series1.dataFields.value = \"wins\";\n    series1.dataFields.category = \"name\";\n    series1.colors.step = 2;\n    series1.alignLabels = false;\n    series1.labels.template.bent = true;\n    series1.labels.template.radius = 3;\n    series1.labels.template.padding(0, 0, 0, 0);\n    let sliceTemplate1 = series1.slices.template;\n    sliceTemplate1.cornerRadius = 5;\n    sliceTemplate1.draggable = true;\n    sliceTemplate1.inert = true;\n    sliceTemplate1.propertyFields.fill = \"color\";\n    sliceTemplate1.propertyFields.fillOpacity = \"opacity\";\n    sliceTemplate1.propertyFields.stroke = \"color\";\n    sliceTemplate1.propertyFields.strokeDasharray = \"strokeDasharray\";\n    sliceTemplate1.strokeWidth = 1;\n    sliceTemplate1.strokeOpacity = 1;\n    let zIndex = 5;\n    sliceTemplate1.events.on(\"down\", function (event) {\n      event.target.toFront(); // also put chart to front\n      // Added any here because of compiler error. Code from amcharts website.\n\n      let series = event.target.dataItem.component;\n      series.chart.zIndex = zIndex++;\n    });\n    series1.ticks.template.disabled = true;\n    sliceTemplate1.states.getKey(\"active\").properties.shiftRadius = 0;\n    sliceTemplate1.events.on(\"dragstop\", function (event) {\n      handleDragStop(event);\n    }); // separator line and text\n\n    let separatorLine = container.createChild(am4core.Line);\n    separatorLine.x1 = 0;\n    separatorLine.y2 = 300;\n    separatorLine.strokeWidth = 3;\n    separatorLine.stroke = am4core.color(\"#dadada\");\n    separatorLine.valign = \"middle\";\n    separatorLine.strokeDasharray = \"5,5\";\n    let dragText = container.createChild(am4core.Label);\n    dragText.text = \"Drag slices over the line\";\n    dragText.rotation = 90;\n    dragText.valign = \"middle\";\n    dragText.align = \"center\";\n    dragText.paddingBottom = 5; // second chart\n\n    let chart2 = container.createChild(am4charts.PieChart);\n    chart2.hiddenState.properties.opacity = 0; // this makes initial fade in effect\n\n    chart2.fontSize = 11;\n    chart2.radius = am4core.percent(70);\n    chart2.data = dataAndDummy;\n    chart2.innerRadius = am4core.percent(40);\n    chart2.zIndex = 1;\n    let series2 = chart2.series.push(new am4charts.PieSeries());\n    series2.dataFields.value = \"wins\";\n    series2.dataFields.category = \"name\";\n    series2.colors.step = 2;\n    series2.alignLabels = false;\n    series2.labels.template.bent = true;\n    series2.labels.template.radius = 3;\n    series2.labels.template.padding(0, 0, 0, 0);\n    series2.labels.template.propertyFields.disabled = \"disabled\";\n    let sliceTemplate2 = series2.slices.template;\n    sliceTemplate2.copyFrom(sliceTemplate1);\n    series2.ticks.template.disabled = true;\n\n    function handleDragStop(event) {\n      let targetSlice = event.target;\n      let dataItem1;\n      let dataItem2;\n      let slice1;\n      let slice2;\n\n      if (series1.slices.indexOf(targetSlice) != -1) {\n        slice1 = targetSlice;\n        slice2 = series2.dataItems.getIndex(targetSlice.dataItem.index).slice;\n      } else if (series2.slices.indexOf(targetSlice) != -1) {\n        slice1 = series1.dataItems.getIndex(targetSlice.dataItem.index).slice;\n        slice2 = targetSlice;\n      }\n\n      dataItem1 = slice1.dataItem;\n      dataItem2 = slice2.dataItem;\n      let series1Center = am4core.utils.spritePointToSvg({\n        x: 0,\n        y: 0\n      }, series1.slicesContainer);\n      let series2Center = am4core.utils.spritePointToSvg({\n        x: 0,\n        y: 0\n      }, series2.slicesContainer);\n      let series1CenterConverted = am4core.utils.svgPointToSprite(series1Center, series2.slicesContainer);\n      let series2CenterConverted = am4core.utils.svgPointToSprite(series2Center, series1.slicesContainer); // tooltipY and tooltipY are in the middle of the slice, so we use them to avoid extra calculations\n\n      let targetSlicePoint = am4core.utils.spritePointToSvg({\n        x: targetSlice.tooltipX,\n        y: targetSlice.tooltipY\n      }, targetSlice);\n\n      if (targetSlice == slice1) {\n        if (targetSlicePoint.x > container.pixelWidth / 2) {\n          let value = dataItem1.value;\n          dataItem1.hide();\n          let animation = slice1.animate([{\n            property: \"x\",\n            to: series2CenterConverted.x\n          }, {\n            property: \"y\",\n            to: series2CenterConverted.y\n          }], 400);\n          animation.events.on(\"animationprogress\", function (event) {\n            slice1.hideTooltip();\n          });\n          slice2.x = 0;\n          slice2.y = 0;\n          dataItem2.show();\n        } else {\n          slice1.animate([{\n            property: \"x\",\n            to: 0\n          }, {\n            property: \"y\",\n            to: 0\n          }], 400);\n        }\n      }\n\n      if (targetSlice == slice2) {\n        if (targetSlicePoint.x < container.pixelWidth / 2) {\n          let value = dataItem2.value;\n          dataItem2.hide();\n          let animation = slice2.animate([{\n            property: \"x\",\n            to: series1CenterConverted.x\n          }, {\n            property: \"y\",\n            to: series1CenterConverted.y\n          }], 400);\n          animation.events.on(\"animationprogress\", function (event) {\n            slice2.hideTooltip();\n          });\n          slice1.x = 0;\n          slice1.y = 0;\n          dataItem1.show();\n        } else {\n          slice2.animate([{\n            property: \"x\",\n            to: 0\n          }, {\n            property: \"y\",\n            to: 0\n          }], 400);\n        }\n      }\n\n      toggleDummySlice(series1);\n      toggleDummySlice(series2);\n      series1.hideTooltip();\n      series2.hideTooltip();\n    }\n\n    function toggleDummySlice(series) {\n      let show = true;\n\n      for (var i = 1; i < series.dataItems.length; i++) {\n        let dataItem = series.dataItems.getIndex(i);\n\n        if (dataItem.slice.visible && !dataItem.slice.isHiding) {\n          show = false;\n        }\n      }\n\n      let dummySlice = series.dataItems.getIndex(0);\n\n      if (show) {\n        dummySlice.show();\n      } else {\n        dummySlice.hide();\n      }\n    }\n\n    series2.events.on(\"datavalidated\", function () {\n      let dummyDataItem = series2.dataItems.getIndex(0);\n      dummyDataItem.show(0);\n      dummyDataItem.slice.draggable = false;\n      dummyDataItem.slice.tooltipText = undefined;\n\n      for (var i = 1; i < series2.dataItems.length; i++) {\n        series2.dataItems.getIndex(i).hide(0);\n      }\n    });\n    series1.events.on(\"datavalidated\", function () {\n      let dummyDataItem = series1.dataItems.getIndex(0);\n      dummyDataItem.hide(0);\n      dummyDataItem.slice.draggable = false;\n      dummyDataItem.slice.tooltipText = undefined;\n    }); // ... boiler plate continues\n\n    chartFinal.current = container;\n    return () => {\n      container.dispose();\n    };\n  }, []); // When the data prop changes it will update the chart\n\n  useLayoutEffect(() => {\n    chartFinal.current.data = [{\n      name: \"Dummy\",\n      disabled: true,\n      wins: 1000,\n      color: am4core.color(\"#dadada\"),\n      opacity: 0.3,\n      strokeDasharray: \"4,4\"\n    }, ...data];\n  }, [data]);\n  return __jsx(Box, {\n    width: 1,\n    height: 500,\n    id: \"chartdivPlayerWins\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default PlayerWins;","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/components/graphs/PlayerWins.tsx"],"names":["React","useRef","useLayoutEffect","Box","am4core","am4charts","am4themes_animated","am4themes_material","PlayerWins","data","chartFinal","dataAndDummy","name","disabled","wins","color","opacity","strokeDasharray","useTheme","container","create","Container","width","percent","height","layout","events","on","chart1","zIndex","separatorLine","dragText","chart2","createChild","PieChart","fontSize","hiddenState","properties","radius","innerRadius","series1","series","push","PieSeries","dataFields","value","category","colors","step","alignLabels","labels","template","bent","padding","sliceTemplate1","slices","cornerRadius","draggable","inert","propertyFields","fill","fillOpacity","stroke","strokeWidth","strokeOpacity","event","target","toFront","dataItem","component","chart","ticks","states","getKey","shiftRadius","handleDragStop","Line","x1","y2","valign","Label","text","rotation","align","paddingBottom","series2","sliceTemplate2","copyFrom","targetSlice","dataItem1","dataItem2","slice1","slice2","indexOf","dataItems","getIndex","index","slice","series1Center","utils","spritePointToSvg","x","y","slicesContainer","series2Center","series1CenterConverted","svgPointToSprite","series2CenterConverted","targetSlicePoint","tooltipX","tooltipY","pixelWidth","hide","animation","animate","property","to","hideTooltip","show","toggleDummySlice","i","length","visible","isHiding","dummySlice","dummyDataItem","tooltipText","undefined","current","dispose"],"mappings":"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","sourcesContent":["import React, { useRef, useLayoutEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\n/* Imports for amCharts*/\n// Have to add nextjs transpiler\n// https://github.com/amcharts/amcharts4/issues/1043\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4themes_material from \"@amcharts/amcharts4/themes/material\";\n// Types\nimport { PlayerWinsDP } from \"../../util/types\";\n\ninterface PlayerWinsProps {\n  data: PlayerWinsDP[];\n}\n\nconst PlayerWins: React.FC<PlayerWinsProps> = ({ data }) => {\n  const chartFinal = useRef(null);\n\n  useLayoutEffect(() => {\n    // ... Chart code\n    const dataAndDummy = [\n      {\n        name: \"Dummy\",\n        disabled: true,\n        wins: 1000,\n        color: am4core.color(\"#dadada\"),\n        opacity: 0.3,\n        strokeDasharray: \"4,4\",\n      },\n      ...data,\n    ];\n\n    // Themes begin\n    am4core.useTheme(am4themes_animated);\n    am4core.useTheme(am4themes_material);\n    // Themes end\n    // cointainer to hold both charts\n    let container = am4core.create(\"chartdivPlayerWins\", am4core.Container);\n    container.width = am4core.percent(100);\n    container.height = am4core.percent(100);\n    container.layout = \"horizontal\";\n\n    container.events.on(\"maxsizechanged\", function () {\n      chart1.zIndex = 0;\n      separatorLine.zIndex = 1;\n      dragText.zIndex = 2;\n      chart2.zIndex = 3;\n    });\n\n    let chart1 = container.createChild(am4charts.PieChart);\n    chart1.fontSize = 11;\n    chart1.hiddenState.properties.opacity = 0; // this makes initial fade in effect\n    chart1.data = dataAndDummy;\n    chart1.radius = am4core.percent(70);\n    chart1.innerRadius = am4core.percent(40);\n    chart1.zIndex = 1;\n\n    let series1 = chart1.series.push(new am4charts.PieSeries());\n    series1.dataFields.value = \"wins\";\n    series1.dataFields.category = \"name\";\n    series1.colors.step = 2;\n    series1.alignLabels = false;\n    series1.labels.template.bent = true;\n    series1.labels.template.radius = 3;\n    series1.labels.template.padding(0, 0, 0, 0);\n\n    let sliceTemplate1 = series1.slices.template;\n    sliceTemplate1.cornerRadius = 5;\n    sliceTemplate1.draggable = true;\n    sliceTemplate1.inert = true;\n    sliceTemplate1.propertyFields.fill = \"color\";\n    sliceTemplate1.propertyFields.fillOpacity = \"opacity\";\n    sliceTemplate1.propertyFields.stroke = \"color\";\n    sliceTemplate1.propertyFields.strokeDasharray = \"strokeDasharray\";\n    sliceTemplate1.strokeWidth = 1;\n    sliceTemplate1.strokeOpacity = 1;\n\n    let zIndex = 5;\n\n    sliceTemplate1.events.on(\"down\", function (event) {\n      event.target.toFront();\n      // also put chart to front\n      // Added any here because of compiler error. Code from amcharts website.\n      let series: any = event.target.dataItem.component;\n      series.chart.zIndex = zIndex++;\n    });\n\n    series1.ticks.template.disabled = true;\n\n    sliceTemplate1.states.getKey(\"active\").properties.shiftRadius = 0;\n\n    sliceTemplate1.events.on(\"dragstop\", function (event) {\n      handleDragStop(event);\n    });\n\n    // separator line and text\n    let separatorLine = container.createChild(am4core.Line);\n    separatorLine.x1 = 0;\n    separatorLine.y2 = 300;\n    separatorLine.strokeWidth = 3;\n    separatorLine.stroke = am4core.color(\"#dadada\");\n    separatorLine.valign = \"middle\";\n    separatorLine.strokeDasharray = \"5,5\";\n\n    let dragText = container.createChild(am4core.Label);\n    dragText.text = \"Drag slices over the line\";\n    dragText.rotation = 90;\n    dragText.valign = \"middle\";\n    dragText.align = \"center\";\n    dragText.paddingBottom = 5;\n\n    // second chart\n    let chart2 = container.createChild(am4charts.PieChart);\n    chart2.hiddenState.properties.opacity = 0; // this makes initial fade in effect\n    chart2.fontSize = 11;\n    chart2.radius = am4core.percent(70);\n    chart2.data = dataAndDummy;\n    chart2.innerRadius = am4core.percent(40);\n    chart2.zIndex = 1;\n\n    let series2 = chart2.series.push(new am4charts.PieSeries());\n    series2.dataFields.value = \"wins\";\n    series2.dataFields.category = \"name\";\n    series2.colors.step = 2;\n\n    series2.alignLabels = false;\n    series2.labels.template.bent = true;\n    series2.labels.template.radius = 3;\n    series2.labels.template.padding(0, 0, 0, 0);\n    series2.labels.template.propertyFields.disabled = \"disabled\";\n\n    let sliceTemplate2 = series2.slices.template;\n    sliceTemplate2.copyFrom(sliceTemplate1);\n\n    series2.ticks.template.disabled = true;\n\n    function handleDragStop(event) {\n      let targetSlice = event.target;\n      let dataItem1;\n      let dataItem2;\n      let slice1;\n      let slice2;\n\n      if (series1.slices.indexOf(targetSlice) != -1) {\n        slice1 = targetSlice;\n        slice2 = series2.dataItems.getIndex(targetSlice.dataItem.index).slice;\n      } else if (series2.slices.indexOf(targetSlice) != -1) {\n        slice1 = series1.dataItems.getIndex(targetSlice.dataItem.index).slice;\n        slice2 = targetSlice;\n      }\n\n      dataItem1 = slice1.dataItem;\n      dataItem2 = slice2.dataItem;\n\n      let series1Center = am4core.utils.spritePointToSvg(\n        { x: 0, y: 0 },\n        series1.slicesContainer\n      );\n      let series2Center = am4core.utils.spritePointToSvg(\n        { x: 0, y: 0 },\n        series2.slicesContainer\n      );\n\n      let series1CenterConverted = am4core.utils.svgPointToSprite(\n        series1Center,\n        series2.slicesContainer\n      );\n      let series2CenterConverted = am4core.utils.svgPointToSprite(\n        series2Center,\n        series1.slicesContainer\n      );\n\n      // tooltipY and tooltipY are in the middle of the slice, so we use them to avoid extra calculations\n      let targetSlicePoint = am4core.utils.spritePointToSvg(\n        { x: targetSlice.tooltipX, y: targetSlice.tooltipY },\n        targetSlice\n      );\n\n      if (targetSlice == slice1) {\n        if (targetSlicePoint.x > container.pixelWidth / 2) {\n          let value = dataItem1.value;\n\n          dataItem1.hide();\n\n          let animation = slice1.animate(\n            [\n              { property: \"x\", to: series2CenterConverted.x },\n              { property: \"y\", to: series2CenterConverted.y },\n            ],\n            400\n          );\n          animation.events.on(\"animationprogress\", function (event) {\n            slice1.hideTooltip();\n          });\n\n          slice2.x = 0;\n          slice2.y = 0;\n\n          dataItem2.show();\n        } else {\n          slice1.animate(\n            [\n              { property: \"x\", to: 0 },\n              { property: \"y\", to: 0 },\n            ],\n            400\n          );\n        }\n      }\n      if (targetSlice == slice2) {\n        if (targetSlicePoint.x < container.pixelWidth / 2) {\n          let value = dataItem2.value;\n\n          dataItem2.hide();\n\n          let animation = slice2.animate(\n            [\n              { property: \"x\", to: series1CenterConverted.x },\n              { property: \"y\", to: series1CenterConverted.y },\n            ],\n            400\n          );\n          animation.events.on(\"animationprogress\", function (event) {\n            slice2.hideTooltip();\n          });\n\n          slice1.x = 0;\n          slice1.y = 0;\n          dataItem1.show();\n        } else {\n          slice2.animate(\n            [\n              { property: \"x\", to: 0 },\n              { property: \"y\", to: 0 },\n            ],\n            400\n          );\n        }\n      }\n\n      toggleDummySlice(series1);\n      toggleDummySlice(series2);\n\n      series1.hideTooltip();\n      series2.hideTooltip();\n    }\n\n    function toggleDummySlice(series) {\n      let show = true;\n      for (var i = 1; i < series.dataItems.length; i++) {\n        let dataItem = series.dataItems.getIndex(i);\n        if (dataItem.slice.visible && !dataItem.slice.isHiding) {\n          show = false;\n        }\n      }\n\n      let dummySlice = series.dataItems.getIndex(0);\n      if (show) {\n        dummySlice.show();\n      } else {\n        dummySlice.hide();\n      }\n    }\n\n    series2.events.on(\"datavalidated\", function () {\n      let dummyDataItem = series2.dataItems.getIndex(0);\n      dummyDataItem.show(0);\n      dummyDataItem.slice.draggable = false;\n      dummyDataItem.slice.tooltipText = undefined;\n\n      for (var i = 1; i < series2.dataItems.length; i++) {\n        series2.dataItems.getIndex(i).hide(0);\n      }\n    });\n\n    series1.events.on(\"datavalidated\", function () {\n      let dummyDataItem = series1.dataItems.getIndex(0);\n      dummyDataItem.hide(0);\n      dummyDataItem.slice.draggable = false;\n      dummyDataItem.slice.tooltipText = undefined;\n    });\n    // ... boiler plate continues\n    chartFinal.current = container;\n\n    return () => {\n      container.dispose();\n    };\n  }, []);\n\n  // When the data prop changes it will update the chart\n  useLayoutEffect(() => {\n    chartFinal.current.data = [\n      {\n        name: \"Dummy\",\n        disabled: true,\n        wins: 1000,\n        color: am4core.color(\"#dadada\"),\n        opacity: 0.3,\n        strokeDasharray: \"4,4\",\n      },\n      ...data,\n    ];\n  }, [data]);\n\n  return <Box width={1} height={500} id=\"chartdivPlayerWins\"></Box>;\n};\n\nexport default PlayerWins;\n"]},"metadata":{},"sourceType":"module"}