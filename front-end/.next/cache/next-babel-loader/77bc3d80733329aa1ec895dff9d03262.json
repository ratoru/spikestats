{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/raphael/programming/web-projects/roundnet-stats/components/addComponents/AddGroupPlayers.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FaceRoundedIcon from \"@material-ui/icons/FaceRounded\";\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\n\nfunction isDuplicate(input, players) {\n  var isDuplicate = false;\n  Array.from(players, function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    if (value === input) isDuplicate = true;\n  });\n  return isDuplicate;\n}\n\nexport var AddGroupPlayers = function AddGroupPlayers(_ref3) {\n  _s();\n\n  var players = _ref3.players,\n      onAdd = _ref3.onAdd,\n      onDelete = _ref3.onDelete;\n\n  var _useState = useState(\"\"),\n      input = _useState[0],\n      setInput = _useState[1];\n\n  var handleClick = function handleClick() {\n    onAdd(input);\n    setInput(\"\");\n  };\n\n  var handleDelete = function handleDelete(key) {\n    onDelete(key); // Call this to rerender. Not ideal.\n\n    setInput(\"\");\n  };\n\n  return __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    justify: \"center\",\n    alignItems: \"baseline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Add Players\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    container: true,\n    spacing: 2,\n    justify: \"space-around\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, Array.from(players, function (_ref4) {\n    var _ref5 = _slicedToArray(_ref4, 2),\n        key = _ref5[0],\n        val = _ref5[1];\n\n    return __jsx(Grid, {\n      item: true,\n      key: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, __jsx(Chip, {\n      key: key,\n      label: val,\n      icon: __jsx(FaceRoundedIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 23\n        }\n      }),\n      onDelete: function onDelete() {\n        return handleDelete(key);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }));\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    container: true,\n    spacing: 2,\n    justify: \"space-around\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, __jsx(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    type: \"text\",\n    autoComplete: \"off\",\n    label: \"New Player\",\n    color: \"primary\",\n    helperText: \"Name has to be unique.\",\n    autoFocus: true,\n    value: input,\n    error: isDuplicate(input, players),\n    onChange: function onChange(event) {\n      setInput(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: __jsx(AddRoundedIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 22\n      }\n    }),\n    disabled: isDuplicate(input, players),\n    onClick: function onClick() {\n      return handleClick();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Add\"))));\n};\n\n_s(AddGroupPlayers, \"RL+Zbs2TIka0YpcBOJptmHqCgYA=\");\n\n_c = AddGroupPlayers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddGroupPlayers\");","map":{"version":3,"sources":["/Users/raphael/programming/web-projects/roundnet-stats/components/addComponents/AddGroupPlayers.tsx"],"names":["React","useState","Chip","Grid","Typography","TextField","Button","FaceRoundedIcon","AddRoundedIcon","isDuplicate","input","players","Array","from","key","value","AddGroupPlayers","onAdd","onDelete","setInput","handleClick","handleDelete","textAlign","val","event","target"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;;AASA,SAASC,WAAT,CAAqBC,KAArB,EAAoCC,OAApC,EAA+D;AAC7D,MAAIF,WAAoB,GAAG,KAA3B;AACAG,EAAAA,KAAK,CAACC,IAAN,CAAWF,OAAX,EAAoB,gBAAkB;AAAA;AAAA,QAAhBG,GAAgB;AAAA,QAAXC,KAAW;;AACpC,QAAIA,KAAK,KAAKL,KAAd,EAAqBD,WAAW,GAAG,IAAd;AACtB,GAFD;AAGA,SAAOA,WAAP;AACD;;AAED,OAAO,IAAMO,eAA+C,GAAG,SAAlDA,eAAkD,QAIzD;AAAA;;AAAA,MAHJL,OAGI,SAHJA,OAGI;AAAA,MAFJM,KAEI,SAFJA,KAEI;AAAA,MADJC,QACI,SADJA,QACI;;AAAA,kBACsBjB,QAAQ,CAAC,EAAD,CAD9B;AAAA,MACGS,KADH;AAAA,MACUS,QADV;;AAGJ,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBH,IAAAA,KAAK,CAACP,KAAD,CAAL;AACAS,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAHD;;AAKA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAACP,GAAD,EAAiB;AACpCI,IAAAA,QAAQ,CAACJ,GAAD,CAAR,CADoC,CAEpC;;AACAK,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAJD;;AAMA,SACE,MAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,OAAO,EAAE,CAHX;AAIE,IAAA,OAAO,EAAC,QAJV;AAKE,IAAA,UAAU,EAAC,UALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAE;AAAEG,MAAAA,SAAS,EAAE;AAAb,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CAPF,EAYE,MAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,EAAE,EAAE,EAFN;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,OAAO,EAAE,CAJX;AAKE,IAAA,OAAO,EAAC,cALV;AAME,IAAA,UAAU,EAAC,QANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGV,KAAK,CAACC,IAAN,CAAWF,OAAX,EAAoB,iBAAgB;AAAA;AAAA,QAAdG,GAAc;AAAA,QAATS,GAAS;;AACnC,WACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,GAAG,EAAET,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,KAAK,EAAES,GAFT;AAGE,MAAA,IAAI,EAAE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR;AAIE,MAAA,QAAQ,EAAE;AAAA,eAAMF,YAAY,CAACP,GAAD,CAAlB;AAAA,OAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAUD,GAXA,CARH,CAZF,EAiCE,MAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,EAAE,EAAE,EAFN;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,OAAO,EAAE,CAJX;AAKE,IAAA,OAAO,EAAC,cALV;AAME,IAAA,UAAU,EAAC,QANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,YAAY,EAAC,KALf;AAME,IAAA,KAAK,EAAC,YANR;AAOE,IAAA,KAAK,EAAC,SAPR;AAQE,IAAA,UAAU,EAAC,wBARb;AASE,IAAA,SAAS,MATX;AAUE,IAAA,KAAK,EAAEJ,KAVT;AAWE,IAAA,KAAK,EAAED,WAAW,CAACC,KAAD,EAAQC,OAAR,CAXpB;AAYE,IAAA,QAAQ,EAAE,kBAACa,KAAD,EAAW;AACnBL,MAAAA,QAAQ,CAACK,KAAK,CAACC,MAAN,CAAaV,KAAd,CAAR;AACD,KAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,EA0BE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHX;AAIE,IAAA,QAAQ,EAAEN,WAAW,CAACC,KAAD,EAAQC,OAAR,CAJvB;AAKE,IAAA,OAAO,EAAE;AAAA,aAAMS,WAAW,EAAjB;AAAA,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CA1BF,CAjCF,CADF;AA0ED,CA5FM;;GAAMJ,e;;KAAAA,e","sourcesContent":["import React, { useState } from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FaceRoundedIcon from \"@material-ui/icons/FaceRounded\";\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport { Players, Team } from \"../../util/types\";\n\ninterface AddGroupPlayersProps {\n  players: Players;\n  onAdd: (name: string) => void;\n  onDelete: (id: string) => void;\n}\n\nfunction isDuplicate(input: string, players: Players): boolean {\n  let isDuplicate: boolean = false;\n  Array.from(players, ([key, value]) => {\n    if (value === input) isDuplicate = true;\n  });\n  return isDuplicate;\n}\n\nexport const AddGroupPlayers: React.FC<AddGroupPlayersProps> = ({\n  players,\n  onAdd,\n  onDelete,\n}) => {\n  const [input, setInput] = useState(\"\");\n\n  const handleClick = () => {\n    onAdd(input);\n    setInput(\"\");\n  };\n\n  const handleDelete = (key: string) => {\n    onDelete(key);\n    // Call this to rerender. Not ideal.\n    setInput(\"\");\n  };\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      spacing={2}\n      justify=\"center\"\n      alignItems=\"baseline\"\n    >\n      <Grid item xs={12}>\n        <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n          Add Players\n        </Typography>\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        container\n        spacing={2}\n        justify=\"space-around\"\n        alignItems=\"center\"\n      >\n        {Array.from(players, ([key, val]) => {\n          return (\n            <Grid item key={key}>\n              <Chip\n                key={key}\n                label={val}\n                icon={<FaceRoundedIcon />}\n                onDelete={() => handleDelete(key)}\n              />\n            </Grid>\n          );\n        })}\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        container\n        spacing={2}\n        justify=\"space-around\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={6}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            type=\"text\"\n            autoComplete=\"off\"\n            label=\"New Player\"\n            color=\"primary\"\n            helperText=\"Name has to be unique.\"\n            autoFocus\n            value={input}\n            error={isDuplicate(input, players)}\n            onChange={(event) => {\n              setInput(event.target.value);\n            }}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            endIcon={<AddRoundedIcon />}\n            disabled={isDuplicate(input, players)}\n            onClick={() => handleClick()}\n          >\n            Add\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}