{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0","program":"/Users/raphael/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","-C","metadata=d7e3556dc3041cad","-C","extra-filename=-d7e3556dc3041cad","--out-dir","/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps","-L","dependency=/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps","--extern","bytes=/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps/libbytes-f47f8b777ce6a079.rmeta","--extern","futures_core=/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps/libfutures_core-bf8dc9192655e407.rmeta","--extern","futures_sink=/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps/libfutures_sink-6d4ab84bbcec5be3.rmeta","--extern","log=/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps/liblog-cdb8e98fb881d6fa.rmeta","--extern","pin_project_lite=/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps/libpin_project_lite-aec0e993be6a5b4f.rmeta","--extern","tokio=/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps/libtokio-e49c6e9c90420eab.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/raphael/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps/libtokio_util-d7e3556dc3041cad.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[867416190021661972,8657629957467255681]},"crate_root":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src","external_crates":[{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9505258173972014140,1687564053001788342]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11611887195329836898,18391061204127126749]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8031993392717489033,4124505603786489705]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15271802224688203332,8792150453795694033]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7165577602573969849,9858108452520037846]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[14698847031314625437,491468730102695142]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13330479813603739683,6803795581109914288]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18059772732427324572,13387991576644447952]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[10236583916794409636,10240650400930061727]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[11381542376919589428,1099759283771964623]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[362513579181741490,3555756610499304386]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1726896196391708128,17121846613634101866]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15657039231647705578,5960932578145670068]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7592225372802278695,9789656229435184476]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","num":15,"id":{"name":"bytes","disambiguator":[2270749683033126616,1484719321713887458]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":16,"id":{"name":"tokio","disambiguator":[1456834847294998238,2357109537530833194]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","num":17,"id":{"name":"pin_project_lite","disambiguator":[10659178223203344312,2693552595390497793]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","num":18,"id":{"name":"futures_core","disambiguator":[442992646704931613,17486116114397716243]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":19,"id":{"name":"mio","disambiguator":[9015430052538626756,1754656649108843891]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":20,"id":{"name":"net2","disambiguator":[6121241972712883102,11794295817372257133]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":21,"id":{"name":"libc","disambiguator":[12293655624372226261,1519600221282631606]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":22,"id":{"name":"cfg_if","disambiguator":[2882691960039253388,905378029989288621]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":23,"id":{"name":"iovec","disambiguator":[9761168185770761061,13861317068277600886]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":24,"id":{"name":"slab","disambiguator":[13684576324026575802,3564749835967240533]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","num":25,"id":{"name":"log","disambiguator":[7653832175408739471,5044327623104908239]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":26,"id":{"name":"lazy_static","disambiguator":[11980742202517877299,13303480249378304075]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":27,"id":{"name":"mio_uds","disambiguator":[11658889838562111976,7261679934135857006]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":28,"id":{"name":"memchr","disambiguator":[4297358035126816584,2506496304721642125]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":29,"id":{"name":"signal_hook_registry","disambiguator":[11870527098951522236,15661611945612543844]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":30,"id":{"name":"arc_swap","disambiguator":[11110819832243678890,7212059469733540171]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","num":31,"id":{"name":"futures_sink","disambiguator":[10546198965508019892,9589565863850501443]}}],"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":0,"byte_end":494,"line_start":1,"line_end":26,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":453},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6992584,"byte_end":6992594,"line_start":13,"line_end":13,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":34},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6992633,"byte_end":6992640,"line_start":16,"line_end":16,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":45},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6992679,"byte_end":6992686,"line_start":19,"line_end":19,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":772},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6992724,"byte_end":6992730,"line_start":22,"line_end":22,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":481},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6992732,"byte_end":6992743,"line_start":22,"line_end":22,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":686},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6992791,"byte_end":6992801,"line_start":25,"line_end":25,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":600},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6992850,"byte_end":6992861,"line_start":28,"line_end":28,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":505},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6992923,"byte_end":6992943,"line_start":31,"line_end":31,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":364},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6992945,"byte_end":6992970,"line_start":31,"line_end":31,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":521},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6993019,"byte_end":6993029,"line_start":34,"line_end":34,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":555},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6993031,"byte_end":6993046,"line_start":34,"line_end":34,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":6}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":0,"byte_end":494,"line_start":1,"line_end":26,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6}],"decl_id":null,"docs":" Utilities for working with Tokio.\n","sig":null,"attributes":[{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":60,"byte_end":166,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":167,"byte_end":210,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"! Utilities for working with Tokio.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":368,"byte_end":405,"line_start":15,"line_end":15,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":450}],"decl_id":null,"docs":" Utilities for encoding and decoding frames.","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/cfg.rs","byte_start":570,"byte_end":595,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"! Utilities for encoding and decoding frames.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6991982,"byte_end":6992029,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6992030,"byte_end":6992033,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6992034,"byte_end":6992102,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"! [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6992103,"byte_end":6992178,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"! Framed streams are also known as transports.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6992179,"byte_end":6992227,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6992228,"byte_end":6992231,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! [`AsyncRead`]: https://docs.rs/tokio/*/tokio/io/trait.AsyncRead.html","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6992232,"byte_end":6992304,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"! [`AsyncWrite`]: https://docs.rs/tokio/*/tokio/io/trait.AsyncWrite.html","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6992305,"byte_end":6992379,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"! [`Sink`]: https://docs.rs/futures-sink/*/futures_sink/trait.Sink.html","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6992380,"byte_end":6992453,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"! [`Stream`]: https://docs.rs/futures-core/*/futures_core/stream/trait.Stream.html","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6992454,"byte_end":6992538,"line_start":10,"line_end":10,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":453},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":6993329,"byte_end":6993339,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple `Codec` implementation that just ships bytes around.\n","sig":null,"attributes":[{"value":"/ A simple `Codec` implementation that just ships bytes around.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":6993175,"byte_end":6993240,"line_start":7,"line_end":7,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":6993441,"byte_end":6993444,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"fn () -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":6993368,"byte_end":6993429,"line_start":12,"line_end":12,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":34},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6994718,"byte_end":6994725,"line_start":19,"line_end":19,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6994211,"byte_end":6994246,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6994247,"byte_end":6994250,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of `Framed` or","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6994251,"byte_end":6994318,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ `FramedRead`. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6994319,"byte_end":6994396,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6994397,"byte_end":6994469,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6994470,"byte_end":6994494,"line_start":14,"line_end":14,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6994495,"byte_end":6994498,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6994499,"byte_end":6994567,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6994568,"byte_end":6994645,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6994646,"byte_end":6994707,"line_start":18,"line_end":18,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":35},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6994773,"byte_end":6994777,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6994732,"byte_end":6994763,"line_start":20,"line_end":20,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":36},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6995484,"byte_end":6995489,"line_start":36,"line_end":36,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6994784,"byte_end":6994836,"line_start":23,"line_end":23,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6994841,"byte_end":6994844,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6994849,"byte_end":6994918,"line_start":25,"line_end":25,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6994923,"byte_end":6994993,"line_start":26,"line_end":26,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6994998,"byte_end":6995044,"line_start":27,"line_end":27,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6995049,"byte_end":6995052,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6995057,"byte_end":6995133,"line_start":29,"line_end":29,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a `FramedRead`, and to enable the default","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6995138,"byte_end":6995211,"line_start":30,"line_end":30,"column_start":5,"column_end":78}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6995216,"byte_end":6995291,"line_start":31,"line_end":31,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6995296,"byte_end":6995336,"line_start":32,"line_end":32,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6995341,"byte_end":6995344,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6995349,"byte_end":6995423,"line_start":34,"line_end":34,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6995428,"byte_end":6995474,"line_start":35,"line_end":35,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6998322,"byte_end":6998328,"line_start":103,"line_end":103,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"fn (&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6995513,"byte_end":6995578,"line_start":38,"line_end":38,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6995583,"byte_end":6995586,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ This method is called by `FramedRead` whenever bytes are ready to be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6995591,"byte_end":6995663,"line_start":40,"line_end":40,"column_start":5,"column_end":77}},{"value":"/ parsed.  The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6995668,"byte_end":6995741,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6995746,"byte_end":6995819,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6995824,"byte_end":6995867,"line_start":43,"line_end":43,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6995872,"byte_end":6995875,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6995880,"byte_end":6995953,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6995958,"byte_end":6996021,"line_start":46,"line_end":46,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6996026,"byte_end":6996101,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6996106,"byte_end":6996181,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6996186,"byte_end":6996209,"line_start":49,"line_end":49,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6996214,"byte_end":6996217,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6996222,"byte_end":6996294,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the `Framed` instance that","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6996299,"byte_end":6996371,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6996376,"byte_end":6996446,"line_start":53,"line_end":53,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6996451,"byte_end":6996454,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6996459,"byte_end":6996527,"line_start":55,"line_end":55,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6996532,"byte_end":6996603,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6996608,"byte_end":6996688,"line_start":57,"line_end":57,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6996693,"byte_end":6996705,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6996710,"byte_end":6996713,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6996718,"byte_end":6996788,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs `Framed` that the stream is now","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6996793,"byte_end":6996866,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6996871,"byte_end":6996908,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6996913,"byte_end":6996916,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6996921,"byte_end":6996944,"line_start":64,"line_end":64,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6996949,"byte_end":6996952,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6996957,"byte_end":6997031,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997036,"byte_end":6997110,"line_start":67,"line_end":67,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997115,"byte_end":6997168,"line_start":68,"line_end":68,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997173,"byte_end":6997176,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997181,"byte_end":6997252,"line_start":70,"line_end":70,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997257,"byte_end":6997327,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997332,"byte_end":6997348,"line_start":72,"line_end":72,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997353,"byte_end":6997356,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997361,"byte_end":6997374,"line_start":74,"line_end":74,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997379,"byte_end":6997397,"line_start":75,"line_end":75,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997402,"byte_end":6997407,"line_start":76,"line_end":76,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997412,"byte_end":6997438,"line_start":77,"line_end":77,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997443,"byte_end":6997480,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997485,"byte_end":6997490,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997495,"byte_end":6997516,"line_start":80,"line_end":80,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997521,"byte_end":6997526,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997531,"byte_end":6997561,"line_start":82,"line_end":82,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997566,"byte_end":6997580,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997585,"byte_end":6997616,"line_start":84,"line_end":84,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997621,"byte_end":6997654,"line_start":85,"line_end":85,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997659,"byte_end":6997662,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997667,"byte_end":6997760,"line_start":87,"line_end":87,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997765,"byte_end":6997783,"line_start":88,"line_end":88,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997788,"byte_end":6997791,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997796,"byte_end":6997868,"line_start":90,"line_end":90,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997873,"byte_end":6997933,"line_start":91,"line_end":91,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997938,"byte_end":6997990,"line_start":92,"line_end":92,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6997995,"byte_end":6998057,"line_start":93,"line_end":93,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6998062,"byte_end":6998129,"line_start":94,"line_end":94,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6998134,"byte_end":6998137,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6998142,"byte_end":6998170,"line_start":96,"line_end":96,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6998175,"byte_end":6998184,"line_start":97,"line_end":97,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6998189,"byte_end":6998194,"line_start":98,"line_end":98,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6998199,"byte_end":6998206,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6998211,"byte_end":6998214,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6998219,"byte_end":6998288,"line_start":101,"line_end":101,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6998293,"byte_end":6998314,"line_start":102,"line_end":102,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6999187,"byte_end":6999197,"line_start":118,"line_end":118,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"fn (&mut self, buf: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6998409,"byte_end":6998481,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6998486,"byte_end":6998535,"line_start":106,"line_end":106,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6998540,"byte_end":6998543,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6998548,"byte_end":6998616,"line_start":108,"line_end":108,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6998621,"byte_end":6998688,"line_start":109,"line_end":109,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6998693,"byte_end":6998761,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6998766,"byte_end":6998814,"line_start":111,"line_end":111,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6998819,"byte_end":6998822,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6998827,"byte_end":6998895,"line_start":113,"line_end":113,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6998900,"byte_end":6998975,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6998980,"byte_end":6999055,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6999060,"byte_end":6999132,"line_start":116,"line_end":116,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6999137,"byte_end":6999179,"line_start":117,"line_end":117,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7000672,"byte_end":7000678,"line_start":148,"line_end":148,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"fn <T> (self, io: T) -> Framed<T, Self>","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Provides a `Stream` and `Sink` interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a `Stream` and `Sink` interface for reading and writing to this","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6999615,"byte_end":6999691,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6999696,"byte_end":6999772,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6999777,"byte_end":6999780,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6999785,"byte_end":6999860,"line_start":134,"line_end":134,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6999865,"byte_end":6999935,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6999940,"byte_end":7000011,"line_start":136,"line_end":136,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7000016,"byte_end":7000088,"line_start":137,"line_end":137,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7000093,"byte_end":7000151,"line_start":138,"line_end":138,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7000156,"byte_end":7000159,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7000164,"byte_end":7000233,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7000238,"byte_end":7000313,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7000318,"byte_end":7000394,"line_start":142,"line_end":142,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7000399,"byte_end":7000421,"line_start":143,"line_end":143,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7000426,"byte_end":7000429,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7000434,"byte_end":7000507,"line_start":145,"line_end":145,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the `Framed` returned by this method, which will","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7000512,"byte_end":7000583,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7000588,"byte_end":7000664,"line_start":147,"line_end":147,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":45},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7000969,"byte_end":7000976,"line_start":6,"line_end":6,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n `FramedWrite`.\n","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7000867,"byte_end":7000939,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7000940,"byte_end":7000958,"line_start":5,"line_end":5,"column_start":1,"column_end":19}}]},{"kind":"Type","id":{"krate":0,"index":46},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7001040,"byte_end":7001044,"line_start":8,"line_end":8,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::encoder::Encoder::Item","value":"type Item;","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" The type of items consumed by the `Encoder`\n","sig":null,"attributes":[{"value":"/ The type of items consumed by the `Encoder`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7000983,"byte_end":7001030,"line_start":7,"line_end":7,"column_start":5,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":47},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7001242,"byte_end":7001247,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7001051,"byte_end":7001083,"line_start":10,"line_end":10,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7001088,"byte_end":7001091,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ `FramedWrite` requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7001096,"byte_end":7001171,"line_start":12,"line_end":12,"column_start":5,"column_end":80}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7001176,"byte_end":7001232,"line_start":13,"line_end":13,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7001532,"byte_end":7001538,"line_start":21,"line_end":21,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"fn (&mut self, item: Self::Item, dst: &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7001271,"byte_end":7001316,"line_start":16,"line_end":16,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7001321,"byte_end":7001324,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7001329,"byte_end":7001403,"line_start":18,"line_end":18,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the `Framed` instance and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7001408,"byte_end":7001481,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ will be written out when possible.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7001486,"byte_end":7001524,"line_start":20,"line_end":20,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":772},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7002443,"byte_end":7002449,"line_start":23,"line_end":23,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":775}],"decl_id":null,"docs":" A unified `Stream` and `Sink` interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":81},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7002885,"byte_end":7002887,"line_start":40,"line_end":40,"column_start":10,"column_end":12},"name":"Io","qualname":"::codec::framed::ProjectFuse::Io","value":"type Io;","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":82},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7002898,"byte_end":7002903,"line_start":41,"line_end":41,"column_start":10,"column_end":15},"name":"Codec","qualname":"::codec::framed::ProjectFuse::Codec","value":"type Codec;","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7004438,"byte_end":7004441,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"fn (inner: T, codec: U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a `Stream` and `Sink` interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a `Stream` and `Sink` interface for reading and writing to this","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7003377,"byte_end":7003453,"line_start":64,"line_end":64,"column_start":5,"column_end":81}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7003458,"byte_end":7003534,"line_start":65,"line_end":65,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7003539,"byte_end":7003542,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7003547,"byte_end":7003622,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7003627,"byte_end":7003697,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7003702,"byte_end":7003773,"line_start":69,"line_end":69,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7003778,"byte_end":7003850,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7003855,"byte_end":7003913,"line_start":71,"line_end":71,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7003918,"byte_end":7003921,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7003926,"byte_end":7003995,"line_start":73,"line_end":73,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7004000,"byte_end":7004075,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7004080,"byte_end":7004156,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7004161,"byte_end":7004183,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7004188,"byte_end":7004191,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7004196,"byte_end":7004269,"line_start":78,"line_end":78,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the `Framed` returned by this method, which will","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7004274,"byte_end":7004345,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7004350,"byte_end":7004426,"line_start":80,"line_end":80,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7005854,"byte_end":7005864,"line_start":109,"line_end":109,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"fn (parts: FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a `Stream` and `Sink` interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a `Stream` and `Sink` interface for reading and writing to this","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7004621,"byte_end":7004697,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7004702,"byte_end":7004778,"line_start":90,"line_end":90,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7004783,"byte_end":7004786,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7004791,"byte_end":7004866,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7004871,"byte_end":7004941,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7004946,"byte_end":7005017,"line_start":94,"line_end":94,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7005022,"byte_end":7005094,"line_start":95,"line_end":95,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7005099,"byte_end":7005157,"line_start":96,"line_end":96,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7005162,"byte_end":7005165,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7005170,"byte_end":7005239,"line_start":98,"line_end":98,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7005244,"byte_end":7005319,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7005324,"byte_end":7005400,"line_start":100,"line_end":100,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7005405,"byte_end":7005427,"line_start":101,"line_end":101,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7005432,"byte_end":7005435,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7005440,"byte_end":7005519,"line_start":103,"line_end":103,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the `into_parts` method.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7005524,"byte_end":7005599,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7005604,"byte_end":7005607,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7005612,"byte_end":7005685,"line_start":106,"line_end":106,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the `Framed` returned by this method, which will","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7005690,"byte_end":7005761,"line_start":107,"line_end":107,"column_start":5,"column_end":76}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7005766,"byte_end":7005842,"line_start":108,"line_end":108,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7006552,"byte_end":7006559,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7006270,"byte_end":7006333,"line_start":124,"line_end":124,"column_start":5,"column_end":68}},{"value":"/ `Frame`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7006338,"byte_end":7006350,"line_start":125,"line_end":125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7006355,"byte_end":7006358,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7006363,"byte_end":7006438,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7006443,"byte_end":7006513,"line_start":128,"line_end":128,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7006518,"byte_end":7006540,"line_start":129,"line_end":129,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7006919,"byte_end":7006926,"line_start":140,"line_end":140,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7006629,"byte_end":7006700,"line_start":134,"line_end":134,"column_start":5,"column_end":76}},{"value":"/ `Frame`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7006705,"byte_end":7006717,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7006722,"byte_end":7006725,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7006730,"byte_end":7006805,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7006810,"byte_end":7006880,"line_start":138,"line_end":138,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7006885,"byte_end":7006907,"line_start":139,"line_end":139,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7007258,"byte_end":7007263,"line_start":149,"line_end":149,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"fn (&self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7007008,"byte_end":7007066,"line_start":144,"line_end":144,"column_start":5,"column_end":63}},{"value":"/ `Frame`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7007071,"byte_end":7007083,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7007088,"byte_end":7007091,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7007096,"byte_end":7007170,"line_start":147,"line_end":147,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7007175,"byte_end":7007246,"line_start":148,"line_end":148,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7007594,"byte_end":7007603,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"fn (&mut self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7007336,"byte_end":7007402,"line_start":153,"line_end":153,"column_start":5,"column_end":71}},{"value":"/ `Frame`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7007407,"byte_end":7007419,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7007424,"byte_end":7007427,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7007432,"byte_end":7007506,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7007511,"byte_end":7007582,"line_start":157,"line_end":157,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7007743,"byte_end":7007754,"line_start":163,"line_end":163,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"fn (&self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7007688,"byte_end":7007731,"line_start":162,"line_end":162,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7008080,"byte_end":7008090,"line_start":172,"line_end":172,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Frame`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Frame`, returning its underlying I/O stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7007816,"byte_end":7007878,"line_start":167,"line_end":167,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7007883,"byte_end":7007886,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7007891,"byte_end":7007966,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7007971,"byte_end":7008041,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7008046,"byte_end":7008068,"line_start":171,"line_end":171,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7008484,"byte_end":7008494,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"fn (self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Frame`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Frame`, returning its underlying I/O stream, the buffer","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7008163,"byte_end":7008236,"line_start":176,"line_end":176,"column_start":5,"column_end":78}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7008241,"byte_end":7008282,"line_start":177,"line_end":177,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7008287,"byte_end":7008290,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7008295,"byte_end":7008370,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7008375,"byte_end":7008445,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7008450,"byte_end":7008472,"line_start":181,"line_end":181,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":481},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7012845,"byte_end":7012856,"line_start":342,"line_end":342,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new `Framed` with a different codec.\n It contains all current buffers and the inner transport.\n","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7012613,"byte_end":7012684,"line_start":338,"line_end":338,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new `Framed` with a different codec.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7012685,"byte_end":7012755,"line_start":339,"line_end":339,"column_start":1,"column_end":71}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7012756,"byte_end":7012816,"line_start":340,"line_end":340,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":484},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7012942,"byte_end":7012944,"line_start":344,"line_end":344,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7012869,"byte_end":7012933,"line_start":343,"line_end":343,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":485},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7012976,"byte_end":7012981,"line_start":347,"line_end":347,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7012954,"byte_end":7012967,"line_start":346,"line_end":346,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":486},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7013046,"byte_end":7013054,"line_start":350,"line_end":350,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::bytes_mut::BytesMut","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7012991,"byte_end":7013037,"line_start":349,"line_end":349,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":487},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7013141,"byte_end":7013150,"line_start":353,"line_end":353,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::bytes_mut::BytesMut","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7013071,"byte_end":7013132,"line_start":352,"line_end":352,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7013383,"byte_end":7013386,"line_start":362,"line_end":362,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"fn (io: T, codec: U) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7013331,"byte_end":7013371,"line_start":361,"line_end":361,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":686},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7013985,"byte_end":7013995,"line_start":17,"line_end":17,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":689}],"decl_id":null,"docs":" A `Stream` of messages decoded from an `AsyncRead`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7014453,"byte_end":7014456,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"fn (inner: T, decoder: D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7014385,"byte_end":7014441,"line_start":42,"line_end":42,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7014976,"byte_end":7014983,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7014689,"byte_end":7014752,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7014757,"byte_end":7014774,"line_start":55,"line_end":55,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7014779,"byte_end":7014782,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7014787,"byte_end":7014862,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7014867,"byte_end":7014937,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7014942,"byte_end":7014964,"line_start":59,"line_end":59,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7015334,"byte_end":7015341,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7015039,"byte_end":7015110,"line_start":64,"line_end":64,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7015115,"byte_end":7015132,"line_start":65,"line_end":65,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7015137,"byte_end":7015140,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7015145,"byte_end":7015220,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7015225,"byte_end":7015295,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7015300,"byte_end":7015322,"line_start":69,"line_end":69,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7015678,"byte_end":7015688,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7015409,"byte_end":7015476,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7015481,"byte_end":7015484,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7015489,"byte_end":7015564,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7015569,"byte_end":7015639,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7015644,"byte_end":7015666,"line_start":78,"line_end":78,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7015803,"byte_end":7015810,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"fn (&self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7015741,"byte_end":7015791,"line_start":83,"line_end":83,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7015939,"byte_end":7015950,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"fn (&mut self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7015869,"byte_end":7015927,"line_start":88,"line_end":88,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7016076,"byte_end":7016087,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"fn (&self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7016021,"byte_end":7016064,"line_start":93,"line_end":93,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":600},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7021930,"byte_end":7021941,"line_start":20,"line_end":20,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":603}],"decl_id":null,"docs":" A `Sink` of frames encoded to an `AsyncWrite`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7022381,"byte_end":7022384,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"fn (inner: T, encoder: E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7022312,"byte_end":7022369,"line_start":42,"line_end":42,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7022909,"byte_end":7022916,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7022621,"byte_end":7022684,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7022689,"byte_end":7022707,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7022712,"byte_end":7022715,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7022720,"byte_end":7022795,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7022800,"byte_end":7022870,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7022875,"byte_end":7022897,"line_start":59,"line_end":59,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7023268,"byte_end":7023275,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7022972,"byte_end":7023043,"line_start":64,"line_end":64,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7023048,"byte_end":7023066,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7023071,"byte_end":7023074,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7023079,"byte_end":7023154,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7023159,"byte_end":7023229,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7023234,"byte_end":7023256,"line_start":69,"line_end":69,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7023613,"byte_end":7023623,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7023343,"byte_end":7023411,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7023416,"byte_end":7023419,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7023424,"byte_end":7023499,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7023504,"byte_end":7023574,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7023579,"byte_end":7023601,"line_start":78,"line_end":78,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7023738,"byte_end":7023745,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"fn (&self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7023676,"byte_end":7023726,"line_start":83,"line_end":83,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7023874,"byte_end":7023885,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"fn (&mut self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7023804,"byte_end":7023862,"line_start":88,"line_end":88,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":342},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":493},{"krate":0,"index":503},{"krate":0,"index":501},{"krate":0,"index":500},{"krate":0,"index":364},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":519},{"krate":0,"index":517},{"krate":0,"index":516},{"krate":0,"index":366},{"krate":0,"index":373},{"krate":0,"index":377},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":409}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"! Frame a stream of bytes based on a length prefix","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7030325,"byte_end":7030377,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7030378,"byte_end":7030381,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7030382,"byte_end":7030452,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"! frame head that specifies the length of the frame. The","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7030453,"byte_end":7030511,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"! `length_delimited` module provides utilities for handling the length","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7030512,"byte_end":7030584,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"! based framing. This allows the consumer to work with entire frames","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7030585,"byte_end":7030655,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"! without having to worry about buffering or other framing logic.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7030656,"byte_end":7030723,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7030724,"byte_end":7030727,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # Getting started","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7030728,"byte_end":7030749,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7030750,"byte_end":7030753,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7030754,"byte_end":7030829,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"! is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7030830,"byte_end":7030901,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"! return a length delimited codec using default configuration values.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7030902,"byte_end":7030973,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"! This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7030974,"byte_end":7031044,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"! byte stream into a stream of frames.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031045,"byte_end":7031085,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031086,"byte_end":7031089,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031090,"byte_end":7031097,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"! use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031098,"byte_end":7031141,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"! use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031142,"byte_end":7031200,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031201,"byte_end":7031204,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031205,"byte_end":7031260,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"!     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031261,"byte_end":7031303,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"! {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031304,"byte_end":7031309,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"!     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031310,"byte_end":7031362,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"! }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031363,"byte_end":7031368,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"! # pub fn main() {}","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031369,"byte_end":7031391,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031392,"byte_end":7031399,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031400,"byte_end":7031403,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031404,"byte_end":7031476,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"! encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031477,"byte_end":7031548,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"! payload length:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031549,"byte_end":7031568,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031569,"byte_end":7031572,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031573,"byte_end":7031584,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"! +----------+--------------------------------+","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031585,"byte_end":7031634,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"! | len: u32 |          frame payload         |","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031635,"byte_end":7031684,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"! +----------+--------------------------------+","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031685,"byte_end":7031734,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031735,"byte_end":7031742,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031743,"byte_end":7031746,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! Specifically, given the following:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031747,"byte_end":7031785,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031786,"byte_end":7031789,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031790,"byte_end":7031797,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031798,"byte_end":7031824,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"! use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031825,"byte_end":7031883,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031884,"byte_end":7031887,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! use futures::SinkExt;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031888,"byte_end":7031913,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"! use bytes::Bytes;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031914,"byte_end":7031935,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031936,"byte_end":7031939,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7031940,"byte_end":7032016,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"! where","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032017,"byte_end":7032026,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"!     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032027,"byte_end":7032069,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"! {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032070,"byte_end":7032075,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"!     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032076,"byte_end":7032149,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"!     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032150,"byte_end":7032197,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032198,"byte_end":7032201,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"!     transport.send(frame).await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032202,"byte_end":7032239,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"!     Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032240,"byte_end":7032254,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032255,"byte_end":7032260,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032261,"byte_end":7032268,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032269,"byte_end":7032272,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! The encoded frame will look like this:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032273,"byte_end":7032315,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032316,"byte_end":7032319,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032320,"byte_end":7032331,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"! +---- len: u32 ----+---- data ----+","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032332,"byte_end":7032371,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"! | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032372,"byte_end":7032411,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"! +------------------+--------------+","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032412,"byte_end":7032451,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032452,"byte_end":7032459,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032460,"byte_end":7032463,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! # Decoding","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032464,"byte_end":7032478,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032479,"byte_end":7032482,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032483,"byte_end":7032558,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"! such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032559,"byte_end":7032632,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"! entire frame. There are many configuration parameters enabling","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032633,"byte_end":7032699,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"! [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032700,"byte_end":7032769,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"! examples that will cover the various options at a high level.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032770,"byte_end":7032835,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032836,"byte_end":7032839,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! ## Example 1","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032840,"byte_end":7032856,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032857,"byte_end":7032860,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032861,"byte_end":7032937,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"! frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032938,"byte_end":7032979,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032980,"byte_end":7032983,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032984,"byte_end":7032991,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7032992,"byte_end":7033023,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033024,"byte_end":7033074,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033075,"byte_end":7033116,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033117,"byte_end":7033152,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033153,"byte_end":7033201,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(2)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033202,"byte_end":7033233,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(0)   // default value","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033234,"byte_end":7033282,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"!     .num_skip(0) // Do not strip frame header","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033283,"byte_end":7033332,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"!     .new_read(io);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033333,"byte_end":7033355,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033356,"byte_end":7033363,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033364,"byte_end":7033386,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033387,"byte_end":7033394,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033395,"byte_end":7033398,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033399,"byte_end":7033447,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033448,"byte_end":7033451,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033452,"byte_end":7033463,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"!          INPUT                           DECODED","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033464,"byte_end":7033516,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"! +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033517,"byte_end":7033582,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"! | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033583,"byte_end":7033648,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"! +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033649,"byte_end":7033714,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033715,"byte_end":7033722,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033723,"byte_end":7033726,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"! The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033727,"byte_end":7033803,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"! of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033804,"byte_end":7033878,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"! the length field represents the number of bytes that **follows** the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033879,"byte_end":7033951,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"! length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7033952,"byte_end":7034028,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"! frame head + 11 bytes for the payload.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034029,"byte_end":7034071,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034072,"byte_end":7034075,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! ## Example 2","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034076,"byte_end":7034092,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034093,"byte_end":7034096,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034097,"byte_end":7034172,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"! frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034173,"byte_end":7034214,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034215,"byte_end":7034218,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034219,"byte_end":7034226,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034227,"byte_end":7034258,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034259,"byte_end":7034309,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034310,"byte_end":7034351,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034352,"byte_end":7034387,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034388,"byte_end":7034436,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(2)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034437,"byte_end":7034468,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(0)   // default value","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034469,"byte_end":7034517,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"!     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034518,"byte_end":7034577,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"!     .new_read(io);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034578,"byte_end":7034600,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034601,"byte_end":7034608,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034609,"byte_end":7034631,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034632,"byte_end":7034639,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034640,"byte_end":7034643,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034644,"byte_end":7034692,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034693,"byte_end":7034696,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034697,"byte_end":7034708,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"!          INPUT                        DECODED","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034709,"byte_end":7034758,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"! +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034759,"byte_end":7034813,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"! | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034814,"byte_end":7034868,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"! +----------+---------------+     +---------------+","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034869,"byte_end":7034923,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034924,"byte_end":7034931,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034932,"byte_end":7034935,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"! This is similar to the first example, the only difference is that the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7034936,"byte_end":7035009,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"! frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035010,"byte_end":7035077,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035078,"byte_end":7035081,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! ## Example 3","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035082,"byte_end":7035098,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035099,"byte_end":7035102,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035103,"byte_end":7035179,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"! frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035180,"byte_end":7035252,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"! **includes** the frame head length.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035253,"byte_end":7035292,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035293,"byte_end":7035296,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035297,"byte_end":7035304,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035305,"byte_end":7035336,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035337,"byte_end":7035387,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035388,"byte_end":7035429,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035430,"byte_end":7035465,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035466,"byte_end":7035514,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(2)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035515,"byte_end":7035546,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(-2)  // size of head","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035547,"byte_end":7035594,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"!     .num_skip(0)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035595,"byte_end":7035615,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"!     .new_read(io);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035616,"byte_end":7035638,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035639,"byte_end":7035646,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035647,"byte_end":7035669,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035670,"byte_end":7035677,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035678,"byte_end":7035681,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035682,"byte_end":7035730,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035731,"byte_end":7035734,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035735,"byte_end":7035746,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"!          INPUT                           DECODED","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035747,"byte_end":7035799,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"! +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035800,"byte_end":7035865,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"! | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035866,"byte_end":7035931,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"! +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035932,"byte_end":7035997,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7035998,"byte_end":7036005,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036006,"byte_end":7036009,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! In most cases, the length field represents the length of the payload","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036010,"byte_end":7036082,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"! only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036083,"byte_end":7036158,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"! length field represents the length of the whole frame, including the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036159,"byte_end":7036231,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"! head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036232,"byte_end":7036308,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"! the value provided in the frame head to represent the payload length.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036309,"byte_end":7036382,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036383,"byte_end":7036386,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"! ## Example 4","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036387,"byte_end":7036403,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036404,"byte_end":7036407,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"! The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036408,"byte_end":7036482,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"! frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036483,"byte_end":7036550,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036551,"byte_end":7036554,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036555,"byte_end":7036562,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036563,"byte_end":7036594,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036595,"byte_end":7036645,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036646,"byte_end":7036687,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036688,"byte_end":7036723,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036724,"byte_end":7036772,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(3)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036773,"byte_end":7036804,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(2)  // remaining head","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036805,"byte_end":7036853,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"!     .num_skip(0)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036854,"byte_end":7036874,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"!     .new_read(io);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036875,"byte_end":7036897,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036898,"byte_end":7036905,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036906,"byte_end":7036928,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036929,"byte_end":7036936,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036937,"byte_end":7036940,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036941,"byte_end":7036989,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036990,"byte_end":7036993,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7036994,"byte_end":7037005,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"!                  INPUT","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037006,"byte_end":7037032,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"! +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037033,"byte_end":7037078,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"! | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037079,"byte_end":7037124,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"! +--------------+--------+---------------+","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037125,"byte_end":7037170,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037171,"byte_end":7037174,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"!                  DECODED","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037175,"byte_end":7037203,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"! +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037204,"byte_end":7037249,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"! | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037250,"byte_end":7037295,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"! +--------------+--------+---------------+","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037296,"byte_end":7037341,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037342,"byte_end":7037349,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037350,"byte_end":7037353,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"! A more advanced example that shows a case where there is extra frame","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037354,"byte_end":7037426,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"! head data between the length field and the payload. In such cases, it is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037427,"byte_end":7037503,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"! usually desirable to include the frame head as part of the yielded","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037504,"byte_end":7037574,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"! `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037575,"byte_end":7037644,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"! process the frame head as needed.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037645,"byte_end":7037682,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037683,"byte_end":7037686,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"! The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037687,"byte_end":7037761,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"! additional head into the frame length calculation.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037762,"byte_end":7037816,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037817,"byte_end":7037820,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"! ## Example 5","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037821,"byte_end":7037837,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037838,"byte_end":7037841,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037842,"byte_end":7037915,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"! frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037916,"byte_end":7037992,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"! yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7037993,"byte_end":7038067,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"! included.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038068,"byte_end":7038081,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038082,"byte_end":7038085,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038086,"byte_end":7038093,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038094,"byte_end":7038125,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038126,"byte_end":7038176,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038177,"byte_end":7038218,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038219,"byte_end":7038254,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038255,"byte_end":7038304,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"!     .length_field_length(2)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038305,"byte_end":7038336,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038337,"byte_end":7038385,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"!     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038386,"byte_end":7038430,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"!     .new_read(io);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038431,"byte_end":7038453,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038454,"byte_end":7038461,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038462,"byte_end":7038484,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038485,"byte_end":7038492,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038493,"byte_end":7038496,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038497,"byte_end":7038545,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038546,"byte_end":7038549,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038550,"byte_end":7038561,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"!                  INPUT","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038562,"byte_end":7038588,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"! +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038589,"byte_end":7038639,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"! |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038640,"byte_end":7038690,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"! +--------+----------+--------+---------------+","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038691,"byte_end":7038741,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038742,"byte_end":7038745,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"!          DECODED","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038746,"byte_end":7038766,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"! +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038767,"byte_end":7038797,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"! |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038798,"byte_end":7038828,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"! +--------+---------------+","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038829,"byte_end":7038859,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038860,"byte_end":7038867,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038868,"byte_end":7038871,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"! The length field is situated in the middle of the frame head. In this","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038872,"byte_end":7038945,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"! case, the first byte in the frame head could be a version or some other","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7038946,"byte_end":7039021,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"! identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7039022,"byte_end":7039094,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"! second half of the head is needed.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7039095,"byte_end":7039133,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7039134,"byte_end":7039137,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"! `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7039138,"byte_end":7039212,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"! to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7039213,"byte_end":7039289,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"! skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7039290,"byte_end":7039363,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"! second half of the head.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7039364,"byte_end":7039392,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7039393,"byte_end":7039396,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"! ## Example 6","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7039397,"byte_end":7039413,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7039414,"byte_end":7039417,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7039418,"byte_end":7039491,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"! frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7039492,"byte_end":7039568,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"! yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7039569,"byte_end":7039643,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"! included. In this case, the length field **includes** the frame head","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7039644,"byte_end":7039716,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"! length.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7039717,"byte_end":7039728,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7039729,"byte_end":7039732,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7039733,"byte_end":7039740,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7039741,"byte_end":7039772,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7039773,"byte_end":7039823,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7039824,"byte_end":7039865,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7039866,"byte_end":7039901,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7039902,"byte_end":7039951,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"!     .length_field_length(2)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7039952,"byte_end":7039983,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7039984,"byte_end":7040049,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"!     .num_skip(3)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040050,"byte_end":7040070,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"!     .new_read(io);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040071,"byte_end":7040093,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040094,"byte_end":7040101,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040102,"byte_end":7040109,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040110,"byte_end":7040113,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040114,"byte_end":7040162,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040163,"byte_end":7040166,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040167,"byte_end":7040178,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"!                  INPUT","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040179,"byte_end":7040205,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"! +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040206,"byte_end":7040256,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"! |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040257,"byte_end":7040307,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"! +--------+----------+--------+---------------+","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040308,"byte_end":7040358,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040359,"byte_end":7040362,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"!          DECODED","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040363,"byte_end":7040383,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"! +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040384,"byte_end":7040414,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"! |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040415,"byte_end":7040445,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"! +--------+---------------+","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040446,"byte_end":7040476,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040477,"byte_end":7040484,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040485,"byte_end":7040488,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"! Similar to the example above, the difference is that the length field","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040489,"byte_end":7040562,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"! represents the length of the entire frame instead of just the payload.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040563,"byte_end":7040637,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"! The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040638,"byte_end":7040712,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"! Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040713,"byte_end":7040786,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"! anywhere because it already is factored into the total frame length that","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040787,"byte_end":7040863,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"! is read from the byte stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040864,"byte_end":7040897,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040898,"byte_end":7040901,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"! # Encoding","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040902,"byte_end":7040916,"line_start":305,"line_end":305,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040917,"byte_end":7040920,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"! [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040921,"byte_end":7040996,"line_start":307,"line_end":307,"column_start":1,"column_end":76}},{"value":"! such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7040997,"byte_end":7041069,"line_start":308,"line_end":308,"column_start":1,"column_end":73}},{"value":"! There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041070,"byte_end":7041138,"line_start":309,"line_end":309,"column_start":1,"column_end":69}},{"value":"! protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041139,"byte_end":7041215,"line_start":310,"line_end":310,"column_start":1,"column_end":77}},{"value":"! be written by hand using [`Encoder`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041216,"byte_end":7041257,"line_start":311,"line_end":311,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041258,"byte_end":7041261,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"! Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041262,"byte_end":7041332,"line_start":313,"line_end":313,"column_start":1,"column_end":71}},{"value":"! configuration:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041333,"byte_end":7041351,"line_start":314,"line_end":314,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041352,"byte_end":7041355,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041356,"byte_end":7041363,"line_start":316,"line_end":316,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041364,"byte_end":7041396,"line_start":317,"line_end":317,"column_start":1,"column_end":33}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041397,"byte_end":7041447,"line_start":318,"line_end":318,"column_start":1,"column_end":51}},{"value":"! # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041448,"byte_end":7041492,"line_start":319,"line_end":319,"column_start":1,"column_end":45}},{"value":"! # let _ =","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041493,"byte_end":7041506,"line_start":320,"line_end":320,"column_start":1,"column_end":14}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041507,"byte_end":7041542,"line_start":321,"line_end":321,"column_start":1,"column_end":36}},{"value":"!     .length_field_length(2)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041543,"byte_end":7041574,"line_start":322,"line_end":322,"column_start":1,"column_end":32}},{"value":"!     .new_write(io);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041575,"byte_end":7041598,"line_start":323,"line_end":323,"column_start":1,"column_end":24}},{"value":"! # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041599,"byte_end":7041606,"line_start":324,"line_end":324,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041607,"byte_end":7041629,"line_start":325,"line_end":325,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041630,"byte_end":7041637,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041638,"byte_end":7041641,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"! A payload of `hello world` will be encoded as:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041642,"byte_end":7041692,"line_start":328,"line_end":328,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041693,"byte_end":7041696,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041697,"byte_end":7041708,"line_start":330,"line_end":330,"column_start":1,"column_end":12}},{"value":"! +- len: u16 -+---- data ----+","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041709,"byte_end":7041742,"line_start":331,"line_end":331,"column_start":1,"column_end":34}},{"value":"! |  \\x00\\x0b  |  hello world |","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041743,"byte_end":7041776,"line_start":332,"line_end":332,"column_start":1,"column_end":34}},{"value":"! +------------+--------------+","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041777,"byte_end":7041810,"line_start":333,"line_end":333,"column_start":1,"column_end":34}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041811,"byte_end":7041818,"line_start":334,"line_end":334,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041819,"byte_end":7041822,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"! [`LengthDelimitedCodec::new()`]: struct.LengthDelimitedCodec.html#method.new","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041823,"byte_end":7041903,"line_start":336,"line_end":336,"column_start":1,"column_end":81}},{"value":"! [`FramedRead`]: struct.FramedRead.html","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041904,"byte_end":7041946,"line_start":337,"line_end":337,"column_start":1,"column_end":43}},{"value":"! [`FramedWrite`]: struct.FramedWrite.html","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041947,"byte_end":7041991,"line_start":338,"line_end":338,"column_start":1,"column_end":45}},{"value":"! [`AsyncRead`]: ../../trait.AsyncRead.html","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7041992,"byte_end":7042037,"line_start":339,"line_end":339,"column_start":1,"column_end":46}},{"value":"! [`AsyncWrite`]: ../../trait.AsyncWrite.html","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7042038,"byte_end":7042085,"line_start":340,"line_end":340,"column_start":1,"column_end":48}},{"value":"! [`Encoder`]: ../trait.Encoder.html","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7042086,"byte_end":7042124,"line_start":341,"line_end":341,"column_start":1,"column_end":39}},{"value":"! [`BytesMut`]: https://docs.rs/bytes/0.4/bytes/struct.BytesMut.html","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7042125,"byte_end":7042195,"line_start":342,"line_end":342,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":493},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7042757,"byte_end":7042764,"line_start":359,"line_end":359,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7042439,"byte_end":7042494,"line_start":353,"line_end":353,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7042495,"byte_end":7042498,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7042499,"byte_end":7042574,"line_start":355,"line_end":355,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7042575,"byte_end":7042655,"line_start":356,"line_end":356,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7042656,"byte_end":7042715,"line_start":357,"line_end":357,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":364},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7043435,"byte_end":7043460,"line_start":381,"line_end":381,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":365}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7043350,"byte_end":7043423,"line_start":380,"line_end":380,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":505},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7043805,"byte_end":7043825,"line_start":394,"line_end":394,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7043481,"byte_end":7043555,"line_start":385,"line_end":385,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7043556,"byte_end":7043559,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7043560,"byte_end":7043639,"line_start":387,"line_end":387,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7043640,"byte_end":7043683,"line_start":388,"line_end":388,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7043684,"byte_end":7043687,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7043688,"byte_end":7043741,"line_start":390,"line_end":390,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7043742,"byte_end":7043745,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7043746,"byte_end":7043776,"line_start":392,"line_end":392,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7044169,"byte_end":7044172,"line_start":412,"line_end":412,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7044078,"byte_end":7044157,"line_start":411,"line_end":411,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7044399,"byte_end":7044406,"line_start":421,"line_end":421,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7044296,"byte_end":7044371,"line_start":419,"line_end":419,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7044376,"byte_end":7044387,"line_start":420,"line_end":420,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7044628,"byte_end":7044644,"line_start":429,"line_end":429,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7044456,"byte_end":7044497,"line_start":425,"line_end":425,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7044502,"byte_end":7044505,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7044510,"byte_end":7044583,"line_start":427,"line_end":427,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7044588,"byte_end":7044616,"line_start":428,"line_end":428,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7045065,"byte_end":7045085,"line_start":439,"line_end":439,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"fn (&mut self, val: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7044709,"byte_end":7044743,"line_start":433,"line_end":433,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7044748,"byte_end":7044751,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7044756,"byte_end":7044826,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7044831,"byte_end":7044906,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7044911,"byte_end":7044983,"line_start":437,"line_end":437,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7044988,"byte_end":7045053,"line_start":438,"line_end":438,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7050395,"byte_end":7050398,"line_start":622,"line_end":622,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7049853,"byte_end":7049928,"line_start":603,"line_end":603,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7049933,"byte_end":7049944,"line_start":604,"line_end":604,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7049949,"byte_end":7049952,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7049957,"byte_end":7049971,"line_start":606,"line_end":606,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7049976,"byte_end":7049979,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7049984,"byte_end":7049991,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7049996,"byte_end":7050027,"line_start":609,"line_end":609,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7050032,"byte_end":7050080,"line_start":610,"line_end":610,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7050085,"byte_end":7050088,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7050093,"byte_end":7050134,"line_start":612,"line_end":612,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7050139,"byte_end":7050174,"line_start":613,"line_end":613,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7050179,"byte_end":7050210,"line_start":614,"line_end":614,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7050215,"byte_end":7050246,"line_start":615,"line_end":615,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7050251,"byte_end":7050280,"line_start":616,"line_end":616,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7050285,"byte_end":7050305,"line_start":617,"line_end":617,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7050310,"byte_end":7050332,"line_start":618,"line_end":618,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7050337,"byte_end":7050344,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7050349,"byte_end":7050371,"line_start":620,"line_end":620,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7050376,"byte_end":7050383,"line_start":621,"line_end":621,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051583,"byte_end":7051593,"line_start":663,"line_end":663,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051062,"byte_end":7051111,"line_start":644,"line_end":644,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051116,"byte_end":7051119,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051124,"byte_end":7051156,"line_start":646,"line_end":646,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051161,"byte_end":7051164,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051169,"byte_end":7051237,"line_start":648,"line_end":648,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051242,"byte_end":7051245,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051250,"byte_end":7051264,"line_start":650,"line_end":650,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051269,"byte_end":7051272,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051277,"byte_end":7051284,"line_start":652,"line_end":652,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051289,"byte_end":7051320,"line_start":653,"line_end":653,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051325,"byte_end":7051373,"line_start":654,"line_end":654,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051378,"byte_end":7051381,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051386,"byte_end":7051427,"line_start":656,"line_end":656,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051432,"byte_end":7051467,"line_start":657,"line_end":657,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051472,"byte_end":7051493,"line_start":658,"line_end":658,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051498,"byte_end":7051520,"line_start":659,"line_end":659,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051525,"byte_end":7051532,"line_start":660,"line_end":660,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051537,"byte_end":7051559,"line_start":661,"line_end":661,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051564,"byte_end":7051571,"line_start":662,"line_end":662,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052225,"byte_end":7052238,"line_start":687,"line_end":687,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051692,"byte_end":7051744,"line_start":668,"line_end":668,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051749,"byte_end":7051752,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051757,"byte_end":7051795,"line_start":670,"line_end":670,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051800,"byte_end":7051803,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051808,"byte_end":7051876,"line_start":672,"line_end":672,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051881,"byte_end":7051884,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051889,"byte_end":7051903,"line_start":674,"line_end":674,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051908,"byte_end":7051911,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051916,"byte_end":7051923,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051928,"byte_end":7051959,"line_start":677,"line_end":677,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7051964,"byte_end":7052012,"line_start":678,"line_end":678,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052017,"byte_end":7052020,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052025,"byte_end":7052066,"line_start":680,"line_end":680,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052071,"byte_end":7052106,"line_start":681,"line_end":681,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052111,"byte_end":7052135,"line_start":682,"line_end":682,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052140,"byte_end":7052162,"line_start":683,"line_end":683,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052167,"byte_end":7052174,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052179,"byte_end":7052201,"line_start":685,"line_end":685,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052206,"byte_end":7052213,"line_start":686,"line_end":686,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052871,"byte_end":7052884,"line_start":711,"line_end":711,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052338,"byte_end":7052390,"line_start":692,"line_end":692,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052395,"byte_end":7052398,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052403,"byte_end":7052441,"line_start":694,"line_end":694,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052446,"byte_end":7052449,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052454,"byte_end":7052522,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052527,"byte_end":7052530,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052535,"byte_end":7052549,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052554,"byte_end":7052557,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052562,"byte_end":7052569,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052574,"byte_end":7052605,"line_start":701,"line_end":701,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052610,"byte_end":7052658,"line_start":702,"line_end":702,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052663,"byte_end":7052666,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052671,"byte_end":7052712,"line_start":704,"line_end":704,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052717,"byte_end":7052752,"line_start":705,"line_end":705,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052757,"byte_end":7052781,"line_start":706,"line_end":706,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052786,"byte_end":7052808,"line_start":707,"line_end":707,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052813,"byte_end":7052820,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052825,"byte_end":7052847,"line_start":709,"line_end":709,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7052852,"byte_end":7052859,"line_start":710,"line_end":710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053965,"byte_end":7053981,"line_start":745,"line_end":745,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053053,"byte_end":7053082,"line_start":719,"line_end":719,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053087,"byte_end":7053090,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053095,"byte_end":7053167,"line_start":721,"line_end":721,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053172,"byte_end":7053197,"line_start":722,"line_end":722,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053202,"byte_end":7053205,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053210,"byte_end":7053282,"line_start":724,"line_end":724,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053287,"byte_end":7053356,"line_start":725,"line_end":725,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053361,"byte_end":7053434,"line_start":726,"line_end":726,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053439,"byte_end":7053451,"line_start":727,"line_end":727,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053456,"byte_end":7053459,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053464,"byte_end":7053539,"line_start":729,"line_end":729,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053544,"byte_end":7053605,"line_start":730,"line_end":730,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053610,"byte_end":7053613,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053618,"byte_end":7053632,"line_start":732,"line_end":732,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053637,"byte_end":7053640,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053645,"byte_end":7053652,"line_start":734,"line_end":734,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053657,"byte_end":7053688,"line_start":735,"line_end":735,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053693,"byte_end":7053741,"line_start":736,"line_end":736,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053746,"byte_end":7053749,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053754,"byte_end":7053795,"line_start":738,"line_end":738,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053800,"byte_end":7053835,"line_start":739,"line_end":739,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053840,"byte_end":7053875,"line_start":740,"line_end":740,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053880,"byte_end":7053902,"line_start":741,"line_end":741,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053907,"byte_end":7053914,"line_start":742,"line_end":742,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053919,"byte_end":7053941,"line_start":743,"line_end":743,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7053946,"byte_end":7053953,"line_start":744,"line_end":744,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054642,"byte_end":7054661,"line_start":769,"line_end":769,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054078,"byte_end":7054141,"line_start":750,"line_end":750,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054146,"byte_end":7054149,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054154,"byte_end":7054205,"line_start":752,"line_end":752,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054210,"byte_end":7054213,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054218,"byte_end":7054286,"line_start":754,"line_end":754,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054291,"byte_end":7054294,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054299,"byte_end":7054313,"line_start":756,"line_end":756,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054318,"byte_end":7054321,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054326,"byte_end":7054333,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054338,"byte_end":7054369,"line_start":759,"line_end":759,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054374,"byte_end":7054422,"line_start":760,"line_end":760,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054427,"byte_end":7054430,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054435,"byte_end":7054476,"line_start":762,"line_end":762,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054481,"byte_end":7054516,"line_start":763,"line_end":763,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054521,"byte_end":7054552,"line_start":764,"line_end":764,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054557,"byte_end":7054579,"line_start":765,"line_end":765,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054584,"byte_end":7054591,"line_start":766,"line_end":766,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054596,"byte_end":7054618,"line_start":767,"line_end":767,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054623,"byte_end":7054630,"line_start":768,"line_end":768,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055320,"byte_end":7055339,"line_start":792,"line_end":792,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054830,"byte_end":7054896,"line_start":775,"line_end":775,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054901,"byte_end":7054904,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054909,"byte_end":7054964,"line_start":777,"line_end":777,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054969,"byte_end":7054972,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054977,"byte_end":7054991,"line_start":779,"line_end":779,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7054996,"byte_end":7054999,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055004,"byte_end":7055011,"line_start":781,"line_end":781,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055016,"byte_end":7055047,"line_start":782,"line_end":782,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055052,"byte_end":7055100,"line_start":783,"line_end":783,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055105,"byte_end":7055108,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055113,"byte_end":7055154,"line_start":785,"line_end":785,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055159,"byte_end":7055194,"line_start":786,"line_end":786,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055199,"byte_end":7055230,"line_start":787,"line_end":787,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055235,"byte_end":7055257,"line_start":788,"line_end":788,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055262,"byte_end":7055269,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055274,"byte_end":7055296,"line_start":790,"line_end":790,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055301,"byte_end":7055308,"line_start":791,"line_end":791,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055893,"byte_end":7055910,"line_start":813,"line_end":813,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"fn (&mut self, val: isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055442,"byte_end":7055515,"line_start":797,"line_end":797,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055520,"byte_end":7055538,"line_start":798,"line_end":798,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055543,"byte_end":7055546,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055551,"byte_end":7055565,"line_start":800,"line_end":800,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055570,"byte_end":7055573,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055578,"byte_end":7055585,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055590,"byte_end":7055621,"line_start":803,"line_end":803,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055626,"byte_end":7055674,"line_start":804,"line_end":804,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055679,"byte_end":7055682,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055687,"byte_end":7055728,"line_start":806,"line_end":806,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055733,"byte_end":7055768,"line_start":807,"line_end":807,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055773,"byte_end":7055803,"line_start":808,"line_end":808,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055808,"byte_end":7055830,"line_start":809,"line_end":809,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055835,"byte_end":7055842,"line_start":810,"line_end":810,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055847,"byte_end":7055869,"line_start":811,"line_end":811,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7055874,"byte_end":7055881,"line_start":812,"line_end":812,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056560,"byte_end":7056568,"line_start":837,"line_end":837,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056011,"byte_end":7056074,"line_start":818,"line_end":818,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056079,"byte_end":7056082,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056087,"byte_end":7056148,"line_start":820,"line_end":820,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056153,"byte_end":7056156,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056161,"byte_end":7056215,"line_start":822,"line_end":822,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056220,"byte_end":7056223,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056228,"byte_end":7056242,"line_start":824,"line_end":824,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056247,"byte_end":7056250,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056255,"byte_end":7056262,"line_start":826,"line_end":826,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056267,"byte_end":7056298,"line_start":827,"line_end":827,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056303,"byte_end":7056351,"line_start":828,"line_end":828,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056356,"byte_end":7056359,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056364,"byte_end":7056405,"line_start":830,"line_end":830,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056410,"byte_end":7056445,"line_start":831,"line_end":831,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056450,"byte_end":7056470,"line_start":832,"line_end":832,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056475,"byte_end":7056497,"line_start":833,"line_end":833,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056502,"byte_end":7056509,"line_start":834,"line_end":834,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056514,"byte_end":7056536,"line_start":835,"line_end":835,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056541,"byte_end":7056548,"line_start":836,"line_end":836,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057088,"byte_end":7057097,"line_start":857,"line_end":857,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"fn (&self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056666,"byte_end":7056729,"line_start":842,"line_end":842,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056734,"byte_end":7056737,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056742,"byte_end":7056756,"line_start":844,"line_end":844,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056761,"byte_end":7056764,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056769,"byte_end":7056776,"line_start":846,"line_end":846,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056781,"byte_end":7056829,"line_start":847,"line_end":847,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056834,"byte_end":7056855,"line_start":848,"line_end":848,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056860,"byte_end":7056895,"line_start":849,"line_end":849,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056900,"byte_end":7056931,"line_start":850,"line_end":850,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056936,"byte_end":7056967,"line_start":851,"line_end":851,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7056972,"byte_end":7057001,"line_start":852,"line_end":852,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057006,"byte_end":7057026,"line_start":853,"line_end":853,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057031,"byte_end":7057052,"line_start":854,"line_end":854,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057057,"byte_end":7057064,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057069,"byte_end":7057076,"line_start":856,"line_end":856,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057753,"byte_end":7057761,"line_start":882,"line_end":882,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"fn <T> (&self, upstream: T) -> FramedRead<T, LengthDelimitedCodec>","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057249,"byte_end":7057302,"line_start":864,"line_end":864,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057307,"byte_end":7057310,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057315,"byte_end":7057329,"line_start":866,"line_end":866,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057334,"byte_end":7057337,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057342,"byte_end":7057349,"line_start":868,"line_end":868,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057354,"byte_end":7057385,"line_start":869,"line_end":869,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057390,"byte_end":7057438,"line_start":870,"line_end":870,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057443,"byte_end":7057446,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057451,"byte_end":7057492,"line_start":872,"line_end":872,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057497,"byte_end":7057532,"line_start":873,"line_end":873,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057537,"byte_end":7057568,"line_start":874,"line_end":874,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057573,"byte_end":7057604,"line_start":875,"line_end":875,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057609,"byte_end":7057638,"line_start":876,"line_end":876,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057643,"byte_end":7057663,"line_start":877,"line_end":877,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057668,"byte_end":7057690,"line_start":878,"line_end":878,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057695,"byte_end":7057702,"line_start":879,"line_end":879,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057707,"byte_end":7057729,"line_start":880,"line_end":880,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057734,"byte_end":7057741,"line_start":881,"line_end":881,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058334,"byte_end":7058343,"line_start":903,"line_end":903,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"fn <T> (&self, inner: T) -> FramedWrite<T, LengthDelimitedCodec>","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057925,"byte_end":7057979,"line_start":889,"line_end":889,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057984,"byte_end":7057987,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7057992,"byte_end":7058006,"line_start":891,"line_end":891,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058011,"byte_end":7058014,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058019,"byte_end":7058026,"line_start":893,"line_end":893,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058031,"byte_end":7058063,"line_start":894,"line_end":894,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058068,"byte_end":7058118,"line_start":895,"line_end":895,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058123,"byte_end":7058167,"line_start":896,"line_end":896,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058172,"byte_end":7058207,"line_start":897,"line_end":897,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058212,"byte_end":7058243,"line_start":898,"line_end":898,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058248,"byte_end":7058271,"line_start":899,"line_end":899,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058276,"byte_end":7058283,"line_start":900,"line_end":900,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058288,"byte_end":7058310,"line_start":901,"line_end":901,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058315,"byte_end":7058322,"line_start":902,"line_end":902,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058952,"byte_end":7058962,"line_start":925,"line_end":925,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"fn <T> (&self, inner: T) -> Framed<T, LengthDelimitedCodec>","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058504,"byte_end":7058553,"line_start":910,"line_end":910,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058558,"byte_end":7058561,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058566,"byte_end":7058580,"line_start":912,"line_end":912,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058585,"byte_end":7058588,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058593,"byte_end":7058600,"line_start":914,"line_end":914,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058605,"byte_end":7058650,"line_start":915,"line_end":915,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058655,"byte_end":7058705,"line_start":916,"line_end":916,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058710,"byte_end":7058766,"line_start":917,"line_end":917,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058771,"byte_end":7058784,"line_start":918,"line_end":918,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058789,"byte_end":7058824,"line_start":919,"line_end":919,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058829,"byte_end":7058860,"line_start":920,"line_end":920,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058865,"byte_end":7058889,"line_start":921,"line_end":921,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058894,"byte_end":7058901,"line_start":922,"line_end":922,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058906,"byte_end":7058928,"line_start":923,"line_end":923,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7058933,"byte_end":7058940,"line_start":924,"line_end":924,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":521},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7060239,"byte_end":7060249,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524}],"decl_id":null,"docs":" A simple `Codec` implementation that splits up data into lines.\n","sig":null,"attributes":[{"value":"/ A simple `Codec` implementation that splits up data into lines.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7060098,"byte_end":7060165,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7061329,"byte_end":7061332,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"fn () -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7060930,"byte_end":7060990,"line_start":28,"line_end":28,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7060995,"byte_end":7060998,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7061003,"byte_end":7061013,"line_start":30,"line_end":30,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7061018,"byte_end":7061021,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7061026,"byte_end":7061098,"line_start":32,"line_end":32,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7061103,"byte_end":7061176,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7061181,"byte_end":7061248,"line_start":34,"line_end":34,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7061253,"byte_end":7061256,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: #method.new_with_max_length","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7061261,"byte_end":7061317,"line_start":36,"line_end":36,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7062447,"byte_end":7062466,"line_start":63,"line_end":63,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"fn (max_length: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7061490,"byte_end":7061550,"line_start":45,"line_end":45,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7061555,"byte_end":7061558,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7061563,"byte_end":7061626,"line_start":47,"line_end":47,"column_start":5,"column_end":68}},{"value":"/ [`LengthError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7061631,"byte_end":7061705,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7061710,"byte_end":7061777,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7061782,"byte_end":7061854,"line_start":50,"line_end":50,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7061859,"byte_end":7061929,"line_start":51,"line_end":51,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7061934,"byte_end":7061957,"line_start":52,"line_end":52,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7061962,"byte_end":7061965,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7061970,"byte_end":7061980,"line_start":54,"line_end":54,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7061985,"byte_end":7061988,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7061993,"byte_end":7062068,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7062073,"byte_end":7062146,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7062151,"byte_end":7062227,"line_start":58,"line_end":58,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7062232,"byte_end":7062305,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7062310,"byte_end":7062380,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7062385,"byte_end":7062388,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ [`LengthError`]: ../struct.LengthError","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7062393,"byte_end":7062435,"line_start":62,"line_end":62,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7063032,"byte_end":7063042,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7062594,"byte_end":7062644,"line_start":70,"line_end":70,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7062649,"byte_end":7062652,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7062657,"byte_end":7062664,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7062669,"byte_end":7062688,"line_start":73,"line_end":73,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7062693,"byte_end":7062731,"line_start":74,"line_end":74,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7062736,"byte_end":7062739,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7062744,"byte_end":7062778,"line_start":76,"line_end":76,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7062783,"byte_end":7062830,"line_start":77,"line_end":77,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7062835,"byte_end":7062842,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7062847,"byte_end":7062854,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7062859,"byte_end":7062897,"line_start":80,"line_end":80,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7062902,"byte_end":7062905,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7062910,"byte_end":7062963,"line_start":82,"line_end":82,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7062968,"byte_end":7063008,"line_start":83,"line_end":83,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7063013,"byte_end":7063020,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":556},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7067366,"byte_end":7067387,"line_start":204,"line_end":204,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7067320,"byte_end":7067361,"line_start":203,"line_end":203,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":558},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7067422,"byte_end":7067424,"line_start":206,"line_end":206,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7067393,"byte_end":7067417,"line_start":205,"line_end":205,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":555},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7067298,"byte_end":7067313,"line_start":202,"line_end":202,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"LinesCodecError::{MaxLineLengthExceeded, Io}","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":558}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7067216,"byte_end":7067271,"line_start":200,"line_end":200,"column_start":1,"column_end":56}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":6993351,"byte_end":6993361,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":6993512,"byte_end":6993522,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":6993842,"byte_end":6993852,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7003020,"byte_end":7003024,"line_start":46,"line_end":46,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7003295,"byte_end":7003301,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7004602,"byte_end":7004608,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7008824,"byte_end":7008830,"line_start":196,"line_end":196,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7009092,"byte_end":7009098,"line_start":208,"line_end":208,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7009876,"byte_end":7009882,"line_start":233,"line_end":233,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7010242,"byte_end":7010246,"line_start":248,"line_end":248,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7010384,"byte_end":7010388,"line_start":254,"line_end":254,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7010595,"byte_end":7010599,"line_start":264,"line_end":264,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7010994,"byte_end":7010998,"line_start":278,"line_end":278,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7011279,"byte_end":7011283,"line_start":288,"line_end":288,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7011500,"byte_end":7011504,"line_start":298,"line_end":298,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7012033,"byte_end":7012037,"line_start":316,"line_end":316,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7012409,"byte_end":7012413,"line_start":329,"line_end":329,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7013307,"byte_end":7013318,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7014322,"byte_end":7014332,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7014666,"byte_end":7014676,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7016168,"byte_end":7016178,"line_start":99,"line_end":99,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7016491,"byte_end":7016501,"line_start":112,"line_end":112,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7017591,"byte_end":7017601,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7018657,"byte_end":7018668,"line_start":199,"line_end":199,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7019186,"byte_end":7019197,"line_start":225,"line_end":225,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7022247,"byte_end":7022258,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7022597,"byte_end":7022608,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7024036,"byte_end":7024047,"line_start":95,"line_end":95,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7024765,"byte_end":7024776,"line_start":120,"line_end":120,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7025108,"byte_end":7025119,"line_start":137,"line_end":137,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7025962,"byte_end":7025974,"line_start":168,"line_end":168,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7026316,"byte_end":7026328,"line_start":186,"line_end":186,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7028686,"byte_end":7028698,"line_start":258,"line_end":258,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7029034,"byte_end":7029046,"line_start":271,"line_end":271,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7029181,"byte_end":7029193,"line_start":277,"line_end":277,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7029400,"byte_end":7029412,"line_start":287,"line_end":287,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7029807,"byte_end":7029819,"line_start":301,"line_end":301,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7030099,"byte_end":7030111,"line_start":311,"line_end":311,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7044051,"byte_end":7044071,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7047433,"byte_end":7047453,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7048333,"byte_end":7048353,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7049726,"byte_end":7049746,"line_start":594,"line_end":594,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7049839,"byte_end":7049846,"line_start":602,"line_end":602,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7059445,"byte_end":7059452,"line_start":943,"line_end":943,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7059578,"byte_end":7059603,"line_start":951,"line_end":951,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7059761,"byte_end":7059786,"line_start":957,"line_end":957,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7059921,"byte_end":7059946,"line_start":963,"line_end":963,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7060913,"byte_end":7060923,"line_start":27,"line_end":27,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7063429,"byte_end":7063439,"line_start":103,"line_end":103,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7066844,"byte_end":7066854,"line_start":182,"line_end":182,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7067147,"byte_end":7067157,"line_start":194,"line_end":194,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7067462,"byte_end":7067477,"line_start":209,"line_end":209,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7067759,"byte_end":7067774,"line_start":218,"line_end":218,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7067891,"byte_end":7067906,"line_start":224,"line_end":224,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":455,"byte_end":460,"line_start":21,"line_end":21,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6992872,"byte_end":6992888,"line_start":30,"line_end":30,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":342}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":6993351,"byte_end":6993361,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":6993512,"byte_end":6993522,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":453},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":6993842,"byte_end":6993852,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":453},"to":{"krate":0,"index":45}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7003020,"byte_end":7003024,"line_start":46,"line_end":46,"column_start":28,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":727},"to":{"krate":0,"index":80}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7003295,"byte_end":7003301,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7004602,"byte_end":7004608,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7008824,"byte_end":7008830,"line_start":196,"line_end":196,"column_start":23,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":772},"to":{"krate":18,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7009092,"byte_end":7009098,"line_start":208,"line_end":208,"column_start":27,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":772},"to":{"krate":31,"index":9}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7009876,"byte_end":7009882,"line_start":233,"line_end":233,"column_start":27,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":772},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7010242,"byte_end":7010246,"line_start":248,"line_end":248,"column_start":27,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":727},"to":{"krate":1,"index":2932}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7010384,"byte_end":7010388,"line_start":254,"line_end":254,"column_start":33,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":727},"to":{"krate":1,"index":3015}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7010595,"byte_end":7010599,"line_start":264,"line_end":264,"column_start":37,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":727},"to":{"krate":16,"index":215}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7010994,"byte_end":7010998,"line_start":278,"line_end":278,"column_start":43,"column_end":47},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":727},"to":{"krate":16,"index":186}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7011279,"byte_end":7011283,"line_start":288,"line_end":288,"column_start":29,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":727},"to":{"krate":1,"index":2991}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7011500,"byte_end":7011504,"line_start":298,"line_end":298,"column_start":39,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":727},"to":{"krate":16,"index":271}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7012033,"byte_end":7012037,"line_start":316,"line_end":316,"column_start":33,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":727},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7012409,"byte_end":7012413,"line_start":329,"line_end":329,"column_start":33,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":727},"to":{"krate":0,"index":45}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7013307,"byte_end":7013318,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":481},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7014322,"byte_end":7014332,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7014666,"byte_end":7014676,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7016168,"byte_end":7016178,"line_start":99,"line_end":99,"column_start":23,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":686},"to":{"krate":18,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7016491,"byte_end":7016501,"line_start":112,"line_end":112,"column_start":27,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":686},"to":{"krate":31,"index":9}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7017591,"byte_end":7017601,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":686},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7018657,"byte_end":7018668,"line_start":199,"line_end":199,"column_start":9,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7019186,"byte_end":7019197,"line_start":225,"line_end":225,"column_start":20,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":641},"to":{"krate":18,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7022247,"byte_end":7022258,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7022597,"byte_end":7022608,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7024036,"byte_end":7024047,"line_start":95,"line_end":95,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":600},"to":{"krate":31,"index":9}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7024765,"byte_end":7024776,"line_start":120,"line_end":120,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":600},"to":{"krate":18,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7025108,"byte_end":7025119,"line_start":137,"line_end":137,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7025962,"byte_end":7025974,"line_start":168,"line_end":168,"column_start":9,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7026316,"byte_end":7026328,"line_start":186,"line_end":186,"column_start":24,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":563},"to":{"krate":31,"index":9}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7028686,"byte_end":7028698,"line_start":258,"line_end":258,"column_start":30,"column_end":42},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":563},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7029034,"byte_end":7029046,"line_start":271,"line_end":271,"column_start":24,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":2932}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7029181,"byte_end":7029193,"line_start":277,"line_end":277,"column_start":30,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":3015}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7029400,"byte_end":7029412,"line_start":287,"line_end":287,"column_start":34,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":563},"to":{"krate":16,"index":215}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7029807,"byte_end":7029819,"line_start":301,"line_end":301,"column_start":40,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":563},"to":{"krate":16,"index":186}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7030099,"byte_end":7030111,"line_start":311,"line_end":311,"column_start":25,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":563},"to":{"krate":0,"index":80}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7044051,"byte_end":7044071,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7047433,"byte_end":7047453,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":505},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7048333,"byte_end":7048353,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":505},"to":{"krate":0,"index":45}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7049726,"byte_end":7049746,"line_start":594,"line_end":594,"column_start":18,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":505},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7049839,"byte_end":7049846,"line_start":602,"line_end":602,"column_start":6,"column_end":13},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7059445,"byte_end":7059452,"line_start":943,"line_end":943,"column_start":18,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":493},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7059578,"byte_end":7059603,"line_start":951,"line_end":951,"column_start":21,"column_end":46},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7059761,"byte_end":7059786,"line_start":957,"line_end":957,"column_start":23,"column_end":48},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7059921,"byte_end":7059946,"line_start":963,"line_end":963,"column_start":19,"column_end":44},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":364},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7060913,"byte_end":7060923,"line_start":27,"line_end":27,"column_start":6,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7063429,"byte_end":7063439,"line_start":103,"line_end":103,"column_start":18,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":521},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7066844,"byte_end":7066854,"line_start":182,"line_end":182,"column_start":18,"column_end":28},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":521},"to":{"krate":0,"index":45}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7067147,"byte_end":7067157,"line_start":194,"line_end":194,"column_start":18,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":521},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7067462,"byte_end":7067477,"line_start":209,"line_end":209,"column_start":23,"column_end":38},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":555},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7067759,"byte_end":7067774,"line_start":218,"line_end":218,"column_start":26,"column_end":41},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":555},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7067891,"byte_end":7067906,"line_start":224,"line_end":224,"column_start":28,"column_end":43},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":555},"to":{"krate":1,"index":1642}}]}