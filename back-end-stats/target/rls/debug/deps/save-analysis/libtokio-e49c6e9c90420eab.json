{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22","program":"/Users/raphael/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio","--edition=2018","/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"io-driver\"","--cfg","feature=\"io-util\"","--cfg","feature=\"iovec\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"libc\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"mio-uds\"","--cfg","feature=\"rt-core\"","--cfg","feature=\"rt-util\"","--cfg","feature=\"signal\"","--cfg","feature=\"signal-hook-registry\"","--cfg","feature=\"slab\"","--cfg","feature=\"stream\"","--cfg","feature=\"tcp\"","--cfg","feature=\"time\"","--cfg","feature=\"udp\"","--cfg","feature=\"uds\"","--cfg","feature=\"winapi\"","-C","metadata=e49c6e9c90420eab","-C","extra-filename=-e49c6e9c90420eab","--out-dir","/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps","-L","dependency=/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps","--extern","bytes=/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps/libbytes-f47f8b777ce6a079.rmeta","--extern","futures_core=/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps/libfutures_core-bf8dc9192655e407.rmeta","--extern","iovec=/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps/libiovec-f1f4848cd74e28c2.rmeta","--extern","lazy_static=/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps/liblazy_static-d0465f8245f3de30.rmeta","--extern","libc=/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps/liblibc-a676bc9ffa8ffde0.rmeta","--extern","memchr=/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps/libmemchr-0a45ae448192f329.rmeta","--extern","mio=/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps/libmio-08a3088308ef0c60.rmeta","--extern","mio_uds=/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps/libmio_uds-bbe2fb6b377b5d19.rmeta","--extern","pin_project_lite=/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps/libpin_project_lite-aec0e993be6a5b4f.rmeta","--extern","signal_hook_registry=/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps/libsignal_hook_registry-5c6febbf18616fef.rmeta","--extern","slab=/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps/libslab-ae871a178c254775.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/raphael/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps/libtokio-e49c6e9c90420eab.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[1456834847294998238,2357109537530833194]},"crate_root":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src","external_crates":[{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9505258173972014140,1687564053001788342]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","num":2,"id":{"name":"core","disambiguator":[11611887195329836898,18391061204127126749]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8031993392717489033,4124505603786489705]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15271802224688203332,8792150453795694033]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7165577602573969849,9858108452520037846]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[14698847031314625437,491468730102695142]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13330479813603739683,6803795581109914288]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18059772732427324572,13387991576644447952]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[10236583916794409636,10240650400930061727]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[11381542376919589428,1099759283771964623]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[362513579181741490,3555756610499304386]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1726896196391708128,17121846613634101866]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15657039231647705578,5960932578145670068]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7592225372802278695,9789656229435184476]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/try_join.rs","num":15,"id":{"name":"pin_project_lite","disambiguator":[10659178223203344312,2693552595390497793]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","num":16,"id":{"name":"bytes","disambiguator":[2270749683033126616,1484719321713887458]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","num":17,"id":{"name":"futures_core","disambiguator":[442992646704931613,17486116114397716243]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/platform.rs","num":18,"id":{"name":"mio","disambiguator":[9015430052538626756,1754656649108843891]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/platform.rs","num":19,"id":{"name":"net2","disambiguator":[6121241972712883102,11794295817372257133]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","num":20,"id":{"name":"libc","disambiguator":[12293655624372226261,1519600221282631606]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/platform.rs","num":21,"id":{"name":"cfg_if","disambiguator":[2882691960039253388,905378029989288621]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","num":22,"id":{"name":"iovec","disambiguator":[9761168185770761061,13861317068277600886]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","num":23,"id":{"name":"slab","disambiguator":[13684576324026575802,3564749835967240533]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/platform.rs","num":24,"id":{"name":"log","disambiguator":[7653832175408739471,5044327623104908239]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","num":25,"id":{"name":"lazy_static","disambiguator":[11980742202517877299,13303480249378304075]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","num":26,"id":{"name":"mio_uds","disambiguator":[11658889838562111976,7261679934135857006]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","num":27,"id":{"name":"memchr","disambiguator":[4297358035126816584,2506496304721642125]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","num":28,"id":{"name":"signal_hook_registry","disambiguator":[11870527098951522236,15661611945612543844]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","num":29,"id":{"name":"arc_swap","disambiguator":[11110819832243678890,7212059469733540171]}}],"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":0,"byte_end":15827,"line_start":1,"line_end":436,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":8293},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":30953,"byte_end":30959,"line_start":6,"line_end":6,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":30012},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":30979,"byte_end":30982,"line_start":7,"line_end":7,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":32507},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":31003,"byte_end":31007,"line_start":8,"line_end":8,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31111,"byte_end":31121,"line_start":6,"line_end":6,"column_start":22,"column_end":32},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":874},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31123,"byte_end":31132,"line_start":6,"line_end":6,"column_start":34,"column_end":43},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31166,"byte_end":31173,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45085,"byte_end":45097,"line_start":187,"line_end":187,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45143,"byte_end":45152,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45197,"byte_end":45206,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45253,"byte_end":45263,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1179},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45359,"byte_end":45370,"line_start":203,"line_end":203,"column_start":27,"column_end":38},"alias_span":null,"name":"PollEvented","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1183},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45421,"byte_end":45433,"line_start":206,"line_end":206,"column_start":27,"column_end":39},"alias_span":null,"name":"Registration","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1308},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45665,"byte_end":45670,"line_start":222,"line_end":222,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1302},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45672,"byte_end":45680,"line_start":222,"line_end":222,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1305},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45682,"byte_end":45691,"line_start":222,"line_end":222,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1310},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45744,"byte_end":45748,"line_start":225,"line_end":225,"column_start":25,"column_end":29},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2106},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45804,"byte_end":45808,"line_start":229,"line_end":229,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2128},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45810,"byte_end":45815,"line_start":229,"line_end":229,"column_start":15,"column_end":20},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2354},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45817,"byte_end":45823,"line_start":229,"line_end":229,"column_start":22,"column_end":28},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2369},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45825,"byte_end":45829,"line_start":229,"line_end":229,"column_start":30,"column_end":34},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2000},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45831,"byte_end":45846,"line_start":229,"line_end":229,"column_start":36,"column_end":51},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2008},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45848,"byte_end":45860,"line_start":229,"line_end":229,"column_start":53,"column_end":65},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1389},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45862,"byte_end":45874,"line_start":229,"line_end":229,"column_start":67,"column_end":79},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2060},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45876,"byte_end":45889,"line_start":229,"line_end":229,"column_start":81,"column_end":94},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":9726},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45899,"byte_end":45908,"line_start":230,"line_end":230,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":9712},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45910,"byte_end":45919,"line_start":230,"line_end":230,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":9649},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45921,"byte_end":45930,"line_start":230,"line_end":230,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2110},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45932,"byte_end":45936,"line_start":230,"line_end":230,"column_start":42,"column_end":46},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2126},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45938,"byte_end":45943,"line_start":230,"line_end":230,"column_start":48,"column_end":53},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":9577},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45945,"byte_end":45950,"line_start":230,"line_end":230,"column_start":55,"column_end":60},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2355},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45952,"byte_end":45958,"line_start":230,"line_end":230,"column_start":62,"column_end":68},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2367},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45960,"byte_end":45964,"line_start":230,"line_end":230,"column_start":70,"column_end":74},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":8743},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45966,"byte_end":45971,"line_start":230,"line_end":230,"column_start":76,"column_end":81},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":8652},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45973,"byte_end":45977,"line_start":230,"line_end":230,"column_start":83,"column_end":87},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2385},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46028,"byte_end":46041,"line_start":234,"line_end":234,"column_start":24,"column_end":37},"alias_span":null,"name":"stream_reader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":8697},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46043,"byte_end":46055,"line_start":234,"line_end":234,"column_start":39,"column_end":51},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":2532},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46210,"byte_end":46215,"line_start":239,"line_end":239,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":6687},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46217,"byte_end":46226,"line_start":239,"line_end":239,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":2530},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46228,"byte_end":46234,"line_start":239,"line_end":239,"column_start":41,"column_end":47},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":319},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72675,"byte_end":72688,"line_start":26,"line_end":26,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":2848},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8549046,"byte_end":8549054,"line_start":7,"line_end":7,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":2582}},{"kind":"Use","ref_id":{"krate":0,"index":2854},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8549084,"byte_end":8549092,"line_start":10,"line_end":10,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":2582}},{"kind":"Use","ref_id":{"krate":0,"index":2861},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8549094,"byte_end":8549103,"line_start":10,"line_end":10,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":2582}},{"kind":"Use","ref_id":{"krate":0,"index":2868},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8549146,"byte_end":8549159,"line_start":13,"line_end":13,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":2582}},{"kind":"Use","ref_id":{"krate":0,"index":2872},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8549161,"byte_end":8549175,"line_start":13,"line_end":13,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":2582}},{"kind":"Use","ref_id":{"krate":0,"index":2877},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8549177,"byte_end":8549189,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2582}},{"kind":"Use","ref_id":{"krate":0,"index":2846},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72819,"byte_end":72830,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":2883},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72857,"byte_end":72866,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3019},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":8608844,"byte_end":8608852,"line_start":7,"line_end":7,"column_start":17,"column_end":25},"alias_span":null,"name":"RecvHalf","value":"","parent":{"krate":0,"index":2885}},{"kind":"Use","ref_id":{"krate":0,"index":3024},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":8608854,"byte_end":8608866,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2885}},{"kind":"Use","ref_id":{"krate":0,"index":3014},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":8608868,"byte_end":8608876,"line_start":7,"line_end":7,"column_start":41,"column_end":49},"alias_span":null,"name":"SendHalf","value":"","parent":{"krate":0,"index":2885}},{"kind":"Use","ref_id":{"krate":0,"index":3012},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72924,"byte_end":72933,"line_start":41,"line_end":41,"column_start":26,"column_end":35},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3268},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":8629932,"byte_end":8629940,"line_start":6,"line_end":6,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":3030}},{"kind":"Use","ref_id":{"krate":0,"index":3276},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":8630035,"byte_end":8630043,"line_start":12,"line_end":12,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3030}},{"kind":"Use","ref_id":{"krate":0,"index":3283},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":8630045,"byte_end":8630054,"line_start":12,"line_end":12,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3030}},{"kind":"Use","ref_id":{"krate":0,"index":3292},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":8630143,"byte_end":8630148,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"alias_span":null,"name":"UCred","value":"","parent":{"krate":0,"index":3030}},{"kind":"Use","ref_id":{"krate":0,"index":3266},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72995,"byte_end":73007,"line_start":46,"line_end":46,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3274},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":73037,"byte_end":73049,"line_start":47,"line_end":47,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3290},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":73077,"byte_end":73087,"line_start":48,"line_end":48,"column_start":27,"column_end":37},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105488,"byte_end":105492,"line_start":16,"line_end":16,"column_start":21,"column_end":25},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105494,"byte_end":105506,"line_start":16,"line_end":16,"column_start":27,"column_end":39},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105508,"byte_end":105517,"line_start":16,"line_end":16,"column_start":41,"column_end":50},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105519,"byte_end":105529,"line_start":16,"line_end":16,"column_start":52,"column_end":62},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":2000},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105594,"byte_end":105609,"line_start":20,"line_end":20,"column_start":25,"column_end":40},"alias_span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105613,"byte_end":105614,"line_start":20,"line_end":20,"column_start":44,"column_end":45},"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":2008},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105616,"byte_end":105628,"line_start":20,"line_end":20,"column_start":47,"column_end":59},"alias_span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105632,"byte_end":105633,"line_start":20,"line_end":20,"column_start":63,"column_end":64},"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":1389},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105635,"byte_end":105647,"line_start":20,"line_end":20,"column_start":66,"column_end":78},"alias_span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105651,"byte_end":105652,"line_start":20,"line_end":20,"column_start":82,"column_end":83},"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":2060},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105654,"byte_end":105667,"line_start":20,"line_end":20,"column_start":85,"column_end":98},"alias_span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105671,"byte_end":105672,"line_start":20,"line_end":20,"column_start":102,"column_end":103},"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":592},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113198,"byte_end":113205,"line_start":209,"line_end":209,"column_start":24,"column_end":31},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":562}},{"kind":"Use","ref_id":{"krate":0,"index":4043},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113290,"byte_end":113296,"line_start":215,"line_end":215,"column_start":24,"column_end":30},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":562}},{"kind":"Use","ref_id":{"krate":0,"index":660},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113298,"byte_end":113313,"line_start":215,"line_end":215,"column_start":32,"column_end":47},"alias_span":null,"name":"TryCurrentError","value":"","parent":{"krate":0,"index":562}},{"kind":"Use","ref_id":{"krate":0,"index":4134},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8728513,"byte_end":8728519,"line_start":47,"line_end":47,"column_start":17,"column_end":23},"alias_span":null,"name":"ctrl_c","value":"","parent":{"krate":0,"index":4129}},{"kind":"Use","ref_id":{"krate":0,"index":4389},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8765423,"byte_end":8765433,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"alias_span":null,"name":"FromStream","value":"","parent":{"krate":0,"index":4311}},{"kind":"Use","ref_id":{"krate":0,"index":4481},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8765463,"byte_end":8765468,"line_start":21,"line_end":21,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":4311}},{"kind":"Use","ref_id":{"krate":0,"index":4921},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8765470,"byte_end":8765475,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":4311}},{"kind":"Use","ref_id":{"krate":0,"index":4582},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8765641,"byte_end":8765645,"line_start":36,"line_end":36,"column_start":16,"column_end":20},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":4311}},{"kind":"Use","ref_id":{"krate":0,"index":4928},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8765647,"byte_end":8765651,"line_start":36,"line_end":36,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":4311}},{"kind":"Use","ref_id":{"krate":0,"index":4672},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8765761,"byte_end":8765765,"line_start":48,"line_end":48,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":4311}},{"kind":"Use","ref_id":{"krate":0,"index":4942},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8765767,"byte_end":8765771,"line_start":48,"line_end":48,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":4311}},{"kind":"Use","ref_id":{"krate":0,"index":4695},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8765806,"byte_end":8765813,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":4311}},{"kind":"Use","ref_id":{"krate":0,"index":4948},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8765815,"byte_end":8765822,"line_start":51,"line_end":51,"column_start":28,"column_end":35},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":4311}},{"kind":"Use","ref_id":{"krate":0,"index":4955},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8765862,"byte_end":8765871,"line_start":54,"line_end":54,"column_start":21,"column_end":30},"alias_span":null,"name":"StreamMap","value":"","parent":{"krate":0,"index":4311}},{"kind":"Use","ref_id":{"krate":17,"index":68},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766163,"byte_end":8766169,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":4311}},{"kind":"Use","ref_id":{"krate":0,"index":3963},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035843,"byte_end":9035852,"line_start":227,"line_end":227,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":3965},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035854,"byte_end":9035864,"line_start":227,"line_end":227,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":5915},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035902,"byte_end":9035907,"line_start":230,"line_end":230,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":5917},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035952,"byte_end":9035961,"line_start":233,"line_end":233,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":6077},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9036016,"byte_end":9036027,"line_start":238,"line_end":238,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":6068},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9036029,"byte_end":9036037,"line_start":238,"line_end":238,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":6020},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9036085,"byte_end":9036093,"line_start":241,"line_end":241,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":5915},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14562,"byte_end":14567,"line_start":389,"line_end":389,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6577},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069596,"byte_end":9069606,"line_start":101,"line_end":101,"column_start":22,"column_end":32},"alias_span":null,"name":"DelayQueue","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":6183},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069636,"byte_end":9069645,"line_start":104,"line_end":104,"column_start":17,"column_end":26},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":6182},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069647,"byte_end":9069658,"line_start":104,"line_end":104,"column_start":28,"column_end":39},"alias_span":null,"name":"delay_until","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":6619},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069660,"byte_end":9069665,"line_start":104,"line_end":104,"column_start":41,"column_end":46},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":6676},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069719,"byte_end":9069724,"line_start":109,"line_end":109,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":6688},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069763,"byte_end":9069770,"line_start":112,"line_end":112,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":6436},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069806,"byte_end":9069814,"line_start":115,"line_end":115,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":6437},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069816,"byte_end":9069827,"line_start":115,"line_end":115,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":6711},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069829,"byte_end":9069837,"line_start":115,"line_end":115,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":6464},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069887,"byte_end":9069894,"line_start":119,"line_end":119,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":6466},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069896,"byte_end":9069906,"line_start":119,"line_end":119,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":6716},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069908,"byte_end":9069915,"line_start":119,"line_end":119,"column_start":40,"column_end":47},"alias_span":null,"name":"Elapsed","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":7117},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069917,"byte_end":9069924,"line_start":119,"line_end":119,"column_start":49,"column_end":56},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":6738},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069983,"byte_end":9069991,"line_start":123,"line_end":123,"column_start":24,"column_end":32},"alias_span":null,"name":"throttle","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":7071},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069993,"byte_end":9070001,"line_start":123,"line_end":123,"column_start":34,"column_end":42},"alias_span":null,"name":"Throttle","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":2,"index":32371},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9070110,"byte_end":9070118,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":6092}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":0,"byte_end":15827,"line_start":1,"line_end":436,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":83},{"krate":0,"index":177},{"krate":0,"index":308},{"krate":0,"index":373},{"krate":0,"index":509},{"krate":0,"index":556},{"krate":0,"index":562},{"krate":0,"index":736},{"krate":0,"index":4129},{"krate":0,"index":4311},{"krate":0,"index":5000},{"krate":0,"index":5898},{"krate":0,"index":5899},{"krate":0,"index":6092},{"krate":0,"index":755}],"decl_id":null,"docs":" A runtime for writing reliable, asynchronous, and slim applications.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":56,"byte_end":168,"line_start":2,"line_end":6,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":169,"byte_end":275,"line_start":7,"line_end":12,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":276,"byte_end":319,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"! A runtime for writing reliable, asynchronous, and slim applications.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":518,"byte_end":590,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":591,"byte_end":594,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":595,"byte_end":675,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"! applications with the Rust programming language. At a high level, it","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":676,"byte_end":748,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"! provides a few major components:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":749,"byte_end":785,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":786,"byte_end":789,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":790,"byte_end":857,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"!   [synchronization primitives and channels][sync] and [timeouts, delays, and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":858,"byte_end":938,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"!   intervals][time].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":939,"byte_end":962,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"! * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":963,"byte_end":1050,"line_start":30,"line_end":30,"column_start":1,"column_end":88}},{"value":"!   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1051,"byte_end":1124,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"! * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1125,"byte_end":1203,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"!   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1204,"byte_end":1284,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"!   IOCP, etc...), and a high performance timer.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1285,"byte_end":1335,"line_start":34,"line_end":34,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1336,"byte_end":1339,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! Guide level documentation is found on the [website].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1340,"byte_end":1396,"line_start":36,"line_end":36,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1397,"byte_end":1400,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! [tasks]: #working-with-tasks","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1401,"byte_end":1433,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"! [sync]: crate::sync","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1434,"byte_end":1457,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"! [time]: crate::time","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1458,"byte_end":1481,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"! [io]: #asynchronous-io","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1482,"byte_end":1508,"line_start":41,"line_end":41,"column_start":1,"column_end":27}},{"value":"! [net]: crate::net","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1509,"byte_end":1530,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"! [fs]: crate::fs","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1531,"byte_end":1550,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"! [process]: crate::process","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1551,"byte_end":1580,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"! [signal]: crate::signal","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1581,"byte_end":1608,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"! [fs]: crate::fs","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1609,"byte_end":1628,"line_start":46,"line_end":46,"column_start":1,"column_end":20}},{"value":"! [runtime]: crate::runtime","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1629,"byte_end":1658,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"! [website]: https://tokio.rs/docs/overview/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1659,"byte_end":1705,"line_start":48,"line_end":48,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1706,"byte_end":1709,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! # A Tour of Tokio","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1710,"byte_end":1731,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1732,"byte_end":1735,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1736,"byte_end":1815,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"! essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1816,"byte_end":1889,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"! section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1890,"byte_end":1969,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"! their uses.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1970,"byte_end":1985,"line_start":55,"line_end":55,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1986,"byte_end":1989,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! The easiest way to get started is to enable all features. Do this by","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1990,"byte_end":2062,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"! enabling the `full` feature flag:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2063,"byte_end":2100,"line_start":58,"line_end":58,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2101,"byte_end":2104,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2105,"byte_end":2116,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2117,"byte_end":2169,"line_start":61,"line_end":61,"column_start":1,"column_end":53}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2170,"byte_end":2177,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2178,"byte_end":2181,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! ## Feature flags","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2182,"byte_end":2202,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2203,"byte_end":2206,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2207,"byte_end":2288,"line_start":66,"line_end":66,"column_start":1,"column_end":82}},{"value":"! is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2289,"byte_end":2367,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"! does not enable any features but allows one to enable a subset for their use","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2368,"byte_end":2448,"line_start":68,"line_end":68,"column_start":1,"column_end":81}},{"value":"! case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2449,"byte_end":2526,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"! above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2527,"byte_end":2610,"line_start":70,"line_end":70,"column_start":1,"column_end":84}},{"value":"! that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2611,"byte_end":2688,"line_start":71,"line_end":71,"column_start":1,"column_end":78}},{"value":"! recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2689,"byte_end":2776,"line_start":72,"line_end":72,"column_start":1,"column_end":88}},{"value":"! Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2777,"byte_end":2858,"line_start":73,"line_end":73,"column_start":1,"column_end":82}},{"value":"! need.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2859,"byte_end":2868,"line_start":74,"line_end":74,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2869,"byte_end":2872,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! - `full`: Enables all Tokio public API features listed below.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2873,"byte_end":2938,"line_start":76,"line_end":76,"column_start":1,"column_end":66}},{"value":"! - `rt-core`: Enables `tokio::spawn` and the basic (single-threaded) scheduler.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2939,"byte_end":3021,"line_start":77,"line_end":77,"column_start":1,"column_end":83}},{"value":"! - `rt-threaded`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3022,"byte_end":3104,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"! - `rt-util`: Enables non-scheduler utilities.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3105,"byte_end":3154,"line_start":79,"line_end":79,"column_start":1,"column_end":50}},{"value":"! - `io-driver`: Enables the `mio` based IO driver.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3155,"byte_end":3208,"line_start":80,"line_end":80,"column_start":1,"column_end":54}},{"value":"! - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3209,"byte_end":3260,"line_start":81,"line_end":81,"column_start":1,"column_end":52}},{"value":"! - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3261,"byte_end":3321,"line_start":82,"line_end":82,"column_start":1,"column_end":61}},{"value":"! - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3322,"byte_end":3412,"line_start":83,"line_end":83,"column_start":1,"column_end":91}},{"value":"! - `tcp`: Enables all `tokio::net::tcp` types.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3413,"byte_end":3462,"line_start":84,"line_end":84,"column_start":1,"column_end":50}},{"value":"! - `udp`: Enables all `tokio::net::udp` types.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3463,"byte_end":3512,"line_start":85,"line_end":85,"column_start":1,"column_end":50}},{"value":"! - `uds`: Enables all `tokio::net::unix` types.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3513,"byte_end":3563,"line_start":86,"line_end":86,"column_start":1,"column_end":51}},{"value":"! - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3564,"byte_end":3641,"line_start":87,"line_end":87,"column_start":1,"column_end":78}},{"value":"! the built in timer.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3642,"byte_end":3665,"line_start":88,"line_end":88,"column_start":1,"column_end":24}},{"value":"! - `process`: Enables `tokio::process` types.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3666,"byte_end":3714,"line_start":89,"line_end":89,"column_start":1,"column_end":49}},{"value":"! - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3715,"byte_end":3784,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"! - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3785,"byte_end":3831,"line_start":91,"line_end":91,"column_start":1,"column_end":47}},{"value":"! - `stream`: Enables optional `Stream` implementations for types within Tokio.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3832,"byte_end":3913,"line_start":92,"line_end":92,"column_start":1,"column_end":82}},{"value":"! - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3914,"byte_end":3964,"line_start":93,"line_end":93,"column_start":1,"column_end":51}},{"value":"! - `fs`: Enables `tokio::fs` types.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3965,"byte_end":4003,"line_start":94,"line_end":94,"column_start":1,"column_end":39}},{"value":"! - `dns`: Enables async `tokio::net::ToSocketAddrs`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4004,"byte_end":4059,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"! - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4060,"byte_end":4138,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"! - `blocking`: Enables `block_in_place` and `spawn_blocking`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4139,"byte_end":4203,"line_start":97,"line_end":97,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4204,"byte_end":4207,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4208,"byte_end":4290,"line_start":99,"line_end":99,"column_start":1,"column_end":83}},{"value":"! always available._","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4291,"byte_end":4313,"line_start":100,"line_end":100,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4314,"byte_end":4317,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"! ### Internal features","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4318,"byte_end":4343,"line_start":102,"line_end":102,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4344,"byte_end":4347,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"! These features do not expose any new API, but influence internal","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4348,"byte_end":4416,"line_start":104,"line_end":104,"column_start":1,"column_end":69}},{"value":"! implementation aspects of Tokio, and can pull in additional","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4417,"byte_end":4480,"line_start":105,"line_end":105,"column_start":1,"column_end":64}},{"value":"! dependencies. They are not included in `full`:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4481,"byte_end":4531,"line_start":106,"line_end":106,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4532,"byte_end":4535,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4536,"byte_end":4615,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"! synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4616,"byte_end":4693,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"! _parking_lot_ release in use.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4694,"byte_end":4727,"line_start":110,"line_end":110,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4728,"byte_end":4731,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"! [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4732,"byte_end":4829,"line_start":112,"line_end":112,"column_start":1,"column_end":98}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4830,"byte_end":4833,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"! ### Authoring applications","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4834,"byte_end":4864,"line_start":114,"line_end":114,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4865,"byte_end":4868,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"! Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4869,"byte_end":4950,"line_start":116,"line_end":116,"column_start":1,"column_end":82}},{"value":"! worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4951,"byte_end":5036,"line_start":117,"line_end":117,"column_start":1,"column_end":86}},{"value":"! going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5037,"byte_end":5121,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"! building your application.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5122,"byte_end":5152,"line_start":119,"line_end":119,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5153,"byte_end":5156,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"! #### Example","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5157,"byte_end":5173,"line_start":121,"line_end":121,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5174,"byte_end":5177,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"! This example shows the quickest way to get started with Tokio.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5178,"byte_end":5244,"line_start":123,"line_end":123,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5245,"byte_end":5248,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5249,"byte_end":5260,"line_start":125,"line_end":125,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5261,"byte_end":5313,"line_start":126,"line_end":126,"column_start":1,"column_end":53}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5314,"byte_end":5321,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5322,"byte_end":5325,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! ### Authoring libraries","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5326,"byte_end":5353,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5354,"byte_end":5357,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"! As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5358,"byte_end":5437,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"! that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5438,"byte_end":5520,"line_start":132,"line_end":132,"column_start":1,"column_end":83}},{"value":"! the features you need. This allows users to pick up your crate without having","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5521,"byte_end":5602,"line_start":133,"line_end":133,"column_start":1,"column_end":82}},{"value":"! to enable unnecessary features.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5603,"byte_end":5638,"line_start":134,"line_end":134,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5639,"byte_end":5642,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! #### Example","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5643,"byte_end":5659,"line_start":136,"line_end":136,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5660,"byte_end":5663,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"! This example shows how you may want to import features for a library that just","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5664,"byte_end":5746,"line_start":138,"line_end":138,"column_start":1,"column_end":83}},{"value":"! needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5747,"byte_end":5797,"line_start":139,"line_end":139,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5798,"byte_end":5801,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5802,"byte_end":5813,"line_start":141,"line_end":141,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"0.2\", features = [\"rt-core\", \"tcp\"] }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5814,"byte_end":5876,"line_start":142,"line_end":142,"column_start":1,"column_end":63}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5877,"byte_end":5884,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5885,"byte_end":5888,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"! ## Working With Tasks","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5889,"byte_end":5914,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5915,"byte_end":5918,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5919,"byte_end":5995,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"! units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5996,"byte_end":6079,"line_start":148,"line_end":148,"column_start":1,"column_end":84}},{"value":"! important tools for working with tasks:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6080,"byte_end":6123,"line_start":149,"line_end":149,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6124,"byte_end":6127,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"! * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6128,"byte_end":6207,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"!   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6208,"byte_end":6291,"line_start":152,"line_end":152,"column_start":1,"column_end":84}},{"value":"! * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6292,"byte_end":6370,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"!   task context.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6371,"byte_end":6390,"line_start":154,"line_end":154,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6391,"byte_end":6394,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"! The [`tokio::task`] module is present only when the \"rt-core\" feature flag","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6395,"byte_end":6473,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"! is enabled.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6474,"byte_end":6489,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6490,"byte_end":6493,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"! [tasks]: task/index.html#what-are-tasks","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6494,"byte_end":6537,"line_start":159,"line_end":159,"column_start":1,"column_end":44}},{"value":"! [`tokio::task`]: crate::task","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6538,"byte_end":6570,"line_start":160,"line_end":160,"column_start":1,"column_end":33}},{"value":"! [`spawn`]: crate::task::spawn()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6571,"byte_end":6606,"line_start":161,"line_end":161,"column_start":1,"column_end":36}},{"value":"! [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6607,"byte_end":6650,"line_start":162,"line_end":162,"column_start":1,"column_end":44}},{"value":"! [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6651,"byte_end":6704,"line_start":163,"line_end":163,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6705,"byte_end":6708,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"! The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6709,"byte_end":6787,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"! needing to communicate or share data. These include:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6788,"byte_end":6844,"line_start":166,"line_end":166,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6845,"byte_end":6848,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"! * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6849,"byte_end":6922,"line_start":168,"line_end":168,"column_start":1,"column_end":74}},{"value":"!   between tasks,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6923,"byte_end":6943,"line_start":169,"line_end":169,"column_start":1,"column_end":21}},{"value":"! * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6944,"byte_end":7019,"line_start":170,"line_end":170,"column_start":1,"column_end":76}},{"value":"!   value,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7020,"byte_end":7032,"line_start":171,"line_end":171,"column_start":1,"column_end":13}},{"value":"! * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7033,"byte_end":7113,"line_start":172,"line_end":172,"column_start":1,"column_end":81}},{"value":"!   beginning a computation.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7114,"byte_end":7144,"line_start":173,"line_end":173,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7145,"byte_end":7148,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"! The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7149,"byte_end":7225,"line_start":175,"line_end":175,"column_start":1,"column_end":77}},{"value":"! enabled.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7226,"byte_end":7238,"line_start":176,"line_end":176,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7239,"byte_end":7242,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"! [`tokio::sync`]: crate::sync","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7243,"byte_end":7275,"line_start":178,"line_end":178,"column_start":1,"column_end":33}},{"value":"! [`Mutex`]: crate::sync::Mutex","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7276,"byte_end":7309,"line_start":179,"line_end":179,"column_start":1,"column_end":34}},{"value":"! [`Barrier`]: crate::sync::Barrier","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7310,"byte_end":7347,"line_start":180,"line_end":180,"column_start":1,"column_end":38}},{"value":"! [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7348,"byte_end":7385,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"! [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7386,"byte_end":7417,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"! [`watch`]: crate::sync::watch","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7418,"byte_end":7451,"line_start":183,"line_end":183,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7452,"byte_end":7455,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"! The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7456,"byte_end":7527,"line_start":185,"line_end":185,"column_start":1,"column_end":72}},{"value":"! scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7528,"byte_end":7608,"line_start":186,"line_end":186,"column_start":1,"column_end":81}},{"value":"! tasks, [delaying][delay] work to run in the future, or [repeating an operation at an","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7609,"byte_end":7697,"line_start":187,"line_end":187,"column_start":1,"column_end":89}},{"value":"! interval][interval].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7698,"byte_end":7722,"line_start":188,"line_end":188,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7723,"byte_end":7726,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"! In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7727,"byte_end":7802,"line_start":190,"line_end":190,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7803,"byte_end":7806,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"! [`tokio::time`]: crate::time","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7807,"byte_end":7839,"line_start":192,"line_end":192,"column_start":1,"column_end":33}},{"value":"! [delay]: crate::time::delay_for()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7840,"byte_end":7877,"line_start":193,"line_end":193,"column_start":1,"column_end":38}},{"value":"! [interval]: crate::time::interval()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7878,"byte_end":7917,"line_start":194,"line_end":194,"column_start":1,"column_end":40}},{"value":"! [timeout]: crate::time::timeout()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7918,"byte_end":7955,"line_start":195,"line_end":195,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7956,"byte_end":7959,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"! Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7960,"byte_end":8038,"line_start":197,"line_end":197,"column_start":1,"column_end":79}},{"value":"! applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8039,"byte_end":8123,"line_start":198,"line_end":198,"column_start":1,"column_end":85}},{"value":"! Tokio runtime. In use-cases where manual control over the runtime is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8124,"byte_end":8196,"line_start":199,"line_end":199,"column_start":1,"column_end":73}},{"value":"! required, the [`tokio::runtime`] module provides APIs for configuring and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8197,"byte_end":8274,"line_start":200,"line_end":200,"column_start":1,"column_end":78}},{"value":"! managing runtimes.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8275,"byte_end":8297,"line_start":201,"line_end":201,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8298,"byte_end":8301,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"! Using the runtime requires the \"rt-core\" or \"rt-threaded\" feature flags, to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8302,"byte_end":8381,"line_start":203,"line_end":203,"column_start":1,"column_end":80}},{"value":"! enable the basic [single-threaded scheduler][rt-core] and the [thread-pool","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8382,"byte_end":8460,"line_start":204,"line_end":204,"column_start":1,"column_end":79}},{"value":"! scheduler][rt-threaded], respectively. See the [`runtime` module","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8461,"byte_end":8529,"line_start":205,"line_end":205,"column_start":1,"column_end":69}},{"value":"! documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8530,"byte_end":8608,"line_start":206,"line_end":206,"column_start":1,"column_end":79}},{"value":"! flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8609,"byte_end":8679,"line_start":207,"line_end":207,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8680,"byte_end":8683,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"! [main]: attr.main.html","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8684,"byte_end":8710,"line_start":209,"line_end":209,"column_start":1,"column_end":27}},{"value":"! [`tokio::runtime`]: crate::runtime","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8711,"byte_end":8749,"line_start":210,"line_end":210,"column_start":1,"column_end":39}},{"value":"! [`Builder`]: crate::runtime::Builder","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8750,"byte_end":8790,"line_start":211,"line_end":211,"column_start":1,"column_end":41}},{"value":"! [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8791,"byte_end":8831,"line_start":212,"line_end":212,"column_start":1,"column_end":41}},{"value":"! [rt-core]: runtime/index.html#basic-scheduler","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8832,"byte_end":8881,"line_start":213,"line_end":213,"column_start":1,"column_end":50}},{"value":"! [rt-threaded]: runtime/index.html#threaded-scheduler","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8882,"byte_end":8938,"line_start":214,"line_end":214,"column_start":1,"column_end":57}},{"value":"! [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8939,"byte_end":8994,"line_start":215,"line_end":215,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8995,"byte_end":8998,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"! ## CPU-bound tasks and blocking code","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8999,"byte_end":9039,"line_start":217,"line_end":217,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9040,"byte_end":9043,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"! Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9044,"byte_end":9123,"line_start":219,"line_end":219,"column_start":1,"column_end":80}},{"value":"! swapping the currently running task on each thread. However, this kind of","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9124,"byte_end":9201,"line_start":220,"line_end":220,"column_start":1,"column_end":78}},{"value":"! swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9202,"byte_end":9282,"line_start":221,"line_end":221,"column_start":1,"column_end":81}},{"value":"! without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9283,"byte_end":9357,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"! combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9358,"byte_end":9437,"line_start":223,"line_end":223,"column_start":1,"column_end":80}},{"value":"! threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9438,"byte_end":9515,"line_start":224,"line_end":224,"column_start":1,"column_end":78}},{"value":"! will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9516,"byte_end":9589,"line_start":225,"line_end":225,"column_start":1,"column_end":74}},{"value":"! spawned on demand, and can be used to run blocking code that would otherwise","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9590,"byte_end":9670,"line_start":226,"line_end":226,"column_start":1,"column_end":81}},{"value":"! block other tasks from running. Since it is not possible for Tokio to swap","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9671,"byte_end":9749,"line_start":227,"line_end":227,"column_start":1,"column_end":79}},{"value":"! out blocking tasks, like it can do with asynchronous code, the upper limit","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9750,"byte_end":9828,"line_start":228,"line_end":228,"column_start":1,"column_end":79}},{"value":"! on the number of blocking threads is very large. These limits can be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9829,"byte_end":9901,"line_start":229,"line_end":229,"column_start":1,"column_end":73}},{"value":"! configured on the [`Builder`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9902,"byte_end":9936,"line_start":230,"line_end":230,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9937,"byte_end":9940,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"! To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9941,"byte_end":10018,"line_start":232,"line_end":232,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10019,"byte_end":10022,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"! [`Builder`]: crate::runtime::Builder","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10023,"byte_end":10063,"line_start":234,"line_end":234,"column_start":1,"column_end":41}},{"value":"! [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10064,"byte_end":10117,"line_start":235,"line_end":235,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10118,"byte_end":10121,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10122,"byte_end":10129,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10130,"byte_end":10148,"line_start":238,"line_end":238,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10149,"byte_end":10170,"line_start":239,"line_end":239,"column_start":1,"column_end":22}},{"value":"!     // This is running on a core thread.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10171,"byte_end":10215,"line_start":240,"line_end":240,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10216,"byte_end":10219,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"!     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10220,"byte_end":10280,"line_start":242,"line_end":242,"column_start":1,"column_end":61}},{"value":"!         // This is running on a blocking thread.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10281,"byte_end":10333,"line_start":243,"line_end":243,"column_start":1,"column_end":53}},{"value":"!         // Blocking here is ok.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10334,"byte_end":10369,"line_start":244,"line_end":244,"column_start":1,"column_end":36}},{"value":"!     });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10370,"byte_end":10381,"line_start":245,"line_end":245,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10382,"byte_end":10385,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"!     // We can wait for the blocking task like this:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10386,"byte_end":10441,"line_start":247,"line_end":247,"column_start":1,"column_end":56}},{"value":"!     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10442,"byte_end":10517,"line_start":248,"line_end":248,"column_start":1,"column_end":76}},{"value":"!     // panic.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10518,"byte_end":10535,"line_start":249,"line_end":249,"column_start":1,"column_end":18}},{"value":"!     blocking_task.await.unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10536,"byte_end":10573,"line_start":250,"line_end":250,"column_start":1,"column_end":38}},{"value":"! }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10574,"byte_end":10579,"line_start":251,"line_end":251,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10580,"byte_end":10587,"line_start":252,"line_end":252,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10588,"byte_end":10591,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"! If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10592,"byte_end":10670,"line_start":254,"line_end":254,"column_start":1,"column_end":79}},{"value":"! to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10671,"byte_end":10747,"line_start":255,"line_end":255,"column_start":1,"column_end":77}},{"value":"! can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10748,"byte_end":10824,"line_start":256,"line_end":256,"column_start":1,"column_end":77}},{"value":"! rayon task finishes.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10825,"byte_end":10849,"line_start":257,"line_end":257,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10850,"byte_end":10853,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"! [rayon]: https://docs.rs/rayon","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10854,"byte_end":10888,"line_start":259,"line_end":259,"column_start":1,"column_end":35}},{"value":"! [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10889,"byte_end":10926,"line_start":260,"line_end":260,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10927,"byte_end":10930,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"! ## Asynchronous IO","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10931,"byte_end":10953,"line_start":262,"line_end":262,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10954,"byte_end":10957,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"! As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10958,"byte_end":11037,"line_start":264,"line_end":264,"column_start":1,"column_end":80}},{"value":"! to perform input and output asynchronously.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11038,"byte_end":11085,"line_start":265,"line_end":265,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11086,"byte_end":11089,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"! The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11090,"byte_end":11169,"line_start":267,"line_end":267,"column_start":1,"column_end":80}},{"value":"! the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11170,"byte_end":11250,"line_start":268,"line_end":268,"column_start":1,"column_end":81}},{"value":"! when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11251,"byte_end":11331,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"! functions for working with these traits, forming as an asynchronous","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11332,"byte_end":11403,"line_start":270,"line_end":270,"column_start":1,"column_end":72}},{"value":"! counterpart to [`std::io`]. When the \"io-driver\" feature flag is enabled, it","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11404,"byte_end":11484,"line_start":271,"line_end":271,"column_start":1,"column_end":81}},{"value":"! also provides utilities for library authors implementing I/O resources.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11485,"byte_end":11560,"line_start":272,"line_end":272,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11561,"byte_end":11564,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"! Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11565,"byte_end":11645,"line_start":274,"line_end":274,"column_start":1,"column_end":81}},{"value":"! with the operating system asynchronously. These include:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11646,"byte_end":11706,"line_start":275,"line_end":275,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11707,"byte_end":11710,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"! * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11711,"byte_end":11790,"line_start":277,"line_end":277,"column_start":1,"column_end":80}},{"value":"!   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11791,"byte_end":11860,"line_start":278,"line_end":278,"column_start":1,"column_end":70}},{"value":"! * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11861,"byte_end":11938,"line_start":279,"line_end":279,"column_start":1,"column_end":78}},{"value":"!   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11939,"byte_end":11995,"line_start":280,"line_end":280,"column_start":1,"column_end":57}},{"value":"! * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11996,"byte_end":12076,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"!   (enabled by the \"signal\" feature flag),","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12077,"byte_end":12122,"line_start":282,"line_end":282,"column_start":1,"column_end":46}},{"value":"! * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12123,"byte_end":12202,"line_start":283,"line_end":283,"column_start":1,"column_end":80}},{"value":"!   the \"process\" feature flag).","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12203,"byte_end":12237,"line_start":284,"line_end":284,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12238,"byte_end":12241,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"! [`tokio::io`]: crate::io","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12242,"byte_end":12270,"line_start":286,"line_end":286,"column_start":1,"column_end":29}},{"value":"! [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12271,"byte_end":12310,"line_start":287,"line_end":287,"column_start":1,"column_end":40}},{"value":"! [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12311,"byte_end":12352,"line_start":288,"line_end":288,"column_start":1,"column_end":42}},{"value":"! [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12353,"byte_end":12398,"line_start":289,"line_end":289,"column_start":1,"column_end":46}},{"value":"! [`std::io`]: std::io","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12399,"byte_end":12423,"line_start":290,"line_end":290,"column_start":1,"column_end":25}},{"value":"! [`tokio::net`]: crate::net","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12424,"byte_end":12454,"line_start":291,"line_end":291,"column_start":1,"column_end":31}},{"value":"! [TCP]: crate::net::tcp","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12455,"byte_end":12481,"line_start":292,"line_end":292,"column_start":1,"column_end":27}},{"value":"! [UDP]: crate::net::udp","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12482,"byte_end":12508,"line_start":293,"line_end":293,"column_start":1,"column_end":27}},{"value":"! [UDS]: crate::net::unix","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12509,"byte_end":12536,"line_start":294,"line_end":294,"column_start":1,"column_end":28}},{"value":"! [`tokio::fs`]: crate::fs","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12537,"byte_end":12565,"line_start":295,"line_end":295,"column_start":1,"column_end":29}},{"value":"! [`std::fs`]: std::fs","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12566,"byte_end":12590,"line_start":296,"line_end":296,"column_start":1,"column_end":25}},{"value":"! [`tokio::signal`]: crate::signal","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12591,"byte_end":12627,"line_start":297,"line_end":297,"column_start":1,"column_end":37}},{"value":"! [`tokio::process`]: crate::process","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12628,"byte_end":12666,"line_start":298,"line_end":298,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12667,"byte_end":12670,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12671,"byte_end":12685,"line_start":300,"line_end":300,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12686,"byte_end":12689,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"! A simple TCP echo server:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12690,"byte_end":12719,"line_start":302,"line_end":302,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12720,"byte_end":12723,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12724,"byte_end":12737,"line_start":304,"line_end":304,"column_start":1,"column_end":14}},{"value":"! use tokio::net::TcpListener;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12738,"byte_end":12770,"line_start":305,"line_end":305,"column_start":1,"column_end":33}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12771,"byte_end":12797,"line_start":306,"line_end":306,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12798,"byte_end":12801,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12802,"byte_end":12820,"line_start":308,"line_end":308,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12821,"byte_end":12884,"line_start":309,"line_end":309,"column_start":1,"column_end":64}},{"value":"!     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12885,"byte_end":12955,"line_start":310,"line_end":310,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12956,"byte_end":12959,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12960,"byte_end":12974,"line_start":312,"line_end":312,"column_start":1,"column_end":15}},{"value":"!         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12975,"byte_end":13034,"line_start":313,"line_end":313,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13035,"byte_end":13038,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"!         tokio::spawn(async move {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13039,"byte_end":13076,"line_start":315,"line_end":315,"column_start":1,"column_end":38}},{"value":"!             let mut buf = [0; 1024];","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13077,"byte_end":13117,"line_start":316,"line_end":316,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13118,"byte_end":13121,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"!             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13122,"byte_end":13202,"line_start":318,"line_end":318,"column_start":1,"column_end":81}},{"value":"!             loop {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13203,"byte_end":13225,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"!                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13226,"byte_end":13289,"line_start":320,"line_end":320,"column_start":1,"column_end":64}},{"value":"!                     // socket closed","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13290,"byte_end":13330,"line_start":321,"line_end":321,"column_start":1,"column_end":41}},{"value":"!                     Ok(n) if n == 0 => return,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13331,"byte_end":13381,"line_start":322,"line_end":322,"column_start":1,"column_end":51}},{"value":"!                     Ok(n) => n,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13382,"byte_end":13417,"line_start":323,"line_end":323,"column_start":1,"column_end":36}},{"value":"!                     Err(e) => {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13418,"byte_end":13453,"line_start":324,"line_end":324,"column_start":1,"column_end":36}},{"value":"!                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13454,"byte_end":13537,"line_start":325,"line_end":325,"column_start":1,"column_end":84}},{"value":"!                         return;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13538,"byte_end":13573,"line_start":326,"line_end":326,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13574,"byte_end":13599,"line_start":327,"line_end":327,"column_start":1,"column_end":26}},{"value":"!                 };","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13600,"byte_end":13622,"line_start":328,"line_end":328,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13623,"byte_end":13626,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"!                 // Write the data back","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13627,"byte_end":13669,"line_start":330,"line_end":330,"column_start":1,"column_end":43}},{"value":"!                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13670,"byte_end":13742,"line_start":331,"line_end":331,"column_start":1,"column_end":73}},{"value":"!                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13743,"byte_end":13821,"line_start":332,"line_end":332,"column_start":1,"column_end":79}},{"value":"!                     return;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13822,"byte_end":13853,"line_start":333,"line_end":333,"column_start":1,"column_end":32}},{"value":"!                 }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13854,"byte_end":13875,"line_start":334,"line_end":334,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13876,"byte_end":13893,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"!         });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13894,"byte_end":13909,"line_start":336,"line_end":336,"column_start":1,"column_end":16}},{"value":"!     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13910,"byte_end":13919,"line_start":337,"line_end":337,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13920,"byte_end":13925,"line_start":338,"line_end":338,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13926,"byte_end":13933,"line_start":339,"line_end":339,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":79}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14122,"byte_end":14134,"line_start":345,"line_end":345,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/mod.rs","byte_start":15864,"byte_end":15884,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":79},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":83},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":176}],"decl_id":null,"docs":" Asynchronous values.\n","sig":null,"attributes":[{"value":"allow(unused_imports, dead_code)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31010,"byte_end":31046,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"! Asynchronous values.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31048,"byte_end":31072,"line_start":3,"line_end":3,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":876},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31537,"byte_end":31543,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":874},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31502,"byte_end":31532,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":879},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31597,"byte_end":31601,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":874},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31554,"byte_end":31592,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":882},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31763,"byte_end":31767,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":874},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31620,"byte_end":31686,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31691,"byte_end":31758,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":874},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31473,"byte_end":31482,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"MaybeDone::{Future, Done, Gone}","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":882}],"decl_id":null,"docs":" A future that may have completed.\n","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31409,"byte_end":31446,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":93},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31930,"byte_end":31940,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"fn <Fut> (future: Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31885,"byte_end":31922,"line_start":23,"line_end":23,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32343,"byte_end":32353,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"fn (self: Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32059,"byte_end":32144,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32149,"byte_end":32220,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32225,"byte_end":32298,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32303,"byte_end":32331,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32731,"byte_end":32742,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"fn (self: Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempts to take the output of a `MaybeDone` without driving it","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32610,"byte_end":32677,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ towards completion.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32682,"byte_end":32705,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32710,"byte_end":32719,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":113},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":33954,"byte_end":33960,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":115}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":33902,"byte_end":33942,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":118},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34090,"byte_end":34097,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"fn <T, F> (f: F) -> PollFn<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].\n","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34011,"byte_end":34082,"line_start":15,"line_end":15,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":887},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34862,"byte_end":34867,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34633,"byte_end":34674,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34675,"byte_end":34678,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34679,"byte_end":34756,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34825,"byte_end":34850,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":177},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":307},{"krate":0,"index":969},{"krate":0,"index":1065},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1152},{"krate":0,"index":1188},{"krate":0,"index":1257},{"krate":0,"index":1261},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":2579},{"krate":0,"index":1298}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"! Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37622,"byte_end":37699,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37700,"byte_end":37703,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37704,"byte_end":37775,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"! defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37776,"byte_end":37856,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37857,"byte_end":37931,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37932,"byte_end":37935,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # AsyncRead and AsyncWrite","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37936,"byte_end":37966,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37967,"byte_end":37970,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37971,"byte_end":38051,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"! [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38052,"byte_end":38129,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"! input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38130,"byte_end":38207,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"! _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38208,"byte_end":38288,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"! type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38289,"byte_end":38367,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"! blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38368,"byte_end":38433,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38434,"byte_end":38437,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38438,"byte_end":38510,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"! core methods needed to provide asynchronous reading and writing","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38511,"byte_end":38578,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"! functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38579,"byte_end":38658,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"! and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38659,"byte_end":38733,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"! implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38734,"byte_end":38808,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"! respectively.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38809,"byte_end":38826,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38827,"byte_end":38830,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38831,"byte_end":38895,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"! `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38896,"byte_end":38971,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"! extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38972,"byte_end":39047,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"! and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39048,"byte_end":39125,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39126,"byte_end":39129,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39130,"byte_end":39206,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"! can be used in almost exactly the same manner as the standard library's","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39207,"byte_end":39282,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"! `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39283,"byte_end":39363,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"! and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39364,"byte_end":39435,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"! `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39436,"byte_end":39505,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39506,"byte_end":39509,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! For example, the standard library documentation introduces `Read` by","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39510,"byte_end":39582,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"! [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39583,"byte_end":39663,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"! can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39664,"byte_end":39717,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39718,"byte_end":39721,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39722,"byte_end":39735,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, AsyncReadExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39736,"byte_end":39776,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"! use tokio::fs::File;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39777,"byte_end":39801,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39802,"byte_end":39805,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39806,"byte_end":39824,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39825,"byte_end":39864,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"!     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39865,"byte_end":39914,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"!     let mut buffer = [0; 10];","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39915,"byte_end":39948,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39949,"byte_end":39952,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"!     // read up to 10 bytes","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39953,"byte_end":39983,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"!     let n = f.read(&mut buffer).await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39984,"byte_end":40027,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40028,"byte_end":40031,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"!     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40032,"byte_end":40082,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"!     Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40083,"byte_end":40097,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40098,"byte_end":40103,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40104,"byte_end":40111,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40112,"byte_end":40115,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! [`File`]: crate::fs::File","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40116,"byte_end":40145,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"! [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40146,"byte_end":40186,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"! [`std::fs::File`]: std::fs::File","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40187,"byte_end":40223,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"! [std_example]: std::io#read-and-write","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40224,"byte_end":40265,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40266,"byte_end":40269,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! ## Buffered Readers and Writers","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40270,"byte_end":40305,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40306,"byte_end":40309,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40310,"byte_end":40391,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"! making near-constant calls to the operating system. To help with this,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40392,"byte_end":40466,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"! `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40467,"byte_end":40545,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"! and therefore, `tokio::io` does as well.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40546,"byte_end":40590,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40591,"byte_end":40594,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40595,"byte_end":40665,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"! [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40666,"byte_end":40744,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"! wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40745,"byte_end":40823,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"! of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40824,"byte_end":40901,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40902,"byte_end":40905,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40906,"byte_end":40981,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"! extra methods to any async reader:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40982,"byte_end":41020,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41021,"byte_end":41024,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41025,"byte_end":41038,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41039,"byte_end":41093,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"! use tokio::fs::File;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41094,"byte_end":41118,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41119,"byte_end":41122,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41123,"byte_end":41141,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41142,"byte_end":41181,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"!     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41182,"byte_end":41227,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"!     let mut reader = BufReader::new(f);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41228,"byte_end":41271,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"!     let mut buffer = String::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41272,"byte_end":41311,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41312,"byte_end":41315,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"!     // read a line into buffer","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41316,"byte_end":41350,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"!     reader.read_line(&mut buffer).await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41351,"byte_end":41396,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41397,"byte_end":41400,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"!     println!(\"{}\", buffer);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41401,"byte_end":41432,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"!     Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41433,"byte_end":41447,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41448,"byte_end":41453,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41454,"byte_end":41461,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41462,"byte_end":41465,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41466,"byte_end":41547,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"! to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41548,"byte_end":41626,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"! [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41627,"byte_end":41689,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41690,"byte_end":41693,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41694,"byte_end":41707,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41708,"byte_end":41760,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"! use tokio::fs::File;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41761,"byte_end":41785,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41786,"byte_end":41789,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41790,"byte_end":41808,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41809,"byte_end":41848,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"!     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41849,"byte_end":41896,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"!     {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41897,"byte_end":41906,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"!         let mut writer = BufWriter::new(f);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41907,"byte_end":41954,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41955,"byte_end":41958,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"!         // Write a byte to the buffer.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41959,"byte_end":42001,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"!         writer.write(&[42u8]).await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42002,"byte_end":42043,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42044,"byte_end":42047,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"!         // Flush the buffer before it goes out of scope.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42048,"byte_end":42108,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"!         writer.flush().await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42109,"byte_end":42143,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42144,"byte_end":42147,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"!     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42148,"byte_end":42238,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42239,"byte_end":42242,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"!     Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42243,"byte_end":42257,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42258,"byte_end":42263,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42264,"byte_end":42271,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42272,"byte_end":42275,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"! [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42276,"byte_end":42321,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"! [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42322,"byte_end":42364,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"! [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42365,"byte_end":42410,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"! [`BufReader`]: crate::io::BufReader","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42411,"byte_end":42450,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"! [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42451,"byte_end":42490,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42491,"byte_end":42494,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42495,"byte_end":42539,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42540,"byte_end":42543,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42544,"byte_end":42626,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"! our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42627,"byte_end":42706,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"! non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42707,"byte_end":42781,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"! other words, these types must never block the thread, and instead the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42782,"byte_end":42855,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"! current task is notified when the I/O resource is ready.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42856,"byte_end":42916,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42917,"byte_end":42920,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! ## Conversion to and from Sink/Stream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42921,"byte_end":42962,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42963,"byte_end":42966,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! It is often convenient to encapsulate the reading and writing of","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42967,"byte_end":43035,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"! bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43036,"byte_end":43105,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"! type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43106,"byte_end":43172,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"! provides some utility traits in the [tokio-util] crate that","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43173,"byte_end":43236,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"! abstract the asynchronous buffering that is required and allows","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43237,"byte_end":43304,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"! you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43305,"byte_end":43374,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"! buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43375,"byte_end":43445,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"! that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43446,"byte_end":43524,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"! your structured data.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43525,"byte_end":43550,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43551,"byte_end":43554,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! [tokio-util]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43555,"byte_end":43631,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43632,"byte_end":43635,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"! # Standard input and output","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43636,"byte_end":43667,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43668,"byte_end":43671,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"! Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43672,"byte_end":43752,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"! These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43753,"byte_end":43829,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"! implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43830,"byte_end":43877,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43878,"byte_end":43881,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"! Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43882,"byte_end":43955,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"! context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43956,"byte_end":44032,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"! function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44033,"byte_end":44109,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44110,"byte_end":44113,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"! [input]: fn@stdin","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44114,"byte_end":44135,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"! [output]: fn@stdout","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44136,"byte_end":44159,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"! [error]: fn@stderr","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44160,"byte_end":44182,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44183,"byte_end":44186,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"! # `std` re-exports","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44187,"byte_end":44209,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44210,"byte_end":44213,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"! Additionally, [`Error`], [`ErrorKind`], and [`Result`] are re-exported","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44214,"byte_end":44288,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"! from `std::io` for ease of use.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44289,"byte_end":44324,"line_start":166,"line_end":166,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44325,"byte_end":44328,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"! [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44329,"byte_end":44363,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"! [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44364,"byte_end":44400,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"! [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44401,"byte_end":44441,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"! [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44442,"byte_end":44484,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"! [\"codec\"]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44485,"byte_end":44558,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"! [`Encoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Encoder.html","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44559,"byte_end":44642,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"! [`Decoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Decoder.html","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44643,"byte_end":44726,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"! [`Error`]: struct@Error","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44727,"byte_end":44754,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"! [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44755,"byte_end":44788,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"! [`Result`]: type@Result","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44789,"byte_end":44816,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"! [`Read`]: std::io::Read","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44817,"byte_end":44844,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"! [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44845,"byte_end":44915,"line_start":179,"line_end":179,"column_start":1,"column_end":71}},{"value":"! [`Stream`]: crate::stream::Stream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44916,"byte_end":44953,"line_start":180,"line_end":180,"column_start":1,"column_end":38}},{"value":"! [`Write`]: std::io::Write","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44954,"byte_end":44983,"line_start":181,"line_end":181,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":186},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47360,"byte_end":47372,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46683,"byte_end":46714,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46715,"byte_end":46718,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46719,"byte_end":46791,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46792,"byte_end":46870,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46871,"byte_end":46957,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46958,"byte_end":47035,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47036,"byte_end":47047,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47048,"byte_end":47051,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47052,"byte_end":47120,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47121,"byte_end":47145,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47146,"byte_end":47149,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47150,"byte_end":47192,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47193,"byte_end":47243,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47244,"byte_end":47297,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47298,"byte_end":47349,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48470,"byte_end":48483,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47390,"byte_end":47475,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47480,"byte_end":47521,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47526,"byte_end":47529,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47534,"byte_end":47581,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47586,"byte_end":47589,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47594,"byte_end":47653,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47658,"byte_end":47716,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47721,"byte_end":47802,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47807,"byte_end":47833,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47838,"byte_end":47841,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47846,"byte_end":47917,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47922,"byte_end":47984,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47989,"byte_end":48060,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48065,"byte_end":48146,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48151,"byte_end":48227,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48232,"byte_end":48283,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48288,"byte_end":48291,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48296,"byte_end":48367,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48372,"byte_end":48375,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48380,"byte_end":48419,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48424,"byte_end":48462,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49386,"byte_end":49393,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"fn (self: Pin<&mut Self>, amt: usize) -> ()","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48561,"byte_end":48635,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48640,"byte_end":48707,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48712,"byte_end":48715,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48720,"byte_end":48791,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48796,"byte_end":48865,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48870,"byte_end":48944,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48949,"byte_end":49026,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49031,"byte_end":49101,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49106,"byte_end":49159,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49164,"byte_end":49167,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49172,"byte_end":49244,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49249,"byte_end":49271,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49276,"byte_end":49279,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49284,"byte_end":49323,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49328,"byte_end":49378,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":215},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52627,"byte_end":52636,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51046,"byte_end":51076,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51077,"byte_end":51080,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51081,"byte_end":51160,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51161,"byte_end":51235,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51236,"byte_end":51315,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51316,"byte_end":51393,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51394,"byte_end":51405,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51406,"byte_end":51409,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51410,"byte_end":51487,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51488,"byte_end":51506,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51507,"byte_end":51510,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately read","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51511,"byte_end":51587,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   and placed into the output buffer, where `n` == 0 implies that EOF has","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51588,"byte_end":51664,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/   been reached.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51665,"byte_end":51684,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51685,"byte_end":51688,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51689,"byte_end":51754,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51755,"byte_end":51835,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51836,"byte_end":51915,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51916,"byte_end":51989,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51990,"byte_end":52063,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52064,"byte_end":52085,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52086,"byte_end":52089,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52090,"byte_end":52174,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52175,"byte_end":52199,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52200,"byte_end":52203,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52204,"byte_end":52277,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52278,"byte_end":52357,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52358,"byte_end":52361,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52362,"byte_end":52427,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52428,"byte_end":52449,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52450,"byte_end":52453,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52454,"byte_end":52493,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52494,"byte_end":52530,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52531,"byte_end":52570,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52571,"byte_end":52616,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54280,"byte_end":54308,"line_start":77,"line_end":77,"column_start":15,"column_end":43},"name":"prepare_uninitialized_buffer","qualname":"::io::async_read::AsyncRead::prepare_uninitialized_buffer","value":"fn (&self, buf: &mut [MaybeUninit<u8>]) -> bool","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Prepares an uninitialized buffer to be safe to pass to `read`. Returns\n `true` if the supplied buffer was zeroed out.","sig":null,"attributes":[{"value":"/ Prepares an uninitialized buffer to be safe to pass to `read`. Returns","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52643,"byte_end":52717,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ `true` if the supplied buffer was zeroed out.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52722,"byte_end":52771,"line_start":45,"line_end":45,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52776,"byte_end":52779,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ While it would be highly unusual, implementations of [`io::Read`] are","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52784,"byte_end":52857,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ able to read data from the buffer passed as an argument. Because of","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52862,"byte_end":52933,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ this, the buffer passed to [`io::Read`] must be initialized memory. In","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52938,"byte_end":53012,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ situations where large numbers of buffers are used, constantly having to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53017,"byte_end":53093,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/ zero out buffers can be expensive.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53098,"byte_end":53136,"line_start":51,"line_end":51,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53141,"byte_end":53144,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function does any necessary work to prepare an uninitialized buffer","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53149,"byte_end":53225,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/ to be safe to pass to `read`. If `read` guarantees to never attempt to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53230,"byte_end":53304,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ read data out of the supplied buffer, then `prepare_uninitialized_buffer`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53309,"byte_end":53386,"line_start":55,"line_end":55,"column_start":5,"column_end":82}},{"value":"/ doesn't need to do any work.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53391,"byte_end":53423,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53428,"byte_end":53431,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If this function returns `true`, then the memory has been zeroed out.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53436,"byte_end":53509,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ This allows implementations of `AsyncRead` which are composed of","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53514,"byte_end":53582,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ multiple subimplementations to efficiently implement","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53587,"byte_end":53643,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/ `prepare_uninitialized_buffer`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53648,"byte_end":53683,"line_start":61,"line_end":61,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53688,"byte_end":53691,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function isn't actually `unsafe` to call but `unsafe` to implement.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53696,"byte_end":53772,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ The implementer must ensure that either the whole `buf` has been zeroed","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53777,"byte_end":53852,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ or `poll_read_buf()` overwrites the buffer without reading it and returns","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53857,"byte_end":53934,"line_start":65,"line_end":65,"column_start":5,"column_end":82}},{"value":"/ correct value.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53939,"byte_end":53957,"line_start":66,"line_end":66,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53962,"byte_end":53965,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function is called from [`poll_read_buf`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53970,"byte_end":54021,"line_start":68,"line_end":68,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54026,"byte_end":54029,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54034,"byte_end":54046,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54051,"byte_end":54054,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Implementations that return `false` must never read from data slices","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54059,"byte_end":54131,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ that they did not write to.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54136,"byte_end":54167,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54172,"byte_end":54175,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`io::Read`]: std::io::Read","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54180,"byte_end":54211,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ [`poll_read_buf`]: method@Self::poll_read_buf","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54216,"byte_end":54265,"line_start":76,"line_end":76,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54821,"byte_end":54830,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<io::Result<usize>>","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54451,"byte_end":54504,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54509,"byte_end":54512,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54517,"byte_end":54575,"line_start":87,"line_end":87,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54580,"byte_end":54583,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54588,"byte_end":54647,"line_start":89,"line_end":89,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54652,"byte_end":54710,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54715,"byte_end":54782,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/ readable or is closed.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54787,"byte_end":54813,"line_start":92,"line_end":92,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55291,"byte_end":55304,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"poll_read_buf","qualname":"::io::async_read::AsyncRead::poll_read_buf","value":"fn <B> (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &mut B) -> Poll<io::Result<usize>>","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified `BufMut`, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Pulls some bytes from this source into the specified `BufMut`, returning","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54955,"byte_end":55031,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ how many bytes were read.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55036,"byte_end":55065,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55070,"byte_end":55073,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The `buf` provided will have bytes read into it and the internal cursor","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55078,"byte_end":55153,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ will be advanced if any bytes were read. Note that this method typically","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55158,"byte_end":55234,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ will not reallocate the buffer provided.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55239,"byte_end":55283,"line_start":104,"line_end":104,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":246},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58459,"byte_end":58468,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":57977,"byte_end":58007,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58008,"byte_end":58011,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58012,"byte_end":58086,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58087,"byte_end":58157,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58158,"byte_end":58227,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58228,"byte_end":58231,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58232,"byte_end":58297,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58298,"byte_end":58319,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58320,"byte_end":58323,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58324,"byte_end":58360,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58361,"byte_end":58402,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58403,"byte_end":58448,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58806,"byte_end":58816,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, position: SeekFrom) -> Poll<io::Result<()>>","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58475,"byte_end":58532,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58537,"byte_end":58540,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58545,"byte_end":58618,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58623,"byte_end":58649,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58654,"byte_end":58657,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58662,"byte_end":58737,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58742,"byte_end":58798,"line_start":25,"line_end":25,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59399,"byte_end":59412,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58942,"byte_end":58985,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58990,"byte_end":58993,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58998,"byte_end":59047,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59052,"byte_end":59122,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59127,"byte_end":59188,"line_start":36,"line_end":36,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59193,"byte_end":59196,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59201,"byte_end":59213,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59218,"byte_end":59221,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59226,"byte_end":59282,"line_start":40,"line_end":40,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59287,"byte_end":59290,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59295,"byte_end":59307,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59312,"byte_end":59315,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Calling this method without calling `start_seek` first is an error.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59320,"byte_end":59391,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":271},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62915,"byte_end":62925,"line_start":46,"line_end":46,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61052,"byte_end":61084,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61085,"byte_end":61088,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61089,"byte_end":61171,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61172,"byte_end":61247,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61248,"byte_end":61315,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61316,"byte_end":61319,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61320,"byte_end":61400,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61401,"byte_end":61419,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61420,"byte_end":61423,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61424,"byte_end":61495,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61496,"byte_end":61510,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61511,"byte_end":61514,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61515,"byte_end":61583,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61584,"byte_end":61664,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61665,"byte_end":61744,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61745,"byte_end":61818,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61819,"byte_end":61892,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61893,"byte_end":61914,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61915,"byte_end":61918,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61919,"byte_end":62003,"line_start":26,"line_end":26,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62004,"byte_end":62028,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62029,"byte_end":62032,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62033,"byte_end":62115,"line_start":29,"line_end":29,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62116,"byte_end":62199,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62200,"byte_end":62203,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62204,"byte_end":62288,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62289,"byte_end":62373,"line_start":33,"line_end":33,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62374,"byte_end":62452,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62453,"byte_end":62532,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62533,"byte_end":62594,"line_start":36,"line_end":36,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62595,"byte_end":62598,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62599,"byte_end":62665,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62666,"byte_end":62688,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62689,"byte_end":62692,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62693,"byte_end":62731,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62732,"byte_end":62776,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62777,"byte_end":62816,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62817,"byte_end":62856,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62857,"byte_end":62904,"line_start":45,"line_end":45,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63309,"byte_end":63319,"line_start":55,"line_end":55,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &[u8]) -> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62932,"byte_end":62986,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62991,"byte_end":62994,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62999,"byte_end":63060,"line_start":49,"line_end":49,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63065,"byte_end":63068,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63073,"byte_end":63135,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63140,"byte_end":63198,"line_start":52,"line_end":52,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63203,"byte_end":63270,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63275,"byte_end":63301,"line_start":54,"line_end":54,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63860,"byte_end":63870,"line_start":70,"line_end":70,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63447,"byte_end":63518,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63523,"byte_end":63545,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63550,"byte_end":63553,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63558,"byte_end":63604,"line_start":64,"line_end":64,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63609,"byte_end":63612,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63617,"byte_end":63681,"line_start":66,"line_end":66,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63686,"byte_end":63744,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63749,"byte_end":63817,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63822,"byte_end":63852,"line_start":69,"line_end":69,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67156,"byte_end":67169,"line_start":130,"line_end":130,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63952,"byte_end":64026,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64031,"byte_end":64079,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64084,"byte_end":64087,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64092,"byte_end":64163,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64168,"byte_end":64244,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64249,"byte_end":64325,"line_start":77,"line_end":77,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64330,"byte_end":64405,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64410,"byte_end":64481,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64486,"byte_end":64562,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64567,"byte_end":64595,"line_start":81,"line_end":81,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64600,"byte_end":64603,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64608,"byte_end":64669,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64674,"byte_end":64745,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64750,"byte_end":64822,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64827,"byte_end":64902,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64907,"byte_end":64980,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64985,"byte_end":65060,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65065,"byte_end":65137,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65142,"byte_end":65153,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65158,"byte_end":65161,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65166,"byte_end":65240,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65245,"byte_end":65317,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65322,"byte_end":65391,"line_start":94,"line_end":94,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65396,"byte_end":65464,"line_start":95,"line_end":95,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65469,"byte_end":65530,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65535,"byte_end":65538,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65543,"byte_end":65561,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65566,"byte_end":65569,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65574,"byte_end":65644,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65649,"byte_end":65652,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65657,"byte_end":65720,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65725,"byte_end":65794,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65799,"byte_end":65874,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65879,"byte_end":65952,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65957,"byte_end":66008,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66013,"byte_end":66016,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66021,"byte_end":66091,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66096,"byte_end":66171,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66176,"byte_end":66248,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66253,"byte_end":66323,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66328,"byte_end":66403,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66408,"byte_end":66411,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66416,"byte_end":66497,"line_start":114,"line_end":114,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66502,"byte_end":66577,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66582,"byte_end":66649,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66654,"byte_end":66657,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66662,"byte_end":66674,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66679,"byte_end":66682,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66687,"byte_end":66758,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66763,"byte_end":66829,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66834,"byte_end":66908,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66913,"byte_end":66977,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66982,"byte_end":67021,"line_start":124,"line_end":124,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67026,"byte_end":67029,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67034,"byte_end":67046,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67051,"byte_end":67054,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67059,"byte_end":67134,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67139,"byte_end":67148,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67457,"byte_end":67471,"line_start":136,"line_end":136,"column_start":8,"column_end":22},"name":"poll_write_buf","qualname":"::io::async_write::AsyncWrite::poll_write_buf","value":"fn <B> (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &mut B) -> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Writes a `Buf` into this value, returning how many bytes were written.","sig":null,"attributes":[{"value":"/ Writes a `Buf` into this value, returning how many bytes were written.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67251,"byte_end":67325,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67330,"byte_end":67333,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Note that this method will advance the `buf` provided automatically by","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67338,"byte_end":67412,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ the number of bytes written.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67417,"byte_end":67449,"line_start":135,"line_end":135,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1179},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8354573,"byte_end":8354584,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"name":"PollEvented","qualname":"::io::poll_evented::PollEvented","value":"PollEvented {  }","parent":null,"children":[{"krate":0,"index":1181},{"krate":0,"index":1182}],"decl_id":null,"docs":" Associates an I/O resource that implements the [`std::io::Read`] and/or\n [`std::io::Write`] traits with the reactor that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19269,"byte_end":19298,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8356830,"byte_end":8356833,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<PollEvented<E>>::new","value":"fn (io: E) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8356408,"byte_end":8356476,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8356481,"byte_end":8356484,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8356489,"byte_end":8356501,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8356506,"byte_end":8356509,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8356514,"byte_end":8356574,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8356579,"byte_end":8356582,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8356587,"byte_end":8356657,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8356662,"byte_end":8356735,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8356740,"byte_end":8356818,"line_start":176,"line_end":176,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8358037,"byte_end":8358051,"line_start":205,"line_end":205,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<PollEvented<E>>::new_with_ready","value":"fn (io: E, ready: mio::Ready) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`\n state. `new_with_ready` should be used over `new` when you need control over the readiness\n state, such as when a file descriptor only allows reads. This does not add `hup` or `error`\n so if you are interested in those states, you will need to add them to the readiness state\n passed to this function.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8356933,"byte_end":8357027,"line_start":181,"line_end":181,"column_start":5,"column_end":99}},{"value":"/ state. `new_with_ready` should be used over `new` when you need control over the readiness","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8357032,"byte_end":8357126,"line_start":182,"line_end":182,"column_start":5,"column_end":99}},{"value":"/ state, such as when a file descriptor only allows reads. This does not add `hup` or `error`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8357131,"byte_end":8357226,"line_start":183,"line_end":183,"column_start":5,"column_end":100}},{"value":"/ so if you are interested in those states, you will need to add them to the readiness state","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8357231,"byte_end":8357325,"line_start":184,"line_end":184,"column_start":5,"column_end":99}},{"value":"/ passed to this function.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8357330,"byte_end":8357358,"line_start":185,"line_end":185,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8357363,"byte_end":8357366,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8357371,"byte_end":8357408,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8357413,"byte_end":8357416,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8357421,"byte_end":8357432,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8357437,"byte_end":8357454,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8357459,"byte_end":8357490,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8357495,"byte_end":8357540,"line_start":192,"line_end":192,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8357545,"byte_end":8357599,"line_start":193,"line_end":193,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8357604,"byte_end":8357656,"line_start":194,"line_end":194,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8357661,"byte_end":8357671,"line_start":195,"line_end":195,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8357676,"byte_end":8357683,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8357688,"byte_end":8357691,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8357696,"byte_end":8357708,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8357713,"byte_end":8357716,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8357721,"byte_end":8357781,"line_start":200,"line_end":200,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8357786,"byte_end":8357789,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8357794,"byte_end":8357864,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8357869,"byte_end":8357942,"line_start":203,"line_end":203,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8357947,"byte_end":8358025,"line_start":204,"line_end":204,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8358529,"byte_end":8358536,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollEvented<E>>::get_ref","value":"fn (&self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the underlying I/O object this readiness","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8358415,"byte_end":8358489,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ stream is wrapping.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8358494,"byte_end":8358517,"line_start":218,"line_end":218,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8358712,"byte_end":8358719,"line_start":225,"line_end":225,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PollEvented<E>>::get_mut","value":"fn (&mut self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O object this readiness","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8358597,"byte_end":8358672,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ stream is wrapping.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8358677,"byte_end":8358700,"line_start":224,"line_end":224,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8359255,"byte_end":8359265,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollEvented<E>>::into_inner","value":"fn (mut self) -> io::Result<E>","parent":null,"children":[],"decl_id":null,"docs":" Consumes self, returning the inner I/O object","sig":null,"attributes":[{"value":"/ Consumes self, returning the inner I/O object","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8358788,"byte_end":8358837,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8358842,"byte_end":8358845,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This function will deregister the I/O resource from the reactor before","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8358850,"byte_end":8358924,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ returning. If the deregistration operation fails, an error is returned.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8358929,"byte_end":8359004,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8359009,"byte_end":8359012,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8359017,"byte_end":8359092,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8359097,"byte_end":8359173,"line_start":235,"line_end":235,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8359178,"byte_end":8359243,"line_start":236,"line_end":236,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8360422,"byte_end":8360437,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<PollEvented<E>>::poll_read_ready","value":"fn (&self, cx: &mut Context<'_>, mask: mio::Ready) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's read readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's read readiness state.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8359413,"byte_end":8359464,"line_start":243,"line_end":243,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8359469,"byte_end":8359472,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The mask argument allows specifying what readiness to notify on. This","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8359477,"byte_end":8359550,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/ can be any value, including platform specific readiness, **except**","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8359555,"byte_end":8359626,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ `writable`. HUP is always implicitly included on platforms that support","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8359631,"byte_end":8359706,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ it.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8359711,"byte_end":8359718,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8359723,"byte_end":8359726,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a read then `Poll::Pending` is returned","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8359731,"byte_end":8359807,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ and the current task is notified once a new event is received.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8359812,"byte_end":8359878,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8359883,"byte_end":8359886,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a read-ready state until readiness is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8359891,"byte_end":8359964,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ cleared by calling [`clear_read_ready`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8359969,"byte_end":8360013,"line_start":254,"line_end":254,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8360018,"byte_end":8360021,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ [`clear_read_ready`]: method@Self::clear_read_ready","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8360026,"byte_end":8360081,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8360086,"byte_end":8360089,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8360094,"byte_end":8360106,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8360111,"byte_end":8360114,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8360119,"byte_end":8360147,"line_start":260,"line_end":260,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8360152,"byte_end":8360155,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8360160,"byte_end":8360192,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8360197,"byte_end":8360241,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8360246,"byte_end":8360249,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8360254,"byte_end":8360267,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8360272,"byte_end":8360275,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8360280,"byte_end":8360353,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_write_ready`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8360358,"byte_end":8360410,"line_start":268,"line_end":268,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8361413,"byte_end":8361429,"line_start":299,"line_end":299,"column_start":12,"column_end":28},"name":"clear_read_ready","qualname":"<PollEvented<E>>::clear_read_ready","value":"fn (&self, cx: &mut Context<'_>, ready: mio::Ready) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Clears the I/O resource's read readiness state and registers the current\n task to be notified once a read readiness event is received.","sig":null,"attributes":[{"value":"/ Clears the I/O resource's read readiness state and registers the current","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8360814,"byte_end":8360890,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ task to be notified once a read readiness event is received.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8360895,"byte_end":8360959,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8360964,"byte_end":8360967,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_read_ready` will return","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8360972,"byte_end":8361034,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` until a new read readiness event has been received.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8361039,"byte_end":8361110,"line_start":288,"line_end":288,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8361115,"byte_end":8361118,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The `mask` argument specifies the readiness bits to clear. This may not","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8361123,"byte_end":8361198,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ include `writable` or `hup`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8361203,"byte_end":8361235,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8361240,"byte_end":8361243,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8361248,"byte_end":8361260,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8361265,"byte_end":8361268,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8361273,"byte_end":8361301,"line_start":295,"line_end":295,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8361306,"byte_end":8361309,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable or HUP","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8361314,"byte_end":8361352,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8361357,"byte_end":8361401,"line_start":298,"line_end":298,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8362869,"byte_end":8362885,"line_start":340,"line_end":340,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<PollEvented<E>>::poll_write_ready","value":"fn (&self, cx: &mut Context<'_>) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's write readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's write readiness state.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8361954,"byte_end":8362006,"line_start":316,"line_end":316,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8362011,"byte_end":8362014,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ This always checks for writable readiness and also checks for HUP","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8362019,"byte_end":8362088,"line_start":318,"line_end":318,"column_start":5,"column_end":74}},{"value":"/ readiness on platforms that support it.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8362093,"byte_end":8362136,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8362141,"byte_end":8362144,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a write then `Poll::Pending` is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8362149,"byte_end":8362217,"line_start":321,"line_end":321,"column_start":5,"column_end":73}},{"value":"/ returned and the current task is notified once a new event is received.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8362222,"byte_end":8362297,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8362302,"byte_end":8362305,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a write-ready state until readiness is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8362310,"byte_end":8362384,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ cleared by calling [`clear_write_ready`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8362389,"byte_end":8362434,"line_start":325,"line_end":325,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8362439,"byte_end":8362442,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ [`clear_write_ready`]: method@Self::clear_write_ready","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8362447,"byte_end":8362504,"line_start":327,"line_end":327,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8362509,"byte_end":8362512,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8362517,"byte_end":8362529,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8362534,"byte_end":8362537,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8362542,"byte_end":8362570,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8362575,"byte_end":8362578,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ * `ready` contains bits besides `writable` and `hup`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8362583,"byte_end":8362640,"line_start":333,"line_end":333,"column_start":5,"column_end":62}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8362645,"byte_end":8362689,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8362694,"byte_end":8362697,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8362702,"byte_end":8362715,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8362720,"byte_end":8362723,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8362728,"byte_end":8362801,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_read_ready`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8362806,"byte_end":8362857,"line_start":339,"line_end":339,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8363734,"byte_end":8363751,"line_start":362,"line_end":362,"column_start":12,"column_end":29},"name":"clear_write_ready","qualname":"<PollEvented<E>>::clear_write_ready","value":"fn (&self, cx: &mut Context<'_>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Resets the I/O resource's write readiness state and registers the current\n task to be notified once a write readiness event is received.","sig":null,"attributes":[{"value":"/ Resets the I/O resource's write readiness state and registers the current","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8363161,"byte_end":8363238,"line_start":350,"line_end":350,"column_start":5,"column_end":82}},{"value":"/ task to be notified once a write readiness event is received.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8363243,"byte_end":8363308,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8363313,"byte_end":8363316,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This only clears writable readiness. HUP (on platforms that support HUP)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8363321,"byte_end":8363397,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ cannot be cleared as it is a final state.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8363402,"byte_end":8363447,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8363452,"byte_end":8363455,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_write_ready(Ready::writable())` will","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8363460,"byte_end":8363535,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ return `NotReady` until a new write readiness event has been received.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8363540,"byte_end":8363614,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8363619,"byte_end":8363622,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8363627,"byte_end":8363639,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8363644,"byte_end":8363647,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8363652,"byte_end":8363722,"line_start":361,"line_end":361,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8367993,"byte_end":8368005,"line_start":41,"line_end":41,"column_start":16,"column_end":28},"name":"Registration","qualname":"::io::registration::Registration","value":"Registration {  }","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1185}],"decl_id":null,"docs":" Associates an I/O resource with the reactor instance that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19269,"byte_end":19298,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8368697,"byte_end":8368700,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Registration>::new","value":"fn <T> (io: &T) -> io::Result<Registration>","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8368125,"byte_end":8368181,"line_start":50,"line_end":50,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8368186,"byte_end":8368189,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8368194,"byte_end":8368206,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8368211,"byte_end":8368214,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8368219,"byte_end":8368271,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8368276,"byte_end":8368335,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8368340,"byte_end":8368343,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8368348,"byte_end":8368351,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8368356,"byte_end":8368368,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8368373,"byte_end":8368376,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8368381,"byte_end":8368441,"line_start":60,"line_end":60,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8368446,"byte_end":8368449,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8368454,"byte_end":8368524,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8368529,"byte_end":8368602,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8368607,"byte_end":8368685,"line_start":64,"line_end":64,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8370103,"byte_end":8370117,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<Registration>::new_with_ready","value":"fn <T> (io: &T, ready: mio::Ready) -> io::Result<Registration>","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.\n `new_with_ready` should be used over `new` when you need control over the readiness state,\n such as when a file descriptor only allows reads. This does not add `hup` or `error` so if\n you are interested in those states, you will need to add them to the readiness state passed\n to this function.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8368847,"byte_end":8368938,"line_start":72,"line_end":72,"column_start":5,"column_end":96}},{"value":"/ `new_with_ready` should be used over `new` when you need control over the readiness state,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8368943,"byte_end":8369037,"line_start":73,"line_end":73,"column_start":5,"column_end":99}},{"value":"/ such as when a file descriptor only allows reads. This does not add `hup` or `error` so if","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369042,"byte_end":8369136,"line_start":74,"line_end":74,"column_start":5,"column_end":99}},{"value":"/ you are interested in those states, you will need to add them to the readiness state passed","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369141,"byte_end":8369236,"line_start":75,"line_end":75,"column_start":5,"column_end":100}},{"value":"/ to this function.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369241,"byte_end":8369262,"line_start":76,"line_end":76,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369267,"byte_end":8369270,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369275,"byte_end":8369312,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369317,"byte_end":8369320,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369325,"byte_end":8369336,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369341,"byte_end":8369358,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369363,"byte_end":8369394,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369399,"byte_end":8369444,"line_start":83,"line_end":83,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369449,"byte_end":8369503,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369508,"byte_end":8369560,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369565,"byte_end":8369575,"line_start":86,"line_end":86,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369580,"byte_end":8369587,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369592,"byte_end":8369595,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369600,"byte_end":8369612,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369617,"byte_end":8369620,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369625,"byte_end":8369677,"line_start":91,"line_end":91,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369682,"byte_end":8369741,"line_start":92,"line_end":92,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369746,"byte_end":8369749,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369754,"byte_end":8369757,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369762,"byte_end":8369774,"line_start":95,"line_end":95,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369779,"byte_end":8369782,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369787,"byte_end":8369847,"line_start":97,"line_end":97,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369852,"byte_end":8369855,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369860,"byte_end":8369930,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8369935,"byte_end":8370008,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8370013,"byte_end":8370091,"line_start":101,"line_end":101,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8371352,"byte_end":8371362,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registration>::deregister","value":"fn <T> (&mut self, io: &T) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Deregisters the I/O resource from the reactor it is associated with.","sig":null,"attributes":[{"value":"/ Deregisters the I/O resource from the reactor it is associated with.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8370576,"byte_end":8370648,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8370653,"byte_end":8370656,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This function must be called before the I/O resource associated with the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8370661,"byte_end":8370737,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ registration is dropped.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8370742,"byte_end":8370770,"line_start":122,"line_end":122,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8370775,"byte_end":8370778,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8370783,"byte_end":8370858,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8370863,"byte_end":8370939,"line_start":125,"line_end":125,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8370944,"byte_end":8371009,"line_start":126,"line_end":126,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8371014,"byte_end":8371017,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8371022,"byte_end":8371034,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8371039,"byte_end":8371042,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If the deregistration was successful, `Ok` is returned. Any calls to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8371047,"byte_end":8371119,"line_start":130,"line_end":130,"column_start":5,"column_end":77}},{"value":"/ `Reactor::turn` that happen after a successful call to `deregister` will","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8371124,"byte_end":8371200,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ no longer result in notifications getting sent for this registration.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8371205,"byte_end":8371278,"line_start":132,"line_end":132,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8371283,"byte_end":8371286,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ `Err` is returned if an error is encountered.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8371291,"byte_end":8371340,"line_start":134,"line_end":134,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8372913,"byte_end":8372928,"line_start":174,"line_end":174,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<Registration>::poll_read_ready","value":"fn (&self, cx: &mut Context<'_>) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's read readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's read readiness stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8371665,"byte_end":8371730,"line_start":146,"line_end":146,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8371735,"byte_end":8371738,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new read readiness event since the last","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8371743,"byte_end":8371817,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ call to `poll_read_ready`, it is returned. If it has not, the current","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8371822,"byte_end":8371895,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8371900,"byte_end":8371950,"line_start":150,"line_end":150,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8371955,"byte_end":8371958,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8371963,"byte_end":8372036,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8372041,"byte_end":8372116,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8372121,"byte_end":8372157,"line_start":154,"line_end":154,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8372162,"byte_end":8372165,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8372170,"byte_end":8372188,"line_start":156,"line_end":156,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8372193,"byte_end":8372196,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8372201,"byte_end":8372246,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8372251,"byte_end":8372254,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8372259,"byte_end":8372334,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8372339,"byte_end":8372400,"line_start":161,"line_end":161,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8372405,"byte_end":8372408,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8372413,"byte_end":8372488,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_read_ready`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8372493,"byte_end":8372540,"line_start":164,"line_end":164,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8372545,"byte_end":8372548,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8372553,"byte_end":8372629,"line_start":166,"line_end":166,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8372634,"byte_end":8372707,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8372712,"byte_end":8372715,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8372720,"byte_end":8372793,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8372798,"byte_end":8372801,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8372806,"byte_end":8372818,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8372823,"byte_end":8372826,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8372831,"byte_end":8372901,"line_start":173,"line_end":173,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8373769,"byte_end":8373784,"line_start":198,"line_end":198,"column_start":12,"column_end":27},"name":"take_read_ready","qualname":"<Registration>::take_read_ready","value":"fn (&self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consume any pending read readiness event.","sig":null,"attributes":[{"value":"/ Consume any pending read readiness event.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8373408,"byte_end":8373453,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8373458,"byte_end":8373461,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_read_ready`] **except** that it","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8373466,"byte_end":8373538,"line_start":193,"line_end":193,"column_start":5,"column_end":77}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8373543,"byte_end":8373618,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8373623,"byte_end":8373691,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8373696,"byte_end":8373699,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8373704,"byte_end":8373757,"line_start":197,"line_end":197,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8375138,"byte_end":8375154,"line_start":230,"line_end":230,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<Registration>::poll_write_ready","value":"fn (&self, cx: &mut Context<'_>) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's write readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's write readiness stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8373886,"byte_end":8373952,"line_start":202,"line_end":202,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8373957,"byte_end":8373960,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new write readiness event since the last","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8373965,"byte_end":8374040,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ call to `poll_write_ready`, it is returned. If it has not, the current","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8374045,"byte_end":8374119,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8374124,"byte_end":8374174,"line_start":206,"line_end":206,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8374179,"byte_end":8374182,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8374187,"byte_end":8374260,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8374265,"byte_end":8374340,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8374345,"byte_end":8374381,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8374386,"byte_end":8374389,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8374394,"byte_end":8374412,"line_start":212,"line_end":212,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8374417,"byte_end":8374420,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8374425,"byte_end":8374470,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8374475,"byte_end":8374478,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8374483,"byte_end":8374558,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8374563,"byte_end":8374624,"line_start":217,"line_end":217,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8374629,"byte_end":8374632,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8374637,"byte_end":8374712,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_write_ready`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8374717,"byte_end":8374765,"line_start":220,"line_end":220,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8374770,"byte_end":8374773,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8374778,"byte_end":8374854,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8374859,"byte_end":8374932,"line_start":223,"line_end":223,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8374937,"byte_end":8374940,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8374945,"byte_end":8375018,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8375023,"byte_end":8375026,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8375031,"byte_end":8375043,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8375048,"byte_end":8375051,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8375056,"byte_end":8375126,"line_start":229,"line_end":229,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8376001,"byte_end":8376017,"line_start":254,"line_end":254,"column_start":12,"column_end":28},"name":"take_write_ready","qualname":"<Registration>::take_write_ready","value":"fn (&self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes any pending write readiness event.","sig":null,"attributes":[{"value":"/ Consumes any pending write readiness event.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8375635,"byte_end":8375682,"line_start":247,"line_end":247,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8375687,"byte_end":8375690,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_write_ready`] **except** that it","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8375695,"byte_end":8375768,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8375773,"byte_end":8375848,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8375853,"byte_end":8375921,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8375926,"byte_end":8375929,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8375934,"byte_end":8375989,"line_start":253,"line_end":253,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1302},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8379880,"byte_end":8379888,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1304}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1305},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8380017,"byte_end":8380026,"line_start":26,"line_end":26,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1307}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1308},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8380340,"byte_end":8380345,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"fn <T> (stream: T) -> (ReadHalf<T>, WriteHalf<T>)","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8380971,"byte_end":8380981,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"fn (&self, other: &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8380868,"byte_end":8380943,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8380948,"byte_end":8380959,"line_start":65,"line_end":65,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8381388,"byte_end":8381395,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"fn (self, wr: WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8381064,"byte_end":8381113,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8381118,"byte_end":8381121,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8381126,"byte_end":8381138,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8381143,"byte_end":8381146,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8381151,"byte_end":8381225,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8381230,"byte_end":8381280,"line_start":75,"line_end":75,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8381285,"byte_end":8381349,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8381354,"byte_end":8381376,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1221},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8381896,"byte_end":8381906,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"fn (&self, other: &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8381794,"byte_end":8381868,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8381873,"byte_end":8381884,"line_start":95,"line_end":95,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1310},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":8385143,"byte_end":8385147,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":8384980,"byte_end":8385046,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":8385064,"byte_end":8385131,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":2000},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8388306,"byte_end":8388321,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":2001},{"krate":0,"index":2003},{"krate":0,"index":2005},{"krate":0,"index":2006}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8391021,"byte_end":8391031,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"fn <'a> (&'a mut self, byte: u8, buf: &'a mut Vec<u8>) -> ReadUntil<'a, Self>","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2003},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8393922,"byte_end":8393931,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"fn <'a> (&'a mut self, buf: &'a mut String) -> ReadLine<'a, Self>","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2005},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8395331,"byte_end":8395336,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"fn (self, byte: u8) -> Split<Self>","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2006},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8397186,"byte_end":8397191,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"fn (self) -> Lines<Self>","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2008},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8399370,"byte_end":8399382,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":2009},{"krate":0,"index":2011},{"krate":0,"index":2013},{"krate":0,"index":2016},{"krate":0,"index":2023},{"krate":0,"index":2025},{"krate":0,"index":2027},{"krate":0,"index":2029},{"krate":0,"index":2031},{"krate":0,"index":2033},{"krate":0,"index":2035},{"krate":0,"index":2037},{"krate":0,"index":2039},{"krate":0,"index":2041},{"krate":0,"index":2043},{"krate":0,"index":2045},{"krate":0,"index":2047},{"krate":0,"index":2049},{"krate":0,"index":2051},{"krate":0,"index":2053},{"krate":0,"index":2055},{"krate":0,"index":2057},{"krate":0,"index":2018},{"krate":0,"index":2020},{"krate":0,"index":2022}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8400502,"byte_end":8400507,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"fn <R> (self, next: R) -> Chain<Self, R>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2011},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8403336,"byte_end":8403340,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"fn <'a> (&'a mut self, buf: &'a mut [u8]) -> Read<'a, Self>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2013},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8405642,"byte_end":8405650,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"fn <'a, B> (&'a mut self, buf: &'a mut B) -> ReadBuf<'a, Self, B>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2016},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8407547,"byte_end":8407557,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"fn <'a> (&'a mut self, buf: &'a mut [u8]) -> ReadExact<'a, Self>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2023},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8408994,"byte_end":8409001,"line_start":324,"line_end":324,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"fn <'a> (&'a mut self) -> ReadU8<&'a mut Self>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2025},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8410290,"byte_end":8410297,"line_start":362,"line_end":362,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"fn <'a> (&'a mut self) -> ReadI8<&'a mut Self>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2027},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8411628,"byte_end":8411636,"line_start":400,"line_end":400,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"fn <'a> (&'a mut self) -> ReadU16<&'a mut Self>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2029},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8412976,"byte_end":8412984,"line_start":438,"line_end":438,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"fn <'a> (&'a mut self) -> ReadI16<&'a mut Self>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2031},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8414265,"byte_end":8414273,"line_start":475,"line_end":475,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"fn <'a> (&'a mut self) -> ReadU32<&'a mut Self>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2033},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8415568,"byte_end":8415576,"line_start":513,"line_end":513,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"fn <'a> (&'a mut self) -> ReadI32<&'a mut Self>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2035},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8416939,"byte_end":8416947,"line_start":552,"line_end":552,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"fn <'a> (&'a mut self) -> ReadU64<&'a mut Self>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2037},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8418240,"byte_end":8418248,"line_start":589,"line_end":589,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"fn <'a> (&'a mut self) -> ReadI64<&'a mut Self>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2039},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8419708,"byte_end":8419717,"line_start":629,"line_end":629,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"fn <'a> (&'a mut self) -> ReadU128<&'a mut Self>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2041},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8421111,"byte_end":8421120,"line_start":669,"line_end":669,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"fn <'a> (&'a mut self) -> ReadI128<&'a mut Self>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2043},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8422467,"byte_end":8422478,"line_start":707,"line_end":707,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"fn <'a> (&'a mut self) -> ReadU16Le<&'a mut Self>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2045},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8423839,"byte_end":8423850,"line_start":745,"line_end":745,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"fn <'a> (&'a mut self) -> ReadI16Le<&'a mut Self>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2047},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8425151,"byte_end":8425162,"line_start":782,"line_end":782,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"fn <'a> (&'a mut self) -> ReadU32Le<&'a mut Self>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2049},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8426474,"byte_end":8426485,"line_start":820,"line_end":820,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"fn <'a> (&'a mut self) -> ReadI32Le<&'a mut Self>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2051},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8427866,"byte_end":8427877,"line_start":859,"line_end":859,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"fn <'a> (&'a mut self) -> ReadU64Le<&'a mut Self>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2053},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8429171,"byte_end":8429182,"line_start":896,"line_end":896,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"fn <'a> (&'a mut self) -> ReadI64Le<&'a mut Self>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8430660,"byte_end":8430672,"line_start":936,"line_end":936,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"fn <'a> (&'a mut self) -> ReadU128Le<&'a mut Self>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2057},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8432066,"byte_end":8432078,"line_start":976,"line_end":976,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"fn <'a> (&'a mut self) -> ReadI128Le<&'a mut Self>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2018},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8433691,"byte_end":8433702,"line_start":1022,"line_end":1022,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"fn <'a> (&'a mut self, buf: &'a mut Vec<u8>) -> ReadToEnd<'a, Self>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2020},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8435270,"byte_end":8435284,"line_start":1069,"line_end":1069,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"fn <'a> (&'a mut self, dst: &'a mut String) -> ReadToString<'a, Self>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2022},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8436462,"byte_end":8436466,"line_start":1103,"line_end":1103,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"fn (self, limit: u64) -> Take<Self>","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1389},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437508,"byte_end":8437520,"line_start":35,"line_end":35,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":1390}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to [`AsyncSeek`] types.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8436733,"byte_end":8436806,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8436807,"byte_end":8436810,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ As a convenience, this trait may be imported using the [`prelude`]:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8436811,"byte_end":8436882,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8436883,"byte_end":8436886,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8436887,"byte_end":8436901,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8436902,"byte_end":8436905,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8436906,"byte_end":8436913,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use std::io::{Cursor, SeekFrom};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8436914,"byte_end":8436950,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8436951,"byte_end":8436977,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8436978,"byte_end":8436981,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8436982,"byte_end":8437000,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437001,"byte_end":8437040,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/     let mut cursor = Cursor::new(b\"abcdefg\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437041,"byte_end":8437090,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437091,"byte_end":8437094,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/     // the `seek` method is defined by this trait","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437095,"byte_end":8437148,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/     cursor.seek(SeekFrom::Start(3)).await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437149,"byte_end":8437196,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437197,"byte_end":8437200,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/     let mut buf = [0; 1];","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437201,"byte_end":8437230,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/     let n = cursor.read(&mut buf).await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437231,"byte_end":8437276,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437277,"byte_end":8437302,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/     assert_eq!(buf, [b'd']);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437303,"byte_end":8437335,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437336,"byte_end":8437339,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437340,"byte_end":8437354,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437355,"byte_end":8437360,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437361,"byte_end":8437368,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437369,"byte_end":8437372,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ See [module][crate::io] documentation for more details.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437373,"byte_end":8437432,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437433,"byte_end":8437436,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: AsyncSeek","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437437,"byte_end":8437465,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ [`prelude`]: crate::prelude","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437466,"byte_end":8437497,"line_start":34,"line_end":34,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8438237,"byte_end":8438241,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"fn (&mut self, pos: SeekFrom) -> Seek<'_, Self>","parent":{"krate":0,"index":1389},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437538,"byte_end":8437607,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437612,"byte_end":8437665,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437670,"byte_end":8437673,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437678,"byte_end":8437755,"line_start":39,"line_end":39,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437760,"byte_end":8437782,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437787,"byte_end":8437790,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437795,"byte_end":8437809,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437814,"byte_end":8437817,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437822,"byte_end":8437835,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437840,"byte_end":8437864,"line_start":45,"line_end":45,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437869,"byte_end":8437895,"line_start":46,"line_end":46,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437900,"byte_end":8437903,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437908,"byte_end":8437934,"line_start":48,"line_end":48,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437939,"byte_end":8437942,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437947,"byte_end":8437992,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437997,"byte_end":8438045,"line_start":51,"line_end":51,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8438050,"byte_end":8438091,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8438096,"byte_end":8438099,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8438104,"byte_end":8438141,"line_start":54,"line_end":54,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8438146,"byte_end":8438188,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8438193,"byte_end":8438205,"line_start":56,"line_end":56,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8438210,"byte_end":8438217,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8438222,"byte_end":8438229,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2060},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8440444,"byte_end":8440457,"line_start":68,"line_end":68,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":2061},{"krate":0,"index":2063},{"krate":0,"index":2066},{"krate":0,"index":2070},{"krate":0,"index":2072},{"krate":0,"index":2074},{"krate":0,"index":2076},{"krate":0,"index":2078},{"krate":0,"index":2080},{"krate":0,"index":2082},{"krate":0,"index":2084},{"krate":0,"index":2086},{"krate":0,"index":2088},{"krate":0,"index":2090},{"krate":0,"index":2092},{"krate":0,"index":2094},{"krate":0,"index":2096},{"krate":0,"index":2098},{"krate":0,"index":2100},{"krate":0,"index":2102},{"krate":0,"index":2104},{"krate":0,"index":2068},{"krate":0,"index":2069}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8442299,"byte_end":8442304,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"fn <'a> (&'a mut self, src: &'a [u8]) -> Write<'a, Self>","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8445106,"byte_end":8445115,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"fn <'a, B> (&'a mut self, src: &'a mut B) -> WriteBuf<'a, Self, B>","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2066},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8446457,"byte_end":8446466,"line_start":228,"line_end":228,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"fn <'a> (&'a mut self, src: &'a [u8]) -> WriteAll<'a, Self>","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8447866,"byte_end":8447874,"line_start":271,"line_end":271,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"fn <'a> (&'a mut self, n: u8) -> WriteU8<&'a mut Self>","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8449135,"byte_end":8449143,"line_start":308,"line_end":308,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"fn <'a> (&'a mut self, n: i8) -> WriteI8<&'a mut Self>","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8450458,"byte_end":8450467,"line_start":346,"line_end":346,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"fn <'a> (&'a mut self, n: u16) -> WriteU16<&'a mut Self>","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8451780,"byte_end":8451789,"line_start":384,"line_end":384,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"fn <'a> (&'a mut self, n: i16) -> WriteI16<&'a mut Self>","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8453129,"byte_end":8453138,"line_start":422,"line_end":422,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"fn <'a> (&'a mut self, n: u32) -> WriteU32<&'a mut Self>","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8454473,"byte_end":8454482,"line_start":460,"line_end":460,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"fn <'a> (&'a mut self, n: i32) -> WriteI32<&'a mut Self>","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8455859,"byte_end":8455868,"line_start":498,"line_end":498,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"fn <'a> (&'a mut self, n: u64) -> WriteU64<&'a mut Self>","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2084},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8457255,"byte_end":8457264,"line_start":536,"line_end":536,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"fn <'a> (&'a mut self, n: i64) -> WriteI64<&'a mut Self>","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8458719,"byte_end":8458729,"line_start":576,"line_end":576,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"fn <'a> (&'a mut self, n: u128) -> WriteU128<&'a mut Self>","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8460119,"byte_end":8460129,"line_start":616,"line_end":616,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"fn <'a> (&'a mut self, n: i128) -> WriteI128<&'a mut Self>","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2090},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8461461,"byte_end":8461473,"line_start":655,"line_end":655,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"fn <'a> (&'a mut self, n: u16) -> WriteU16Le<&'a mut Self>","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8462800,"byte_end":8462812,"line_start":693,"line_end":693,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"fn <'a> (&'a mut self, n: i16) -> WriteI16Le<&'a mut Self>","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8464166,"byte_end":8464178,"line_start":731,"line_end":731,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"fn <'a> (&'a mut self, n: u32) -> WriteU32Le<&'a mut Self>","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8465527,"byte_end":8465539,"line_start":769,"line_end":769,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"fn <'a> (&'a mut self, n: i32) -> WriteI32Le<&'a mut Self>","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2098},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8466930,"byte_end":8466942,"line_start":807,"line_end":807,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"fn <'a> (&'a mut self, n: u64) -> WriteU64Le<&'a mut Self>","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2100},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8468343,"byte_end":8468355,"line_start":845,"line_end":845,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"fn <'a> (&'a mut self, n: i64) -> WriteI64Le<&'a mut Self>","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2102},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8469822,"byte_end":8469835,"line_start":885,"line_end":885,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"fn <'a> (&'a mut self, n: u128) -> WriteU128Le<&'a mut Self>","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8471237,"byte_end":8471250,"line_start":925,"line_end":925,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"fn <'a> (&'a mut self, n: i128) -> WriteI128Le<&'a mut Self>","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8472270,"byte_end":8472275,"line_start":958,"line_end":958,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"fn (&mut self) -> Flush<'_, Self>","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8473495,"byte_end":8473503,"line_start":995,"line_end":995,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"fn (&mut self) -> Shutdown<'_, Self>","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9726},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8474912,"byte_end":8474921,"line_start":29,"line_end":29,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":9728},{"krate":0,"index":9729},{"krate":0,"index":9730},{"krate":0,"index":9731}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8475257,"byte_end":8475260,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"fn (inner: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8475115,"byte_end":8475207,"line_start":39,"line_end":39,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8475212,"byte_end":8475245,"line_start":40,"line_end":40,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8475422,"byte_end":8475435,"line_start":46,"line_end":46,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"fn (capacity: usize, inner: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8475345,"byte_end":8475410,"line_start":45,"line_end":45,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8476111,"byte_end":8476118,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8475974,"byte_end":8476020,"line_start":65,"line_end":65,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8476025,"byte_end":8476028,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8476033,"byte_end":8476099,"line_start":67,"line_end":67,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8476310,"byte_end":8476317,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8476165,"byte_end":8476219,"line_start":72,"line_end":72,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8476224,"byte_end":8476227,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8476232,"byte_end":8476298,"line_start":74,"line_end":74,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8476528,"byte_end":8476539,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8476376,"byte_end":8476437,"line_start":79,"line_end":79,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8476442,"byte_end":8476445,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8476450,"byte_end":8476516,"line_start":81,"line_end":81,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8476770,"byte_end":8476780,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8476619,"byte_end":8476682,"line_start":86,"line_end":86,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8476687,"byte_end":8476690,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8476695,"byte_end":8476758,"line_start":88,"line_end":88,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8476984,"byte_end":8476990,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8476824,"byte_end":8476880,"line_start":93,"line_end":93,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8476885,"byte_end":8476888,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8476893,"byte_end":8476972,"line_start":95,"line_end":95,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":9712},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8481236,"byte_end":8481245,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":9714}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8481524,"byte_end":8481527,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"fn (stream: RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8481370,"byte_end":8481427,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8481432,"byte_end":8481435,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8481440,"byte_end":8481512,"line_start":29,"line_end":29,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1501},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8481859,"byte_end":8481872,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"fn (reader_capacity: usize, writer_capacity: usize, stream: RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8481659,"byte_end":8481744,"line_start":36,"line_end":36,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8481749,"byte_end":8481762,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8481767,"byte_end":8481770,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8481775,"byte_end":8481847,"line_start":39,"line_end":39,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8482329,"byte_end":8482336,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"fn (&self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8482184,"byte_end":8482234,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8482239,"byte_end":8482242,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8482247,"byte_end":8482317,"line_start":55,"line_end":55,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8482556,"byte_end":8482563,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"fn (&mut self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8482403,"byte_end":8482461,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8482466,"byte_end":8482469,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8482474,"byte_end":8482544,"line_start":62,"line_end":62,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8482798,"byte_end":8482809,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8482638,"byte_end":8482703,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8482708,"byte_end":8482711,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8482716,"byte_end":8482786,"line_start":69,"line_end":69,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8483073,"byte_end":8483083,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"fn (self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8482918,"byte_end":8482985,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8482990,"byte_end":8482993,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8482998,"byte_end":8483061,"line_start":76,"line_end":76,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9649},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8486902,"byte_end":8486911,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":9651},{"krate":0,"index":9652},{"krate":0,"index":9653}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8487219,"byte_end":8487222,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"fn (inner: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8487077,"byte_end":8487169,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8487174,"byte_end":8487207,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8487384,"byte_end":8487397,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"fn (cap: usize, inner: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8487307,"byte_end":8487372,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8488479,"byte_end":8488486,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"fn (&self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8488421,"byte_end":8488467,"line_start":85,"line_end":85,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8488677,"byte_end":8488684,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8488533,"byte_end":8488587,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8488592,"byte_end":8488595,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8488600,"byte_end":8488665,"line_start":92,"line_end":92,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8488894,"byte_end":8488905,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8488743,"byte_end":8488804,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8488809,"byte_end":8488812,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8488817,"byte_end":8488882,"line_start":99,"line_end":99,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8489136,"byte_end":8489146,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"fn (self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8488985,"byte_end":8489048,"line_start":104,"line_end":104,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8489053,"byte_end":8489056,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8489061,"byte_end":8489124,"line_start":106,"line_end":106,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8489258,"byte_end":8489264,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8489190,"byte_end":8489246,"line_start":111,"line_end":111,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":9600},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8491897,"byte_end":8491902,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":9603},{"krate":0,"index":9604},{"krate":0,"index":9605}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8156368,"byte_end":8156377,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1586},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8492343,"byte_end":8492350,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"fn (&self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8492269,"byte_end":8492331,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1587},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8492682,"byte_end":8492689,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"fn (&mut self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8492419,"byte_end":8492489,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8492494,"byte_end":8492497,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8492502,"byte_end":8492575,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8492580,"byte_end":8492653,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8492658,"byte_end":8492670,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1588},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8493048,"byte_end":8493059,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8492778,"byte_end":8492855,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8492860,"byte_end":8492863,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8492868,"byte_end":8492941,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8492946,"byte_end":8493019,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8493024,"byte_end":8493036,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1589},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8493256,"byte_end":8493266,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"fn (self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8493188,"byte_end":8493244,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2110},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":8495842,"byte_end":8495846,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::util::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2120}],"decl_id":null,"docs":" A future that asynchronously copies the entire contents of a reader into a\n writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":8495759,"byte_end":8495826,"line_start":17,"line_end":17,"column_start":5,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":2106},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":8497111,"byte_end":8497115,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"copy","qualname":"::io::util::copy::copy","value":"fn <'a, R, W> (reader: &'a mut R, writer: &'a mut W) -> Copy<'a, R, W>","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2126},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8499872,"byte_end":8499877,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2127}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2128},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8500556,"byte_end":8500561,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"fn () -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2129},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/flush.rs","byte_start":8501778,"byte_end":8501783,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":2132}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9577},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8502899,"byte_end":8502904,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":9579},{"krate":0,"index":9580},{"krate":0,"index":9581},{"krate":0,"index":9582}],"decl_id":null,"docs":" Stream for the [`lines`](crate::io::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8156368,"byte_end":8156377,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8503751,"byte_end":8503760,"line_start":57,"line_end":57,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"fn (&mut self) -> io::Result<Option<String>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8503261,"byte_end":8503301,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8503306,"byte_end":8503309,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8503314,"byte_end":8503328,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8503333,"byte_end":8503336,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8503341,"byte_end":8503348,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8503353,"byte_end":8503387,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8503392,"byte_end":8503427,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8503432,"byte_end":8503435,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8503440,"byte_end":8503523,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8503528,"byte_end":8503568,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8503573,"byte_end":8503576,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8503581,"byte_end":8503634,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8503639,"byte_end":8503682,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8503687,"byte_end":8503692,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8503697,"byte_end":8503709,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8503714,"byte_end":8503721,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8503726,"byte_end":8503733,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1676},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8503987,"byte_end":8503994,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8503920,"byte_end":8503975,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1677},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8504113,"byte_end":8504120,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"fn (&mut self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8504054,"byte_end":8504101,"line_start":68,"line_end":68,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8504407,"byte_end":8504417,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8504172,"byte_end":8504233,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8504238,"byte_end":8504241,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8504246,"byte_end":8504309,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8504314,"byte_end":8504395,"line_start":76,"line_end":76,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8504536,"byte_end":8504550,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2137},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read.rs","byte_start":8506519,"byte_end":8506523,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":2140},{"krate":0,"index":2141}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read.rs","byte_start":8506436,"byte_end":8506503,"line_start":27,"line_end":27,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2146},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_buf.rs","byte_start":8507586,"byte_end":8507593,"line_start":21,"line_end":21,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":2150},{"krate":0,"index":2151}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_buf.rs","byte_start":8507503,"byte_end":8507570,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2157},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_exact.rs","byte_start":8508842,"byte_end":8508851,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_exact.rs","byte_start":8508759,"byte_end":8508826,"line_start":31,"line_end":31,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":9519},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8513175,"byte_end":8513181,"line_start":112,"line_end":112,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":9521}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9486},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8513197,"byte_end":8513203,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":9488}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9441},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8513219,"byte_end":8513226,"line_start":115,"line_end":115,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":9443},{"krate":0,"index":9444},{"krate":0,"index":9446}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9396},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8513251,"byte_end":8513258,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":9398},{"krate":0,"index":9399},{"krate":0,"index":9401}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9351},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8513283,"byte_end":8513290,"line_start":117,"line_end":117,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":9353},{"krate":0,"index":9354},{"krate":0,"index":9356}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9306},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8513315,"byte_end":8513323,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":9308},{"krate":0,"index":9309},{"krate":0,"index":9311}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9261},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8513351,"byte_end":8513358,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":9263},{"krate":0,"index":9264},{"krate":0,"index":9266}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9216},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8513383,"byte_end":8513390,"line_start":121,"line_end":121,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":9218},{"krate":0,"index":9219},{"krate":0,"index":9221}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9171},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8513415,"byte_end":8513422,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":9173},{"krate":0,"index":9174},{"krate":0,"index":9176}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9126},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8513447,"byte_end":8513455,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":9128},{"krate":0,"index":9129},{"krate":0,"index":9131}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9081},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8513483,"byte_end":8513492,"line_start":125,"line_end":125,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":9083},{"krate":0,"index":9084},{"krate":0,"index":9086}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9036},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8513520,"byte_end":8513529,"line_start":126,"line_end":126,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":9038},{"krate":0,"index":9039},{"krate":0,"index":9041}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8991},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8513557,"byte_end":8513566,"line_start":127,"line_end":127,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":8993},{"krate":0,"index":8994},{"krate":0,"index":8996}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8946},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8513594,"byte_end":8513604,"line_start":128,"line_end":128,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":8948},{"krate":0,"index":8949},{"krate":0,"index":8951}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8901},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8513635,"byte_end":8513644,"line_start":130,"line_end":130,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":8903},{"krate":0,"index":8904},{"krate":0,"index":8906}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8856},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8513672,"byte_end":8513681,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":8858},{"krate":0,"index":8859},{"krate":0,"index":8861}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8811},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8513709,"byte_end":8513718,"line_start":132,"line_end":132,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":8813},{"krate":0,"index":8814},{"krate":0,"index":8816}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8766},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8513746,"byte_end":8513756,"line_start":133,"line_end":133,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":8768},{"krate":0,"index":8769},{"krate":0,"index":8771}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2311},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_line.rs","byte_start":8514174,"byte_end":8514182,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2317}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_line.rs","byte_start":8514091,"byte_end":8514158,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2322},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8517418,"byte_end":8517427,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":2325},{"krate":0,"index":2326},{"krate":0,"index":2327}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8517288,"byte_end":8517355,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2332},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_string.rs","byte_start":8520406,"byte_end":8520418,"line_start":13,"line_end":13,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337},{"krate":0,"index":2338}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_string.rs","byte_start":8520323,"byte_end":8520390,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2343},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","byte_start":8522871,"byte_end":8522880,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":2346},{"krate":0,"index":2347},{"krate":0,"index":2348},{"krate":0,"index":2349}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","byte_start":8522788,"byte_end":8522855,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2355},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/repeat.rs","byte_start":8525326,"byte_end":8525332,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2356}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2354},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/repeat.rs","byte_start":8526018,"byte_end":8526024,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"fn (byte: u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2359},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/shutdown.rs","byte_start":8526973,"byte_end":8526981,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":2362}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2367},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8528153,"byte_end":8528157,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":2368}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2369},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8528998,"byte_end":8529002,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"fn () -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":8743},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8530247,"byte_end":8530252,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":8745},{"krate":0,"index":8746},{"krate":0,"index":8747},{"krate":0,"index":8748}],"decl_id":null,"docs":" Stream for the [`split`](crate::io::AsyncBufReadExt::split) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8156368,"byte_end":8156377,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1892},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8531113,"byte_end":8531125,"line_start":57,"line_end":57,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"fn (&mut self) -> io::Result<Option<Vec<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8530601,"byte_end":8530644,"line_start":40,"line_end":40,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8530649,"byte_end":8530652,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8530657,"byte_end":8530671,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8530676,"byte_end":8530679,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8530684,"byte_end":8530691,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8530696,"byte_end":8530730,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8530735,"byte_end":8530770,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8530775,"byte_end":8530778,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8530783,"byte_end":8530866,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8530871,"byte_end":8530918,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8530923,"byte_end":8530926,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8530931,"byte_end":8530993,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8530998,"byte_end":8531044,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8531049,"byte_end":8531054,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8531059,"byte_end":8531071,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8531076,"byte_end":8531083,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8531088,"byte_end":8531095,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1899},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8531363,"byte_end":8531380,"line_start":69,"line_end":69,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8697},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544174,"byte_end":8544186,"line_start":20,"line_end":20,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::util::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":8700},{"krate":0,"index":8701}],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2385},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8545462,"byte_end":8545475,"line_start":68,"line_end":68,"column_start":8,"column_end":21},"name":"stream_reader","qualname":"::io::util::stream_reader::stream_reader","value":"fn <S, B> (stream: S) -> StreamReader<S, B>","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544263,"byte_end":8544343,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544344,"byte_end":8544347,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544348,"byte_end":8544361,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544362,"byte_end":8544365,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544366,"byte_end":8544373,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544374,"byte_end":8544395,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ use tokio::io::{stream_reader, AsyncReadExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544396,"byte_end":8544445,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544446,"byte_end":8544466,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544467,"byte_end":8544513,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544514,"byte_end":8544517,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Create a stream from an iterator.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544518,"byte_end":8544558,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ let stream = tokio::stream::iter(vec![","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544559,"byte_end":8544601,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/     Ok(Bytes::from_static(&[0, 1, 2, 3])),","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544602,"byte_end":8544648,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[4, 5, 6, 7])),","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544649,"byte_end":8544695,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[8, 9, 10, 11])),","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544696,"byte_end":8544744,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ ]);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544745,"byte_end":8544752,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544753,"byte_end":8544756,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // Convert it to an AsyncRead.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544757,"byte_end":8544791,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"/ let mut read = stream_reader(stream);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544792,"byte_end":8544833,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544834,"byte_end":8544837,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Read five bytes from the stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544838,"byte_end":8544877,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/ let mut buf = [0; 5];","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544878,"byte_end":8544903,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ read.read_exact(&mut buf).await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544904,"byte_end":8544941,"line_start":49,"line_end":49,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(buf, [0, 1, 2, 3, 4]);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544942,"byte_end":8544979,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544980,"byte_end":8544983,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Read the rest of the current chunk.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8544984,"byte_end":8545026,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 3);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8545027,"byte_end":8545073,"line_start":53,"line_end":53,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..3], [5, 6, 7]);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8545074,"byte_end":8545111,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8545112,"byte_end":8545115,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Read the next chunk.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8545116,"byte_end":8545143,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 4);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8545144,"byte_end":8545190,"line_start":57,"line_end":57,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..4], [8, 9, 10, 11]);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8545191,"byte_end":8545233,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8545234,"byte_end":8545237,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // We have now reached the end.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8545238,"byte_end":8545273,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 0);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8545274,"byte_end":8545320,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8545321,"byte_end":8545324,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8545325,"byte_end":8545337,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8545338,"byte_end":8545345,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8545346,"byte_end":8545353,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8652},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8532975,"byte_end":8532979,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":8654},{"krate":0,"index":8655}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8156368,"byte_end":8156377,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8533569,"byte_end":8533574,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8533266,"byte_end":8533319,"line_start":30,"line_end":30,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8533324,"byte_end":8533370,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8533375,"byte_end":8533378,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8533383,"byte_end":8533393,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8533398,"byte_end":8533401,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8533406,"byte_end":8533483,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8533488,"byte_end":8533557,"line_start":36,"line_end":36,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1923},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8533893,"byte_end":8533902,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"fn (&mut self, limit: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8533622,"byte_end":8533693,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8533698,"byte_end":8533772,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8533777,"byte_end":8533852,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8533857,"byte_end":8533881,"line_start":44,"line_end":44,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1924},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8534025,"byte_end":8534032,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8533967,"byte_end":8534013,"line_start":49,"line_end":49,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1925},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8534324,"byte_end":8534331,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8534079,"byte_end":8534133,"line_start":54,"line_end":54,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8534138,"byte_end":8534141,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8534146,"byte_end":8534219,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8534224,"byte_end":8534296,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8534301,"byte_end":8534312,"line_start":58,"line_end":58,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1926},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8534642,"byte_end":8534653,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8534390,"byte_end":8534451,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8534456,"byte_end":8534459,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8534464,"byte_end":8534537,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8534542,"byte_end":8534614,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8534619,"byte_end":8534630,"line_start":67,"line_end":67,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1927},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8534799,"byte_end":8534809,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8534733,"byte_end":8534787,"line_start":72,"line_end":72,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2408},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write.rs","byte_start":8536739,"byte_end":8536744,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":2411},{"krate":0,"index":2412}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write.rs","byte_start":8536656,"byte_end":8536723,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2417},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_all.rs","byte_start":8537640,"byte_end":8537648,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":2420},{"krate":0,"index":2421}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_all.rs","byte_start":8537557,"byte_end":8537624,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2426},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_buf.rs","byte_start":8539031,"byte_end":8539039,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":2430},{"krate":0,"index":2431}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_buf.rs","byte_start":8538948,"byte_end":8539015,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":8592},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8542920,"byte_end":8542927,"line_start":111,"line_end":111,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":8594},{"krate":0,"index":8595}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8555},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8542943,"byte_end":8542950,"line_start":112,"line_end":112,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":8557},{"krate":0,"index":8558}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8510},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8542966,"byte_end":8542974,"line_start":114,"line_end":114,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":8512},{"krate":0,"index":8513},{"krate":0,"index":8515}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8465},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8542999,"byte_end":8543007,"line_start":115,"line_end":115,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":8467},{"krate":0,"index":8468},{"krate":0,"index":8470}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8420},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8543032,"byte_end":8543040,"line_start":116,"line_end":116,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":8422},{"krate":0,"index":8423},{"krate":0,"index":8425}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8375},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8543065,"byte_end":8543074,"line_start":117,"line_end":117,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":8377},{"krate":0,"index":8378},{"krate":0,"index":8380}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8330},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8543102,"byte_end":8543110,"line_start":119,"line_end":119,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":8332},{"krate":0,"index":8333},{"krate":0,"index":8335}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8285},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8543135,"byte_end":8543143,"line_start":120,"line_end":120,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":8287},{"krate":0,"index":8288},{"krate":0,"index":8290}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8240},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8543168,"byte_end":8543176,"line_start":121,"line_end":121,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":8242},{"krate":0,"index":8243},{"krate":0,"index":8245}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8195},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8543201,"byte_end":8543210,"line_start":122,"line_end":122,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":8197},{"krate":0,"index":8198},{"krate":0,"index":8200}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8150},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8543238,"byte_end":8543248,"line_start":124,"line_end":124,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":8152},{"krate":0,"index":8153},{"krate":0,"index":8155}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8105},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8543276,"byte_end":8543286,"line_start":125,"line_end":125,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":8107},{"krate":0,"index":8108},{"krate":0,"index":8110}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8060},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8543314,"byte_end":8543324,"line_start":126,"line_end":126,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":8062},{"krate":0,"index":8063},{"krate":0,"index":8065}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8015},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8543352,"byte_end":8543363,"line_start":127,"line_end":127,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":8017},{"krate":0,"index":8018},{"krate":0,"index":8020}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7970},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8543394,"byte_end":8543404,"line_start":129,"line_end":129,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":7972},{"krate":0,"index":7973},{"krate":0,"index":7975}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7925},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8543432,"byte_end":8543442,"line_start":130,"line_end":130,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":7927},{"krate":0,"index":7928},{"krate":0,"index":7930}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7880},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8543470,"byte_end":8543480,"line_start":131,"line_end":131,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":7882},{"krate":0,"index":7883},{"krate":0,"index":7885}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7835},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8543508,"byte_end":8543519,"line_start":132,"line_end":132,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":7837},{"krate":0,"index":7838},{"krate":0,"index":7840}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":308},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":372},{"krate":0,"index":2582},{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2885},{"krate":0,"index":3011},{"krate":0,"index":3030},{"krate":0,"index":3263},{"krate":0,"index":3264},{"krate":0,"index":3265}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71776,"byte_end":71794,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"! TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71796,"byte_end":71834,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71835,"byte_end":71838,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71839,"byte_end":71922,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"! library, which can be used to implement networking protocols.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71923,"byte_end":71988,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71989,"byte_end":71992,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! # Organization","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71993,"byte_end":72011,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72012,"byte_end":72015,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72016,"byte_end":72104,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"! * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72105,"byte_end":72174,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"! * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72175,"byte_end":72263,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"! Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72264,"byte_end":72322,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"! * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72323,"byte_end":72386,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"! over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72387,"byte_end":72452,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72454,"byte_end":72457,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! [`TcpListener`]: TcpListener","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72458,"byte_end":72490,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"! [`TcpStream`]: TcpStream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72491,"byte_end":72519,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"! [`UdpSocket`]: UdpSocket","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72520,"byte_end":72548,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"! [`UnixListener`]: UnixListener","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72549,"byte_end":72583,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"! [`UnixStream`]: UnixStream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72584,"byte_end":72614,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"! [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72615,"byte_end":72649,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":319},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73898,"byte_end":73911,"line_start":22,"line_end":22,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73210,"byte_end":73287,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73288,"byte_end":73291,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73292,"byte_end":73301,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73302,"byte_end":73305,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73306,"byte_end":73383,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ These implementations are only provided when Tokio is used with the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73384,"byte_end":73455,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ **`dns`** feature flag.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73456,"byte_end":73483,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73484,"byte_end":73487,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73488,"byte_end":73501,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73502,"byte_end":73505,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73506,"byte_end":73583,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73584,"byte_end":73656,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73657,"byte_end":73726,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73727,"byte_end":73730,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73731,"byte_end":73810,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73811,"byte_end":73887,"line_start":21,"line_end":21,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":368},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79572,"byte_end":79589,"line_start":237,"line_end":237,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":369},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79605,"byte_end":79609,"line_start":238,"line_end":238,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":370},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79670,"byte_end":79676,"line_start":239,"line_end":239,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79748,"byte_end":79763,"line_start":241,"line_end":241,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"fn (&self) -> Self::Future","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2582},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","parent":null,"children":[{"krate":0,"index":2583},{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2650},{"krate":0,"index":2651},{"krate":0,"index":2685},{"krate":0,"index":2688},{"krate":0,"index":2736},{"krate":0,"index":2740},{"krate":0,"index":2843}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22570,"byte_end":22593,"line_start":298,"line_end":298,"column_start":13,"column_end":36}},{"value":"! TCP utility types","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8548927,"byte_end":8548948,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2846},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8551548,"byte_end":8551559,"line_start":69,"line_end":69,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":2847}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22570,"byte_end":22593,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2600},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8553528,"byte_end":8553532,"line_start":132,"line_end":132,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"fn <A> (addr: A) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener, which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener, which will be bound to the specified address.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8551642,"byte_end":8551718,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8551723,"byte_end":8551726,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8551731,"byte_end":8551792,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8551797,"byte_end":8551800,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8551805,"byte_end":8551880,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8551885,"byte_end":8551961,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8551966,"byte_end":8551977,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8551982,"byte_end":8551985,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of the [`ToSocketAddrs`] trait.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8551990,"byte_end":8552065,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ Note that strings only implement this trait when the **`dns`** feature","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552070,"byte_end":8552144,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ is enabled, as strings may contain domain names that need to be resolved.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552149,"byte_end":8552226,"line_start":85,"line_end":85,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552231,"byte_end":8552234,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552239,"byte_end":8552315,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552320,"byte_end":8552393,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552398,"byte_end":8552471,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552476,"byte_end":8552528,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552533,"byte_end":8552536,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552541,"byte_end":8552604,"line_start":92,"line_end":92,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552609,"byte_end":8552612,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552617,"byte_end":8552671,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552676,"byte_end":8552679,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552684,"byte_end":8552698,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552703,"byte_end":8552706,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552711,"byte_end":8552724,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552729,"byte_end":8552761,"line_start":99,"line_end":99,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552766,"byte_end":8552769,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552774,"byte_end":8552790,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552795,"byte_end":8552798,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552803,"byte_end":8552821,"line_start":103,"line_end":103,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552826,"byte_end":8552865,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:2345\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552870,"byte_end":8552936,"line_start":105,"line_end":105,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552941,"byte_end":8552944,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552949,"byte_end":8552976,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552981,"byte_end":8552984,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8552989,"byte_end":8553016,"line_start":109,"line_end":109,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8553021,"byte_end":8553035,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8553040,"byte_end":8553045,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8553050,"byte_end":8553057,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8553062,"byte_end":8553065,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8553070,"byte_end":8553100,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8553105,"byte_end":8553108,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8553113,"byte_end":8553126,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8553131,"byte_end":8553163,"line_start":117,"line_end":117,"column_start":5,"column_end":37}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8553168,"byte_end":8553195,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8553200,"byte_end":8553203,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8553208,"byte_end":8553224,"line_start":120,"line_end":120,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8553229,"byte_end":8553232,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8553237,"byte_end":8553255,"line_start":122,"line_end":122,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8553260,"byte_end":8553299,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind((Ipv4Addr::new(127, 0, 0, 1), 2345)).await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8553304,"byte_end":8553389,"line_start":124,"line_end":124,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8553394,"byte_end":8553397,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8553402,"byte_end":8553429,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8553434,"byte_end":8553437,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8553442,"byte_end":8553469,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8553474,"byte_end":8553488,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8553493,"byte_end":8553498,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8553503,"byte_end":8553510,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2606},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8555104,"byte_end":8555110,"line_start":184,"line_end":184,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"fn (&mut self) -> io::Result<(TcpStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8554245,"byte_end":8554302,"line_start":157,"line_end":157,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8554307,"byte_end":8554310,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8554315,"byte_end":8554390,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8554395,"byte_end":8554465,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8554470,"byte_end":8554499,"line_start":161,"line_end":161,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8554504,"byte_end":8554507,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8554512,"byte_end":8554559,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8554564,"byte_end":8554567,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8554572,"byte_end":8554586,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8554591,"byte_end":8554594,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8554599,"byte_end":8554612,"line_start":167,"line_end":167,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8554617,"byte_end":8554649,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8554654,"byte_end":8554657,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8554662,"byte_end":8554678,"line_start":170,"line_end":170,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8554683,"byte_end":8554686,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8554691,"byte_end":8554709,"line_start":172,"line_end":172,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8554714,"byte_end":8554753,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8554758,"byte_end":8554828,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8554833,"byte_end":8554836,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8554841,"byte_end":8554880,"line_start":176,"line_end":176,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8554885,"byte_end":8554955,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8554960,"byte_end":8555023,"line_start":178,"line_end":178,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8555028,"byte_end":8555037,"line_start":179,"line_end":179,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8555042,"byte_end":8555045,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8555050,"byte_end":8555064,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8555069,"byte_end":8555074,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8555079,"byte_end":8555086,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2610},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8555446,"byte_end":8555457,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `SocketAddr` and `TcpStream` bound to this address.","sig":null,"attributes":[{"value":"/ Attempts to poll `SocketAddr` and `TcpStream` bound to this address.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8555223,"byte_end":8555295,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8555300,"byte_end":8555303,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ In case if I/O resource isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8555308,"byte_end":8555384,"line_start":190,"line_end":190,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8555389,"byte_end":8555434,"line_start":191,"line_end":191,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2612},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8558319,"byte_end":8558327,"line_start":266,"line_end":266,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"fn (listener: net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP listener from the standard library's TCP listener.","sig":null,"attributes":[{"value":"/ Creates a new TCP listener from the standard library's TCP listener.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8556304,"byte_end":8556376,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8556381,"byte_end":8556384,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ This method can be used when the `Handle::tcp_listen` method isn't","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8556389,"byte_end":8556459,"line_start":222,"line_end":222,"column_start":5,"column_end":75}},{"value":"/ sufficient because perhaps some more configuration is needed in terms of","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8556464,"byte_end":8556540,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ before the calls to `bind` and `listen`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8556545,"byte_end":8556589,"line_start":224,"line_end":224,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8556594,"byte_end":8556597,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `net2` crate and the `TcpBuilder`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8556602,"byte_end":8556677,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8556682,"byte_end":8556758,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8556763,"byte_end":8556828,"line_start":228,"line_end":228,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8556833,"byte_end":8556888,"line_start":229,"line_end":229,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8556893,"byte_end":8556896,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The `addr` argument here is one of the addresses that `listener` is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8556901,"byte_end":8556972,"line_start":231,"line_end":231,"column_start":5,"column_end":76}},{"value":"/ bound to and the listener will only be guaranteed to accept connections","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8556977,"byte_end":8557052,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ of the same address type currently.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557057,"byte_end":8557096,"line_start":233,"line_end":233,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557101,"byte_end":8557104,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ The platform specific behavior of this function looks like:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557109,"byte_end":8557172,"line_start":235,"line_end":235,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557177,"byte_end":8557180,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ * On Unix, the socket is placed into nonblocking mode and connections","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557185,"byte_end":8557258,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/   can be accepted as normal","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557263,"byte_end":8557294,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557299,"byte_end":8557302,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ * On Windows, the address is stored internally and all future accepts","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557307,"byte_end":8557380,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/   will only be for the same IP version as `addr` specified. That is, if","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557385,"byte_end":8557460,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/   `addr` is an IPv4 address then all sockets accepted will be IPv4 as","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557465,"byte_end":8557538,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/   well (same for IPv6).","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557543,"byte_end":8557570,"line_start":243,"line_end":243,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557575,"byte_end":8557578,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557583,"byte_end":8557597,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557602,"byte_end":8557605,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557610,"byte_end":8557628,"line_start":247,"line_end":247,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557633,"byte_end":8557659,"line_start":248,"line_end":248,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557664,"byte_end":8557696,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557701,"byte_end":8557704,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557709,"byte_end":8557727,"line_start":251,"line_end":251,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557732,"byte_end":8557783,"line_start":252,"line_end":252,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557788,"byte_end":8557859,"line_start":253,"line_end":253,"column_start":5,"column_end":76}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557864,"byte_end":8557924,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557929,"byte_end":8557943,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557948,"byte_end":8557953,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557958,"byte_end":8557965,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557970,"byte_end":8557973,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557978,"byte_end":8557990,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8557995,"byte_end":8557998,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8558003,"byte_end":8558063,"line_start":261,"line_end":261,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8558068,"byte_end":8558071,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8558076,"byte_end":8558146,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8558151,"byte_end":8558224,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8558229,"byte_end":8558307,"line_start":265,"line_end":265,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2614},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559411,"byte_end":8559421,"line_start":300,"line_end":300,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8558685,"byte_end":8558746,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8558751,"byte_end":8558754,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8558759,"byte_end":8558832,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8558837,"byte_end":8558871,"line_start":280,"line_end":280,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8558876,"byte_end":8558879,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8558884,"byte_end":8558898,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8558903,"byte_end":8558906,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8558911,"byte_end":8558929,"line_start":284,"line_end":284,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8558934,"byte_end":8558966,"line_start":285,"line_end":285,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8558971,"byte_end":8558974,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8558979,"byte_end":8558995,"line_start":287,"line_end":287,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559000,"byte_end":8559055,"line_start":288,"line_end":288,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559060,"byte_end":8559063,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559068,"byte_end":8559086,"line_start":290,"line_end":290,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559091,"byte_end":8559130,"line_start":291,"line_end":291,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559135,"byte_end":8559201,"line_start":292,"line_end":292,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559206,"byte_end":8559209,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559214,"byte_end":8559256,"line_start":294,"line_end":294,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559261,"byte_end":8559350,"line_start":295,"line_end":295,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559355,"byte_end":8559358,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559363,"byte_end":8559377,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559382,"byte_end":8559387,"line_start":298,"line_end":298,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559392,"byte_end":8559399,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2615},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560852,"byte_end":8560860,"line_start":340,"line_end":340,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"fn (&mut self) -> Incoming<'_>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559507,"byte_end":8559581,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559586,"byte_end":8559589,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Note that `TcpListener` also directly implements `Stream`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559594,"byte_end":8559656,"line_start":306,"line_end":306,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559661,"byte_end":8559664,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559669,"byte_end":8559745,"line_start":308,"line_end":308,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559750,"byte_end":8559819,"line_start":309,"line_end":309,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559824,"byte_end":8559853,"line_start":310,"line_end":310,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559858,"byte_end":8559861,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559866,"byte_end":8559878,"line_start":312,"line_end":312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559883,"byte_end":8559886,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559891,"byte_end":8559966,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8559971,"byte_end":8560046,"line_start":315,"line_end":315,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560051,"byte_end":8560125,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560130,"byte_end":8560205,"line_start":317,"line_end":317,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560210,"byte_end":8560218,"line_start":318,"line_end":318,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560223,"byte_end":8560226,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560231,"byte_end":8560245,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560250,"byte_end":8560253,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560258,"byte_end":8560271,"line_start":322,"line_end":322,"column_start":5,"column_end":18}},{"value":"/ use tokio::{net::TcpListener, stream::StreamExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560276,"byte_end":8560329,"line_start":323,"line_end":323,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560334,"byte_end":8560337,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560342,"byte_end":8560360,"line_start":325,"line_end":325,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560365,"byte_end":8560386,"line_start":326,"line_end":326,"column_start":5,"column_end":26}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await.unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560391,"byte_end":8560469,"line_start":327,"line_end":327,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560474,"byte_end":8560521,"line_start":328,"line_end":328,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560526,"byte_end":8560529,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560534,"byte_end":8560590,"line_start":330,"line_end":330,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560595,"byte_end":8560621,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560626,"byte_end":8560657,"line_start":332,"line_end":332,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560662,"byte_end":8560706,"line_start":333,"line_end":333,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560711,"byte_end":8560728,"line_start":334,"line_end":334,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560733,"byte_end":8560786,"line_start":335,"line_end":335,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560791,"byte_end":8560804,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560809,"byte_end":8560818,"line_start":337,"line_end":337,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560823,"byte_end":8560828,"line_start":338,"line_end":338,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560833,"byte_end":8560840,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2616},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561546,"byte_end":8561549,"line_start":367,"line_end":367,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560929,"byte_end":8560987,"line_start":344,"line_end":344,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8560992,"byte_end":8560995,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561000,"byte_end":8561060,"line_start":346,"line_end":346,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561065,"byte_end":8561068,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561073,"byte_end":8561110,"line_start":348,"line_end":348,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561115,"byte_end":8561118,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561123,"byte_end":8561137,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561142,"byte_end":8561145,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561150,"byte_end":8561163,"line_start":352,"line_end":352,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561168,"byte_end":8561200,"line_start":353,"line_end":353,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561205,"byte_end":8561208,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561213,"byte_end":8561229,"line_start":355,"line_end":355,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561234,"byte_end":8561237,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561242,"byte_end":8561260,"line_start":357,"line_end":357,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561265,"byte_end":8561304,"line_start":358,"line_end":358,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561309,"byte_end":8561371,"line_start":359,"line_end":359,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561376,"byte_end":8561379,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561384,"byte_end":8561441,"line_start":361,"line_end":361,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561446,"byte_end":8561486,"line_start":362,"line_end":362,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561491,"byte_end":8561494,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561499,"byte_end":8561512,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561517,"byte_end":8561522,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561527,"byte_end":8561534,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2617},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8562188,"byte_end":8562195,"line_start":392,"line_end":392,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561621,"byte_end":8561679,"line_start":371,"line_end":371,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561684,"byte_end":8561687,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561692,"byte_end":8561768,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561773,"byte_end":8561794,"line_start":374,"line_end":374,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561799,"byte_end":8561802,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561807,"byte_end":8561821,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561826,"byte_end":8561829,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561834,"byte_end":8561847,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561852,"byte_end":8561884,"line_start":379,"line_end":379,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561889,"byte_end":8561892,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561897,"byte_end":8561913,"line_start":381,"line_end":381,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561918,"byte_end":8561921,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561926,"byte_end":8561944,"line_start":383,"line_end":383,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561949,"byte_end":8561988,"line_start":384,"line_end":384,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8561993,"byte_end":8562056,"line_start":385,"line_end":385,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8562061,"byte_end":8562064,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8562069,"byte_end":8562127,"line_start":387,"line_end":387,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8562132,"byte_end":8562135,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8562140,"byte_end":8562154,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8562159,"byte_end":8562164,"line_start":390,"line_end":390,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8562169,"byte_end":8562176,"line_start":391,"line_end":391,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2848},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8564468,"byte_end":8564476,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":2850}],"decl_id":null,"docs":" Stream returned by the `TcpListener::incoming` function representing the\n stream of sockets received from a listener.\n","sig":null,"attributes":[{"value":"/ Stream returned by the `TcpListener::incoming` function representing the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8564266,"byte_end":8564342,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ stream of sockets received from a listener.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8564343,"byte_end":8564390,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8564391,"byte_end":8564439,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2646},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8564891,"byte_end":8564902,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"fn (mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<TcpStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `TcpStream` by polling inner `TcpListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `TcpStream` by polling inner `TcpListener` to accept","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8564654,"byte_end":8564727,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ connection.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8564732,"byte_end":8564747,"line_start":21,"line_end":21,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8564752,"byte_end":8564755,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ If `TcpListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8564760,"byte_end":8564829,"line_start":23,"line_end":23,"column_start":5,"column_end":74}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8564834,"byte_end":8564879,"line_start":24,"line_end":24,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2854},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8566461,"byte_end":8566469,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8566053,"byte_end":8566108,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8566109,"byte_end":8566112,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8566113,"byte_end":8566201,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8566202,"byte_end":8566279,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8566280,"byte_end":8566283,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8566284,"byte_end":8566312,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8566313,"byte_end":8566346,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8566347,"byte_end":8566398,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8566399,"byte_end":8566432,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2861},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8567163,"byte_end":8567172,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8566491,"byte_end":8566547,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8566548,"byte_end":8566551,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8566552,"byte_end":8566638,"line_start":36,"line_end":36,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8566639,"byte_end":8566691,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8566692,"byte_end":8566695,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8566696,"byte_end":8566782,"line_start":39,"line_end":39,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8566783,"byte_end":8566868,"line_start":40,"line_end":40,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8566869,"byte_end":8566872,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8566873,"byte_end":8566901,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8566902,"byte_end":8566935,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8566936,"byte_end":8566983,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8566984,"byte_end":8567046,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8567047,"byte_end":8567100,"line_start":46,"line_end":46,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8567101,"byte_end":8567134,"line_start":47,"line_end":47,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2667},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568229,"byte_end":8568238,"line_start":85,"line_end":85,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"fn (&mut self, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8567346,"byte_end":8567420,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8567425,"byte_end":8567498,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8567503,"byte_end":8567517,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8567522,"byte_end":8567525,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8567530,"byte_end":8567603,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8567608,"byte_end":8567611,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8567616,"byte_end":8567630,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8567635,"byte_end":8567638,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8567643,"byte_end":8567656,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8567661,"byte_end":8567679,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8567684,"byte_end":8567714,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8567719,"byte_end":8567722,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8567727,"byte_end":8567760,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8567765,"byte_end":8567768,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8567773,"byte_end":8567791,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8567796,"byte_end":8567835,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8567840,"byte_end":8567909,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8567914,"byte_end":8567962,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8567967,"byte_end":8567997,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568002,"byte_end":8568005,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568010,"byte_end":8568032,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568037,"byte_end":8568082,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568087,"byte_end":8568105,"line_start":78,"line_end":78,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568110,"byte_end":8568113,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568118,"byte_end":8568132,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568137,"byte_end":8568142,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568147,"byte_end":8568154,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568159,"byte_end":8568162,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568167,"byte_end":8568217,"line_start":84,"line_end":84,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2668},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8569655,"byte_end":8569659,"line_start":128,"line_end":128,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568363,"byte_end":8568433,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568438,"byte_end":8568507,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568512,"byte_end":8568551,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568556,"byte_end":8568559,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568564,"byte_end":8568632,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568637,"byte_end":8568640,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568645,"byte_end":8568685,"line_start":95,"line_end":95,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568690,"byte_end":8568693,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568698,"byte_end":8568712,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568717,"byte_end":8568720,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568725,"byte_end":8568738,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568743,"byte_end":8568773,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568778,"byte_end":8568804,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568809,"byte_end":8568835,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568840,"byte_end":8568843,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568848,"byte_end":8568866,"line_start":104,"line_end":104,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568871,"byte_end":8568922,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568927,"byte_end":8568955,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8568960,"byte_end":8569029,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8569034,"byte_end":8569082,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8569087,"byte_end":8569090,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8569095,"byte_end":8569124,"line_start":110,"line_end":110,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8569129,"byte_end":8569158,"line_start":111,"line_end":111,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8569163,"byte_end":8569166,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8569171,"byte_end":8569198,"line_start":113,"line_end":113,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8569203,"byte_end":8569250,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8569255,"byte_end":8569258,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8569263,"byte_end":8569287,"line_start":116,"line_end":116,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8569292,"byte_end":8569351,"line_start":117,"line_end":117,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8569356,"byte_end":8569395,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8569400,"byte_end":8569403,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8569408,"byte_end":8569422,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8569427,"byte_end":8569432,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8569437,"byte_end":8569444,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8569449,"byte_end":8569452,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8569457,"byte_end":8569522,"line_start":124,"line_end":124,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8569527,"byte_end":8569530,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8569535,"byte_end":8569581,"line_start":126,"line_end":126,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8569586,"byte_end":8569637,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2868},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8572261,"byte_end":8572274,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":2869}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8571826,"byte_end":8571892,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8571893,"byte_end":8571896,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8571897,"byte_end":8571984,"line_start":26,"line_end":26,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8571985,"byte_end":8572069,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8572070,"byte_end":8572073,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8572074,"byte_end":8572102,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8572103,"byte_end":8572146,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8572147,"byte_end":8572198,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8572199,"byte_end":8572232,"line_start":32,"line_end":32,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2872},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8573080,"byte_end":8573094,"line_start":55,"line_end":55,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":2873},{"krate":0,"index":2874}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8572307,"byte_end":8572374,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8572375,"byte_end":8572378,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8572379,"byte_end":8572465,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8572466,"byte_end":8572518,"line_start":41,"line_end":41,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8572519,"byte_end":8572522,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Dropping the write half will shutdown the write half of the TCP stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8572523,"byte_end":8572598,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8572599,"byte_end":8572602,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8572603,"byte_end":8572689,"line_start":45,"line_end":45,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8572690,"byte_end":8572775,"line_start":46,"line_end":46,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8572776,"byte_end":8572779,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8572780,"byte_end":8572808,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8572809,"byte_end":8572852,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8572853,"byte_end":8572900,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8572901,"byte_end":8572963,"line_start":51,"line_end":51,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8572964,"byte_end":8573017,"line_start":52,"line_end":52,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8573018,"byte_end":8573051,"line_start":53,"line_end":53,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2877},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8574038,"byte_end":8574050,"line_start":89,"line_end":89,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating two halves were not from the same socket, and thus could","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8573911,"byte_end":8573988,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ not be reunited.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8573989,"byte_end":8574009,"line_start":87,"line_end":87,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2712},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8574634,"byte_end":8574641,"line_start":108,"line_end":108,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"fn (self, other: OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8574371,"byte_end":8574440,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8574445,"byte_end":8574509,"line_start":104,"line_end":104,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8574514,"byte_end":8574566,"line_start":105,"line_end":105,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8574571,"byte_end":8574574,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8574579,"byte_end":8574622,"line_start":107,"line_end":107,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2713},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575632,"byte_end":8575641,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"fn (&mut self, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8574748,"byte_end":8574822,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8574827,"byte_end":8574900,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8574905,"byte_end":8574919,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8574924,"byte_end":8574927,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8574932,"byte_end":8575005,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575010,"byte_end":8575013,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575018,"byte_end":8575032,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575037,"byte_end":8575040,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575045,"byte_end":8575058,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575063,"byte_end":8575081,"line_start":121,"line_end":121,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575086,"byte_end":8575116,"line_start":122,"line_end":122,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575121,"byte_end":8575124,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575129,"byte_end":8575162,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575167,"byte_end":8575170,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575175,"byte_end":8575193,"line_start":126,"line_end":126,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575198,"byte_end":8575237,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575242,"byte_end":8575307,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575312,"byte_end":8575365,"line_start":129,"line_end":129,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575370,"byte_end":8575400,"line_start":130,"line_end":130,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575405,"byte_end":8575408,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575413,"byte_end":8575435,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575440,"byte_end":8575485,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575490,"byte_end":8575508,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575513,"byte_end":8575516,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575521,"byte_end":8575535,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575540,"byte_end":8575545,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575550,"byte_end":8575557,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575562,"byte_end":8575565,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575570,"byte_end":8575620,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8577063,"byte_end":8577067,"line_start":184,"line_end":184,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575770,"byte_end":8575840,"line_start":145,"line_end":145,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575845,"byte_end":8575914,"line_start":146,"line_end":146,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575919,"byte_end":8575958,"line_start":147,"line_end":147,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575963,"byte_end":8575966,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8575971,"byte_end":8576039,"line_start":149,"line_end":149,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576044,"byte_end":8576047,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576052,"byte_end":8576092,"line_start":151,"line_end":151,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576097,"byte_end":8576100,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576105,"byte_end":8576119,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576124,"byte_end":8576127,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576132,"byte_end":8576145,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576150,"byte_end":8576180,"line_start":156,"line_end":156,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576185,"byte_end":8576211,"line_start":157,"line_end":157,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576216,"byte_end":8576242,"line_start":158,"line_end":158,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576247,"byte_end":8576250,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576255,"byte_end":8576273,"line_start":160,"line_end":160,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576278,"byte_end":8576329,"line_start":161,"line_end":161,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576334,"byte_end":8576362,"line_start":162,"line_end":162,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576367,"byte_end":8576432,"line_start":163,"line_end":163,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576437,"byte_end":8576490,"line_start":164,"line_end":164,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576495,"byte_end":8576498,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576503,"byte_end":8576532,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576537,"byte_end":8576566,"line_start":167,"line_end":167,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576571,"byte_end":8576574,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576579,"byte_end":8576606,"line_start":169,"line_end":169,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576611,"byte_end":8576658,"line_start":170,"line_end":170,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576663,"byte_end":8576666,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576671,"byte_end":8576695,"line_start":172,"line_end":172,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576700,"byte_end":8576759,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576764,"byte_end":8576803,"line_start":174,"line_end":174,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576808,"byte_end":8576811,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576816,"byte_end":8576830,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576835,"byte_end":8576840,"line_start":177,"line_end":177,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576845,"byte_end":8576852,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576857,"byte_end":8576860,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576865,"byte_end":8576930,"line_start":180,"line_end":180,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576935,"byte_end":8576938,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576943,"byte_end":8576989,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8576994,"byte_end":8577045,"line_start":183,"line_end":183,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2722},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8577800,"byte_end":8577807,"line_start":209,"line_end":209,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"fn (self, other: OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8577537,"byte_end":8577606,"line_start":204,"line_end":204,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8577611,"byte_end":8577675,"line_start":205,"line_end":205,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8577680,"byte_end":8577732,"line_start":206,"line_end":206,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8577737,"byte_end":8577740,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8577745,"byte_end":8577788,"line_start":208,"line_end":208,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2723},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8577981,"byte_end":8577987,"line_start":214,"line_end":214,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"fn (mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Drop the write half, but don't issue a TCP shutdown.\n","sig":null,"attributes":[{"value":"/ Drop the write half, but don't issue a TCP shutdown.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8577913,"byte_end":8577969,"line_start":213,"line_end":213,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2883},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8581277,"byte_end":8581286,"line_start":58,"line_end":58,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":2884}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22570,"byte_end":22593,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2774},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8583367,"byte_end":8583374,"line_start":121,"line_end":121,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"fn <A> (addr: A) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8581365,"byte_end":8581409,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8581414,"byte_end":8581417,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8581422,"byte_end":8581496,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ [`ToSocketAddrs`] trait can be supplied as the address. Note that","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8581501,"byte_end":8581570,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ strings only implement this trait when the **`dns`** feature is enabled,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8581575,"byte_end":8581651,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/ as strings may contain domain names that need to be resolved.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8581656,"byte_end":8581721,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8581726,"byte_end":8581729,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, connect will be attempted with each","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8581734,"byte_end":8581810,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ of the addresses until a connection is successful. If none of the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8581815,"byte_end":8581884,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/ addresses result in a successful connection, the error returned from the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8581889,"byte_end":8581965,"line_start":73,"line_end":73,"column_start":5,"column_end":81}},{"value":"/ last connection attempt (the last address) is returned.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8581970,"byte_end":8582029,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582034,"byte_end":8582037,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582042,"byte_end":8582096,"line_start":76,"line_end":76,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582101,"byte_end":8582104,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582109,"byte_end":8582123,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582128,"byte_end":8582131,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582136,"byte_end":8582149,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582154,"byte_end":8582184,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582189,"byte_end":8582215,"line_start":82,"line_end":82,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582220,"byte_end":8582246,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582251,"byte_end":8582254,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582259,"byte_end":8582277,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582282,"byte_end":8582333,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582338,"byte_end":8582366,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582371,"byte_end":8582440,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582445,"byte_end":8582448,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582453,"byte_end":8582480,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582485,"byte_end":8582534,"line_start":91,"line_end":91,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582539,"byte_end":8582542,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582547,"byte_end":8582561,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582566,"byte_end":8582571,"line_start":94,"line_end":94,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582576,"byte_end":8582583,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582588,"byte_end":8582591,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582596,"byte_end":8582626,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582631,"byte_end":8582634,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582639,"byte_end":8582652,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582657,"byte_end":8582687,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582692,"byte_end":8582718,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582723,"byte_end":8582749,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582754,"byte_end":8582781,"line_start":103,"line_end":103,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582786,"byte_end":8582789,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582794,"byte_end":8582812,"line_start":105,"line_end":105,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582817,"byte_end":8582868,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582873,"byte_end":8582901,"line_start":107,"line_end":107,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect((Ipv4Addr::new(127, 0, 0, 1), 8080)).await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582906,"byte_end":8582994,"line_start":108,"line_end":108,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8582999,"byte_end":8583002,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8583007,"byte_end":8583034,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8583039,"byte_end":8583088,"line_start":111,"line_end":111,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8583093,"byte_end":8583096,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8583101,"byte_end":8583115,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8583120,"byte_end":8583125,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8583130,"byte_end":8583137,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8583142,"byte_end":8583145,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8583150,"byte_end":8583221,"line_start":117,"line_end":117,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8583226,"byte_end":8583229,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8583234,"byte_end":8583291,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8583296,"byte_end":8583349,"line_start":120,"line_end":120,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2784},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8585807,"byte_end":8585815,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"fn (stream: net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8584840,"byte_end":8584897,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8584902,"byte_end":8584905,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This function will convert a TCP stream created by the standard library","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8584910,"byte_end":8584985,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ to a TCP stream ready to be used with the provided event loop handle.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8584990,"byte_end":8585063,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8585068,"byte_end":8585071,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8585076,"byte_end":8585090,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8585095,"byte_end":8585098,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8585103,"byte_end":8585121,"line_start":173,"line_end":173,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8585126,"byte_end":8585152,"line_start":174,"line_end":174,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8585157,"byte_end":8585187,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8585192,"byte_end":8585195,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8585200,"byte_end":8585218,"line_start":177,"line_end":177,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8585223,"byte_end":8585274,"line_start":178,"line_end":178,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8585279,"byte_end":8585353,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8585358,"byte_end":8585412,"line_start":180,"line_end":180,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8585417,"byte_end":8585431,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8585436,"byte_end":8585441,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8585446,"byte_end":8585453,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8585458,"byte_end":8585461,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8585466,"byte_end":8585478,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8585483,"byte_end":8585486,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8585491,"byte_end":8585551,"line_start":187,"line_end":187,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8585556,"byte_end":8585559,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8585564,"byte_end":8585634,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8585639,"byte_end":8585712,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8585717,"byte_end":8585795,"line_start":191,"line_end":191,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2785},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8586212,"byte_end":8586223,"line_start":202,"line_end":202,"column_start":18,"column_end":29},"name":"connect_std","qualname":"<TcpStream>::connect_std","value":"fn (stream: net::TcpStream, addr: &SocketAddr) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2789},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587371,"byte_end":8587381,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8586972,"byte_end":8587031,"line_start":222,"line_end":222,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587036,"byte_end":8587039,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587044,"byte_end":8587058,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587063,"byte_end":8587066,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587071,"byte_end":8587084,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587089,"byte_end":8587119,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587124,"byte_end":8587127,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587132,"byte_end":8587196,"line_start":229,"line_end":229,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587201,"byte_end":8587262,"line_start":230,"line_end":230,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587267,"byte_end":8587270,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587275,"byte_end":8587318,"line_start":232,"line_end":232,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587323,"byte_end":8587335,"line_start":233,"line_end":233,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587340,"byte_end":8587347,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587352,"byte_end":8587359,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2790},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587870,"byte_end":8587879,"line_start":254,"line_end":254,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587467,"byte_end":8587531,"line_start":240,"line_end":240,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587536,"byte_end":8587539,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587544,"byte_end":8587558,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587563,"byte_end":8587566,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587571,"byte_end":8587584,"line_start":244,"line_end":244,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587589,"byte_end":8587619,"line_start":245,"line_end":245,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587624,"byte_end":8587627,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587632,"byte_end":8587696,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587701,"byte_end":8587762,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587767,"byte_end":8587770,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587775,"byte_end":8587817,"line_start":250,"line_end":250,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587822,"byte_end":8587834,"line_start":251,"line_end":251,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587839,"byte_end":8587846,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587851,"byte_end":8587858,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2791},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8589037,"byte_end":8589046,"line_start":294,"line_end":294,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"fn (&mut self, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8587964,"byte_end":8588039,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588044,"byte_end":8588117,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588122,"byte_end":8588136,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588141,"byte_end":8588144,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588149,"byte_end":8588167,"line_start":262,"line_end":262,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588172,"byte_end":8588175,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588180,"byte_end":8588205,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588210,"byte_end":8588213,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588218,"byte_end":8588269,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588274,"byte_end":8588357,"line_start":267,"line_end":267,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588362,"byte_end":8588417,"line_start":268,"line_end":268,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588422,"byte_end":8588425,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588430,"byte_end":8588442,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588447,"byte_end":8588450,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588455,"byte_end":8588530,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588535,"byte_end":8588538,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588543,"byte_end":8588557,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588562,"byte_end":8588565,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588570,"byte_end":8588583,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588588,"byte_end":8588606,"line_start":277,"line_end":277,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588611,"byte_end":8588641,"line_start":278,"line_end":278,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588646,"byte_end":8588649,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588654,"byte_end":8588687,"line_start":280,"line_end":280,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588692,"byte_end":8588695,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588700,"byte_end":8588718,"line_start":282,"line_end":282,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588723,"byte_end":8588762,"line_start":283,"line_end":283,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588767,"byte_end":8588836,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588841,"byte_end":8588871,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588876,"byte_end":8588879,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588884,"byte_end":8588906,"line_start":287,"line_end":287,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588911,"byte_end":8588953,"line_start":288,"line_end":288,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588958,"byte_end":8588976,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588981,"byte_end":8588984,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8588989,"byte_end":8589003,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8589008,"byte_end":8589013,"line_start":292,"line_end":292,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8589018,"byte_end":8589025,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2793},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590958,"byte_end":8590962,"line_start":352,"line_end":352,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8589707,"byte_end":8589777,"line_start":315,"line_end":315,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8589782,"byte_end":8589851,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8589856,"byte_end":8589895,"line_start":317,"line_end":317,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8589900,"byte_end":8589903,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8589908,"byte_end":8589982,"line_start":319,"line_end":319,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8589987,"byte_end":8590047,"line_start":320,"line_end":320,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590052,"byte_end":8590055,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590060,"byte_end":8590074,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590079,"byte_end":8590082,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590087,"byte_end":8590100,"line_start":324,"line_end":324,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590105,"byte_end":8590135,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590140,"byte_end":8590166,"line_start":326,"line_end":326,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590171,"byte_end":8590197,"line_start":327,"line_end":327,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590202,"byte_end":8590205,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590210,"byte_end":8590228,"line_start":329,"line_end":329,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590233,"byte_end":8590284,"line_start":330,"line_end":330,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590289,"byte_end":8590317,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590322,"byte_end":8590391,"line_start":332,"line_end":332,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590396,"byte_end":8590399,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590404,"byte_end":8590433,"line_start":334,"line_end":334,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590438,"byte_end":8590467,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590472,"byte_end":8590475,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590480,"byte_end":8590507,"line_start":337,"line_end":337,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590512,"byte_end":8590556,"line_start":338,"line_end":338,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590561,"byte_end":8590564,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590569,"byte_end":8590593,"line_start":340,"line_end":340,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590598,"byte_end":8590654,"line_start":341,"line_end":341,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590659,"byte_end":8590698,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590703,"byte_end":8590706,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590711,"byte_end":8590725,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590730,"byte_end":8590735,"line_start":345,"line_end":345,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590740,"byte_end":8590747,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590752,"byte_end":8590755,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590760,"byte_end":8590825,"line_start":348,"line_end":348,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590830,"byte_end":8590833,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590838,"byte_end":8590884,"line_start":350,"line_end":350,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8590889,"byte_end":8590940,"line_start":351,"line_end":351,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2797},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591831,"byte_end":8591839,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591076,"byte_end":8591142,"line_start":356,"line_end":356,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591147,"byte_end":8591150,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591155,"byte_end":8591227,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591232,"byte_end":8591301,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591306,"byte_end":8591339,"line_start":360,"line_end":360,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591344,"byte_end":8591347,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591352,"byte_end":8591366,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591371,"byte_end":8591374,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591379,"byte_end":8591392,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591397,"byte_end":8591427,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591432,"byte_end":8591458,"line_start":366,"line_end":366,"column_start":5,"column_end":31}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591463,"byte_end":8591490,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591495,"byte_end":8591498,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591503,"byte_end":8591521,"line_start":369,"line_end":369,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591526,"byte_end":8591577,"line_start":370,"line_end":370,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591582,"byte_end":8591610,"line_start":371,"line_end":371,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591615,"byte_end":8591680,"line_start":372,"line_end":372,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591685,"byte_end":8591688,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     // Shutdown the stream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591693,"byte_end":8591723,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/     stream.shutdown(Shutdown::Write)?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591728,"byte_end":8591770,"line_start":375,"line_end":375,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591775,"byte_end":8591778,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591783,"byte_end":8591797,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591802,"byte_end":8591807,"line_start":378,"line_end":378,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591812,"byte_end":8591819,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2798},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592465,"byte_end":8592472,"line_start":402,"line_end":402,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8591933,"byte_end":8591995,"line_start":384,"line_end":384,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592000,"byte_end":8592003,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592008,"byte_end":8592072,"line_start":386,"line_end":386,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592077,"byte_end":8592080,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592085,"byte_end":8592128,"line_start":388,"line_end":388,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592133,"byte_end":8592136,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592141,"byte_end":8592155,"line_start":390,"line_end":390,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592160,"byte_end":8592163,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592168,"byte_end":8592181,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592186,"byte_end":8592216,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592221,"byte_end":8592224,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592229,"byte_end":8592293,"line_start":395,"line_end":395,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592298,"byte_end":8592359,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592364,"byte_end":8592367,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592372,"byte_end":8592412,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592417,"byte_end":8592429,"line_start":399,"line_end":399,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592434,"byte_end":8592441,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592446,"byte_end":8592453,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2799},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593279,"byte_end":8593290,"line_start":426,"line_end":426,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"fn (&self, nodelay: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592549,"byte_end":8592611,"line_start":406,"line_end":406,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592616,"byte_end":8592619,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592624,"byte_end":8592693,"line_start":408,"line_end":408,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592698,"byte_end":8592771,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592776,"byte_end":8592849,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592854,"byte_end":8592929,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592934,"byte_end":8592952,"line_start":412,"line_end":412,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592957,"byte_end":8592960,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592965,"byte_end":8592979,"line_start":414,"line_end":414,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592984,"byte_end":8592987,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8592992,"byte_end":8593005,"line_start":416,"line_end":416,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593010,"byte_end":8593040,"line_start":417,"line_end":417,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593045,"byte_end":8593048,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593053,"byte_end":8593117,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593122,"byte_end":8593183,"line_start":420,"line_end":420,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593188,"byte_end":8593191,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593196,"byte_end":8593226,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593231,"byte_end":8593243,"line_start":423,"line_end":423,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593248,"byte_end":8593255,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593260,"byte_end":8593267,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2800},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593957,"byte_end":8593973,"line_start":448,"line_end":448,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpStream>::recv_buffer_size","value":"fn (&self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593391,"byte_end":8593451,"line_start":430,"line_end":430,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593456,"byte_end":8593459,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_recv_buffer_size`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593464,"byte_end":8593537,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593542,"byte_end":8593545,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: TcpStream::set_recv_buffer_size","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593550,"byte_end":8593611,"line_start":434,"line_end":434,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593616,"byte_end":8593619,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593624,"byte_end":8593638,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593643,"byte_end":8593646,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593651,"byte_end":8593664,"line_start":438,"line_end":438,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593669,"byte_end":8593699,"line_start":439,"line_end":439,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593704,"byte_end":8593707,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593712,"byte_end":8593776,"line_start":441,"line_end":441,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593781,"byte_end":8593842,"line_start":442,"line_end":442,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593847,"byte_end":8593850,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.recv_buffer_size()?);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593855,"byte_end":8593904,"line_start":444,"line_end":444,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593909,"byte_end":8593921,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593926,"byte_end":8593933,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8593938,"byte_end":8593945,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2801},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594565,"byte_end":8594585,"line_start":469,"line_end":469,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpStream>::set_recv_buffer_size","value":"fn (&self, size: usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594060,"byte_end":8594120,"line_start":452,"line_end":452,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594125,"byte_end":8594128,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's receive buffer associated","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594133,"byte_end":8594205,"line_start":454,"line_end":454,"column_start":5,"column_end":77}},{"value":"/ with the socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594210,"byte_end":8594230,"line_start":455,"line_end":455,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594235,"byte_end":8594238,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594243,"byte_end":8594257,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594262,"byte_end":8594265,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594270,"byte_end":8594283,"line_start":459,"line_end":459,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594288,"byte_end":8594318,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594323,"byte_end":8594326,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594331,"byte_end":8594395,"line_start":462,"line_end":462,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594400,"byte_end":8594461,"line_start":463,"line_end":463,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594466,"byte_end":8594469,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ stream.set_recv_buffer_size(100)?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594474,"byte_end":8594512,"line_start":465,"line_end":465,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594517,"byte_end":8594529,"line_start":466,"line_end":466,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594534,"byte_end":8594541,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594546,"byte_end":8594553,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2802},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595256,"byte_end":8595272,"line_start":491,"line_end":491,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpStream>::send_buffer_size","value":"fn (&self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594690,"byte_end":8594750,"line_start":473,"line_end":473,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594755,"byte_end":8594758,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_send_buffer_size`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594763,"byte_end":8594836,"line_start":475,"line_end":475,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594841,"byte_end":8594844,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: TcpStream::set_send_buffer_size","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594849,"byte_end":8594910,"line_start":477,"line_end":477,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594915,"byte_end":8594918,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594923,"byte_end":8594937,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594942,"byte_end":8594945,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594950,"byte_end":8594963,"line_start":481,"line_end":481,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8594968,"byte_end":8594998,"line_start":482,"line_end":482,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595003,"byte_end":8595006,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595011,"byte_end":8595075,"line_start":484,"line_end":484,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595080,"byte_end":8595141,"line_start":485,"line_end":485,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595146,"byte_end":8595149,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.send_buffer_size()?);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595154,"byte_end":8595203,"line_start":487,"line_end":487,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595208,"byte_end":8595220,"line_start":488,"line_end":488,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595225,"byte_end":8595232,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595237,"byte_end":8595244,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2803},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595861,"byte_end":8595881,"line_start":512,"line_end":512,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpStream>::set_send_buffer_size","value":"fn (&self, size: usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595359,"byte_end":8595419,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595424,"byte_end":8595427,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's send buffer associated with","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595432,"byte_end":8595506,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/ the socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595511,"byte_end":8595526,"line_start":498,"line_end":498,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595531,"byte_end":8595534,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595539,"byte_end":8595553,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595558,"byte_end":8595561,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595566,"byte_end":8595579,"line_start":502,"line_end":502,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595584,"byte_end":8595614,"line_start":503,"line_end":503,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595619,"byte_end":8595622,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595627,"byte_end":8595691,"line_start":505,"line_end":505,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595696,"byte_end":8595757,"line_start":506,"line_end":506,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595762,"byte_end":8595765,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ stream.set_send_buffer_size(100)?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595770,"byte_end":8595808,"line_start":508,"line_end":508,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595813,"byte_end":8595825,"line_start":509,"line_end":509,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595830,"byte_end":8595837,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595842,"byte_end":8595849,"line_start":511,"line_end":511,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2804},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596583,"byte_end":8596592,"line_start":535,"line_end":535,"column_start":12,"column_end":21},"name":"keepalive","qualname":"<TcpStream>::keepalive","value":"fn (&self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether keepalive messages are enabled on this socket, and if so\n the duration of time between them.","sig":null,"attributes":[{"value":"/ Returns whether keepalive messages are enabled on this socket, and if so","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8595986,"byte_end":8596062,"line_start":516,"line_end":516,"column_start":5,"column_end":81}},{"value":"/ the duration of time between them.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596067,"byte_end":8596105,"line_start":517,"line_end":517,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596110,"byte_end":8596113,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_keepalive`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596118,"byte_end":8596184,"line_start":519,"line_end":519,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596189,"byte_end":8596192,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ [`set_keepalive`]: TcpStream::set_keepalive","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596197,"byte_end":8596244,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596249,"byte_end":8596252,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596257,"byte_end":8596271,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596276,"byte_end":8596279,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596284,"byte_end":8596297,"line_start":525,"line_end":525,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596302,"byte_end":8596332,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596337,"byte_end":8596340,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596345,"byte_end":8596409,"line_start":528,"line_end":528,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596414,"byte_end":8596475,"line_start":529,"line_end":529,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596480,"byte_end":8596483,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.keepalive()?);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596488,"byte_end":8596530,"line_start":531,"line_end":531,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596535,"byte_end":8596547,"line_start":532,"line_end":532,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596552,"byte_end":8596559,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596564,"byte_end":8596571,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2805},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597623,"byte_end":8597636,"line_start":564,"line_end":564,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<TcpStream>::set_keepalive","value":"fn (&self, keepalive: Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[{"value":"/ Sets whether keepalive messages are enabled to be sent on this socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596683,"byte_end":8596757,"line_start":539,"line_end":539,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596762,"byte_end":8596765,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ On Unix, this option will set the `SO_KEEPALIVE` as well as the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596770,"byte_end":8596837,"line_start":541,"line_end":541,"column_start":5,"column_end":72}},{"value":"/ `TCP_KEEPALIVE` or `TCP_KEEPIDLE` option (depending on your platform).","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596842,"byte_end":8596916,"line_start":542,"line_end":542,"column_start":5,"column_end":79}},{"value":"/ On Windows, this will set the `SIO_KEEPALIVE_VALS` option.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596921,"byte_end":8596983,"line_start":543,"line_end":543,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596988,"byte_end":8596991,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified then keepalive messages are disabled, otherwise","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8596996,"byte_end":8597070,"line_start":545,"line_end":545,"column_start":5,"column_end":79}},{"value":"/ the duration specified will be the time to remain idle before sending a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597075,"byte_end":8597150,"line_start":546,"line_end":546,"column_start":5,"column_end":80}},{"value":"/ TCP keepalive probe.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597155,"byte_end":8597179,"line_start":547,"line_end":547,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597184,"byte_end":8597187,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597192,"byte_end":8597255,"line_start":549,"line_end":549,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597260,"byte_end":8597294,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597299,"byte_end":8597302,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597307,"byte_end":8597321,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597326,"byte_end":8597329,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597334,"byte_end":8597347,"line_start":554,"line_end":554,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597352,"byte_end":8597382,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597387,"byte_end":8597390,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597395,"byte_end":8597459,"line_start":557,"line_end":557,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597464,"byte_end":8597525,"line_start":558,"line_end":558,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597530,"byte_end":8597533,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ stream.set_keepalive(None)?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597538,"byte_end":8597570,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ # Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597575,"byte_end":8597587,"line_start":561,"line_end":561,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597592,"byte_end":8597599,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597604,"byte_end":8597611,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2806},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598267,"byte_end":8598270,"line_start":586,"line_end":586,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597755,"byte_end":8597813,"line_start":568,"line_end":568,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597818,"byte_end":8597821,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597826,"byte_end":8597886,"line_start":570,"line_end":570,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597891,"byte_end":8597894,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597899,"byte_end":8597934,"line_start":572,"line_end":572,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597939,"byte_end":8597942,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597947,"byte_end":8597961,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597966,"byte_end":8597969,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597974,"byte_end":8597987,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8597992,"byte_end":8598022,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598027,"byte_end":8598030,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598035,"byte_end":8598099,"line_start":579,"line_end":579,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598104,"byte_end":8598165,"line_start":580,"line_end":580,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598170,"byte_end":8598173,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598178,"byte_end":8598214,"line_start":582,"line_end":582,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598219,"byte_end":8598231,"line_start":583,"line_end":583,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598236,"byte_end":8598243,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598248,"byte_end":8598255,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2807},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598837,"byte_end":8598844,"line_start":607,"line_end":607,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598342,"byte_end":8598400,"line_start":590,"line_end":590,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598405,"byte_end":8598408,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598413,"byte_end":8598489,"line_start":592,"line_end":592,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598494,"byte_end":8598515,"line_start":593,"line_end":593,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598520,"byte_end":8598523,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598528,"byte_end":8598542,"line_start":595,"line_end":595,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598547,"byte_end":8598550,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598555,"byte_end":8598568,"line_start":597,"line_end":597,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598573,"byte_end":8598603,"line_start":598,"line_end":598,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598608,"byte_end":8598611,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598616,"byte_end":8598680,"line_start":600,"line_end":600,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598685,"byte_end":8598746,"line_start":601,"line_end":601,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598751,"byte_end":8598754,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598759,"byte_end":8598784,"line_start":603,"line_end":603,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598789,"byte_end":8598801,"line_start":604,"line_end":604,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598806,"byte_end":8598813,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598818,"byte_end":8598825,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2808},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599486,"byte_end":8599492,"line_start":630,"line_end":630,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"fn (&self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8598932,"byte_end":8599004,"line_start":611,"line_end":611,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599009,"byte_end":8599020,"line_start":612,"line_end":612,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599025,"byte_end":8599028,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599033,"byte_end":8599096,"line_start":614,"line_end":614,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599101,"byte_end":8599104,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599109,"byte_end":8599150,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599155,"byte_end":8599158,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599163,"byte_end":8599177,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599182,"byte_end":8599185,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599190,"byte_end":8599203,"line_start":620,"line_end":620,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599208,"byte_end":8599238,"line_start":621,"line_end":621,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599243,"byte_end":8599246,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599251,"byte_end":8599315,"line_start":623,"line_end":623,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599320,"byte_end":8599381,"line_start":624,"line_end":624,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599386,"byte_end":8599389,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599394,"byte_end":8599433,"line_start":626,"line_end":626,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599438,"byte_end":8599450,"line_start":627,"line_end":627,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599455,"byte_end":8599462,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599467,"byte_end":8599474,"line_start":629,"line_end":629,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2809},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600434,"byte_end":8600444,"line_start":658,"line_end":658,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"fn (&self, dur: Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the `SO_LINGER`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599580,"byte_end":8599650,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ option.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599655,"byte_end":8599666,"line_start":635,"line_end":635,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599671,"byte_end":8599674,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599679,"byte_end":8599754,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ and the stream is closed. If `SO_LINGER` is set, the system","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599759,"byte_end":8599822,"line_start":638,"line_end":638,"column_start":5,"column_end":68}},{"value":"/ shall block the process until it can transmit the data or until the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599827,"byte_end":8599898,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ time expires.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599903,"byte_end":8599920,"line_start":640,"line_end":640,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599925,"byte_end":8599928,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ If `SO_LINGER` is not specified, and the stream is closed, the system","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8599933,"byte_end":8600006,"line_start":642,"line_end":642,"column_start":5,"column_end":78}},{"value":"/ handles the call in a way that allows the process to continue as quickly","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600011,"byte_end":8600087,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ as possible.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600092,"byte_end":8600108,"line_start":644,"line_end":644,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600113,"byte_end":8600116,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600121,"byte_end":8600135,"line_start":646,"line_end":646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600140,"byte_end":8600143,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600148,"byte_end":8600161,"line_start":648,"line_end":648,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600166,"byte_end":8600196,"line_start":649,"line_end":649,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600201,"byte_end":8600204,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600209,"byte_end":8600273,"line_start":651,"line_end":651,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600278,"byte_end":8600339,"line_start":652,"line_end":652,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600344,"byte_end":8600347,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600352,"byte_end":8600381,"line_start":654,"line_end":654,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600386,"byte_end":8600398,"line_start":655,"line_end":655,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600403,"byte_end":8600410,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600415,"byte_end":8600422,"line_start":657,"line_end":657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2810},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600884,"byte_end":8600889,"line_start":669,"line_end":669,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"fn (&mut self) -> (ReadHalf<'_>, WriteHalf<'_>)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600548,"byte_end":8600625,"line_start":662,"line_end":662,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600630,"byte_end":8600676,"line_start":663,"line_end":663,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600681,"byte_end":8600684,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600689,"byte_end":8600768,"line_start":665,"line_end":665,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600773,"byte_end":8600816,"line_start":666,"line_end":666,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600821,"byte_end":8600824,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600829,"byte_end":8600872,"line_start":668,"line_end":668,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2811},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8601472,"byte_end":8601482,"line_start":683,"line_end":683,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"fn (self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8600967,"byte_end":8601044,"line_start":673,"line_end":673,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8601049,"byte_end":8601095,"line_start":674,"line_end":674,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8601100,"byte_end":8601103,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8601108,"byte_end":8601186,"line_start":676,"line_end":676,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8601191,"byte_end":8601239,"line_start":677,"line_end":677,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8601244,"byte_end":8601247,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ **Note::** Dropping the write half will shutdown the write half of the TCP","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8601252,"byte_end":8601330,"line_start":679,"line_end":679,"column_start":5,"column_end":83}},{"value":"/ stream. This is equivalent to calling `shutdown(Write)` on the `TcpStream`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8601335,"byte_end":8601414,"line_start":680,"line_end":680,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8601419,"byte_end":8601422,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8601427,"byte_end":8601460,"line_start":682,"line_end":682,"column_start":5,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":2885},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"udp","qualname":"::net::udp","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","parent":null,"children":[{"krate":0,"index":2886},{"krate":0,"index":2969},{"krate":0,"index":2970},{"krate":0,"index":3007}],"decl_id":null,"docs":" UDP utility types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23406,"byte_end":23429,"line_start":340,"line_end":340,"column_start":13,"column_end":36}},{"value":"! UDP utility types.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":8608735,"byte_end":8608757,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3012},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8609213,"byte_end":8609222,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::socket::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":3013}],"decl_id":null,"docs":" A UDP socket\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23406,"byte_end":23429,"line_start":340,"line_end":340,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2906},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8609420,"byte_end":8609424,"line_start":22,"line_end":22,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"fn <A> (addr: A) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.\n","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8609301,"byte_end":8609373,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8609378,"byte_end":8609402,"line_start":21,"line_end":21,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2913},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8611127,"byte_end":8611135,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"fn (socket: net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from the previously bound socket provided.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from the previously bound socket provided.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8610259,"byte_end":8610331,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8610336,"byte_end":8610339,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The socket given will be registered with the event loop that `handle`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8610344,"byte_end":8610417,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ is associated with. This function requires that `socket` has previously","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8610422,"byte_end":8610497,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ been bound to an address to work correctly.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8610502,"byte_end":8610549,"line_start":55,"line_end":55,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8610554,"byte_end":8610557,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with net2's `UdpBuilder` interface to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8610562,"byte_end":8610635,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8610640,"byte_end":8610715,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8610720,"byte_end":8610773,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8610778,"byte_end":8610781,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8610786,"byte_end":8610798,"line_start":61,"line_end":61,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8610803,"byte_end":8610806,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8610811,"byte_end":8610871,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8610876,"byte_end":8610879,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8610884,"byte_end":8610954,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8610959,"byte_end":8611032,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8611037,"byte_end":8611115,"line_start":67,"line_end":67,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2914},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8611519,"byte_end":8611524,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"split","qualname":"<UdpSocket>::split","value":"fn (self) -> (RecvHalf, SendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits the `UdpSocket` into a receive half and a send half. The two parts\n can be used to receive and send datagrams concurrently, even from two\n different tasks.\n","sig":null,"attributes":[{"value":"/ Splits the `UdpSocket` into a receive half and a send half. The two parts","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8611327,"byte_end":8611404,"line_start":74,"line_end":74,"column_start":5,"column_end":82}},{"value":"/ can be used to receive and send datagrams concurrently, even from two","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8611409,"byte_end":8611482,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ different tasks.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8611487,"byte_end":8611507,"line_start":76,"line_end":76,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2915},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8611659,"byte_end":8611669,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8611588,"byte_end":8611647,"line_start":81,"line_end":81,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2916},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8611941,"byte_end":8611948,"line_start":89,"line_end":89,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"fn <A> (&self, addr: A) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.\n","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8611755,"byte_end":8611829,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8611834,"byte_end":8611907,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8611912,"byte_end":8611923,"line_start":88,"line_end":88,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2921},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8612885,"byte_end":8612889,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"fn (&mut self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8612482,"byte_end":8612580,"line_start":108,"line_end":108,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8612585,"byte_end":8612656,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8612661,"byte_end":8612664,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8612669,"byte_end":8612752,"line_start":111,"line_end":111,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8612757,"byte_end":8612817,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8612822,"byte_end":8612825,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8612830,"byte_end":8612867,"line_start":114,"line_end":114,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2925},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8613616,"byte_end":8613625,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"fn (&self, cx: &mut Context<'_>, buf: &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2926},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8614643,"byte_end":8614647,"line_start":154,"line_end":154,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8614003,"byte_end":8614082,"line_start":142,"line_end":142,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8614087,"byte_end":8614171,"line_start":143,"line_end":143,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8614176,"byte_end":8614208,"line_start":144,"line_end":144,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8614213,"byte_end":8614216,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8614221,"byte_end":8614302,"line_start":146,"line_end":146,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8614307,"byte_end":8614390,"line_start":147,"line_end":147,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8614395,"byte_end":8614429,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8614434,"byte_end":8614437,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8614442,"byte_end":8614525,"line_start":150,"line_end":150,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8614530,"byte_end":8614575,"line_start":151,"line_end":151,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8614580,"byte_end":8614583,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8614588,"byte_end":8614625,"line_start":153,"line_end":153,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2930},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8614787,"byte_end":8614796,"line_start":159,"line_end":159,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"fn (&self, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2931},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8615515,"byte_end":8615522,"line_start":176,"line_end":176,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"fn <A> (&mut self, buf: &[u8], target: A) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8615224,"byte_end":8615296,"line_start":171,"line_end":171,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8615301,"byte_end":8615372,"line_start":172,"line_end":172,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8615377,"byte_end":8615380,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8615385,"byte_end":8615461,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8615466,"byte_end":8615497,"line_start":175,"line_end":175,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2936},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8615994,"byte_end":8616006,"line_start":190,"line_end":190,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"fn (&self, cx: &mut Context<'_>, buf: &[u8], target: &SocketAddr) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2937},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8616845,"byte_end":8616854,"line_start":213,"line_end":213,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8616455,"byte_end":8616534,"line_start":207,"line_end":207,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8616539,"byte_end":8616606,"line_start":208,"line_end":208,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8616611,"byte_end":8616614,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8616619,"byte_end":8616697,"line_start":210,"line_end":210,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8616702,"byte_end":8616780,"line_start":211,"line_end":211,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8616785,"byte_end":8616827,"line_start":212,"line_end":212,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2941},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8617013,"byte_end":8617027,"line_start":218,"line_end":218,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"fn (&self, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<Result<(usize, SocketAddr), io::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2942},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8617729,"byte_end":8617738,"line_start":239,"line_end":239,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8617512,"byte_end":8617576,"line_start":234,"line_end":234,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8617581,"byte_end":8617584,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8617589,"byte_end":8617655,"line_start":236,"line_end":236,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8617660,"byte_end":8617663,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: method@Self::set_broadcast","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8617668,"byte_end":8617717,"line_start":238,"line_end":238,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2943},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8617994,"byte_end":8618007,"line_start":247,"line_end":247,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8617817,"byte_end":8617881,"line_start":243,"line_end":243,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8617886,"byte_end":8617889,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8617894,"byte_end":8617965,"line_start":245,"line_end":245,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8617970,"byte_end":8617982,"line_start":246,"line_end":246,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2944},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8618346,"byte_end":8618363,"line_start":256,"line_end":256,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8618100,"byte_end":8618169,"line_start":251,"line_end":251,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8618174,"byte_end":8618177,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8618182,"byte_end":8618256,"line_start":253,"line_end":253,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8618261,"byte_end":8618264,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: method@Self::set_multicast_loop_v4","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8618269,"byte_end":8618334,"line_start":255,"line_end":255,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2945},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8618703,"byte_end":8618724,"line_start":267,"line_end":267,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8618450,"byte_end":8618519,"line_start":260,"line_end":260,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8618524,"byte_end":8618527,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8618532,"byte_end":8618606,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8618611,"byte_end":8618614,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8618619,"byte_end":8618629,"line_start":264,"line_end":264,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8618634,"byte_end":8618637,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8618642,"byte_end":8618691,"line_start":266,"line_end":266,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2946},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8619067,"byte_end":8619083,"line_start":276,"line_end":276,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8618825,"byte_end":8618893,"line_start":271,"line_end":271,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8618898,"byte_end":8618901,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8618906,"byte_end":8618979,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8618984,"byte_end":8618987,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: method@Self::set_multicast_ttl_v4","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8618992,"byte_end":8619055,"line_start":275,"line_end":275,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2947},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8619562,"byte_end":8619582,"line_start":289,"line_end":289,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8619168,"byte_end":8619236,"line_start":280,"line_end":280,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8619241,"byte_end":8619244,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8619249,"byte_end":8619319,"line_start":282,"line_end":282,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8619324,"byte_end":8619398,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8619403,"byte_end":8619465,"line_start":284,"line_end":284,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8619470,"byte_end":8619473,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8619478,"byte_end":8619488,"line_start":286,"line_end":286,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8619493,"byte_end":8619496,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8619501,"byte_end":8619550,"line_start":288,"line_end":288,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2948},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8619931,"byte_end":8619948,"line_start":298,"line_end":298,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8619683,"byte_end":8619754,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8619759,"byte_end":8619762,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8619767,"byte_end":8619841,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8619846,"byte_end":8619849,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: method@Self::set_multicast_loop_v6","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8619854,"byte_end":8619919,"line_start":297,"line_end":297,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2949},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8620292,"byte_end":8620313,"line_start":309,"line_end":309,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8620035,"byte_end":8620106,"line_start":302,"line_end":302,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8620111,"byte_end":8620114,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8620119,"byte_end":8620195,"line_start":304,"line_end":304,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8620200,"byte_end":8620203,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8620208,"byte_end":8620218,"line_start":306,"line_end":306,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8620223,"byte_end":8620226,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8620231,"byte_end":8620280,"line_start":308,"line_end":308,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2950},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8620607,"byte_end":8620610,"line_start":318,"line_end":318,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8620414,"byte_end":8620472,"line_start":313,"line_end":313,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8620477,"byte_end":8620480,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8620485,"byte_end":8620545,"line_start":315,"line_end":315,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8620550,"byte_end":8620553,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8620558,"byte_end":8620595,"line_start":317,"line_end":317,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2951},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8620867,"byte_end":8620874,"line_start":326,"line_end":326,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8620682,"byte_end":8620740,"line_start":322,"line_end":322,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8620745,"byte_end":8620748,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8620753,"byte_end":8620829,"line_start":324,"line_end":324,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8620834,"byte_end":8620855,"line_start":325,"line_end":325,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2952},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8621392,"byte_end":8621409,"line_start":337,"line_end":337,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"fn (&self, multiaddr: Ipv4Addr, interface: Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8620962,"byte_end":8621020,"line_start":330,"line_end":330,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8621025,"byte_end":8621028,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8621033,"byte_end":8621107,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8621112,"byte_end":8621185,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8621190,"byte_end":8621262,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8621267,"byte_end":8621337,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8621342,"byte_end":8621380,"line_start":336,"line_end":336,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2953},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8621874,"byte_end":8621891,"line_start":346,"line_end":346,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"fn (&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8621558,"byte_end":8621618,"line_start":341,"line_end":341,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8621623,"byte_end":8621626,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8621631,"byte_end":8621705,"line_start":343,"line_end":343,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8621710,"byte_end":8621783,"line_start":344,"line_end":344,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8621788,"byte_end":8621862,"line_start":345,"line_end":345,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2954},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8622258,"byte_end":8622276,"line_start":355,"line_end":355,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"fn (&self, multiaddr: Ipv4Addr, interface: Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8622034,"byte_end":8622093,"line_start":350,"line_end":350,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8622098,"byte_end":8622101,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8622106,"byte_end":8622176,"line_start":352,"line_end":352,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8622181,"byte_end":8622184,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: method@Self::join_multicast_v4","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8622189,"byte_end":8622246,"line_start":354,"line_end":354,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2955},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8622652,"byte_end":8622670,"line_start":364,"line_end":364,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"fn (&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8622426,"byte_end":8622487,"line_start":359,"line_end":359,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8622492,"byte_end":8622495,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8622500,"byte_end":8622570,"line_start":361,"line_end":361,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8622575,"byte_end":8622578,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: method@Self::join_multicast_v6","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8622583,"byte_end":8622640,"line_start":363,"line_end":363,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3014},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8625305,"byte_end":8625313,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"SendHalf","qualname":"::net::udp::split::SendHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The send half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The send half after [`split`](super::UdpSocket::split).","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8625117,"byte_end":8625176,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8625177,"byte_end":8625180,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Use [`send_to`](method@Self::send_to) or [`send`](method@Self::send) to send","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8625181,"byte_end":8625261,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ datagrams.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8625262,"byte_end":8625276,"line_start":27,"line_end":27,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3019},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8625527,"byte_end":8625535,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"RecvHalf","qualname":"::net::udp::split::RecvHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The recv half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The recv half after [`split`](super::UdpSocket::split).","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8625332,"byte_end":8625391,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8625392,"byte_end":8625395,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Use [`recv_from`](method@Self::recv_from) or [`recv`](method@Self::recv) to receive","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8625396,"byte_end":8625483,"line_start":33,"line_end":33,"column_start":1,"column_end":88}},{"value":"/ datagrams.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8625484,"byte_end":8625498,"line_start":34,"line_end":34,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3024},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8625877,"byte_end":8625889,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::udp::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating two halves were not from the same socket, and thus could\n not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating two halves were not from the same socket, and thus could","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8625748,"byte_end":8625825,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ not be `reunite`d.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8625826,"byte_end":8625848,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2984},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8626926,"byte_end":8626933,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"reunite","qualname":"<RecvHalf>::reunite","value":"fn (self, other: SendHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8626711,"byte_end":8626782,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8626787,"byte_end":8626853,"line_start":76,"line_end":76,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8626858,"byte_end":8626914,"line_start":77,"line_end":77,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2985},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8627424,"byte_end":8627433,"line_start":88,"line_end":88,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<RecvHalf>::recv_from","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8627034,"byte_end":8627113,"line_start":82,"line_end":82,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8627118,"byte_end":8627185,"line_start":83,"line_end":83,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8627190,"byte_end":8627193,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8627198,"byte_end":8627276,"line_start":85,"line_end":85,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8627281,"byte_end":8627359,"line_start":86,"line_end":86,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8627364,"byte_end":8627406,"line_start":87,"line_end":87,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2989},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8628213,"byte_end":8628217,"line_start":104,"line_end":104,"column_start":18,"column_end":22},"name":"recv","qualname":"<RecvHalf>::recv","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8627568,"byte_end":8627647,"line_start":92,"line_end":92,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8627652,"byte_end":8627736,"line_start":93,"line_end":93,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8627741,"byte_end":8627773,"line_start":94,"line_end":94,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8627778,"byte_end":8627781,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8627786,"byte_end":8627867,"line_start":96,"line_end":96,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8627872,"byte_end":8627955,"line_start":97,"line_end":97,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8627960,"byte_end":8627994,"line_start":98,"line_end":98,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8627999,"byte_end":8628002,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8628007,"byte_end":8628090,"line_start":100,"line_end":100,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8628095,"byte_end":8628140,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8628145,"byte_end":8628148,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8628153,"byte_end":8628195,"line_start":103,"line_end":103,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2994},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8628566,"byte_end":8628573,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SendHalf>::reunite","value":"fn (self, other: RecvHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8628351,"byte_end":8628422,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8628427,"byte_end":8628493,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8628498,"byte_end":8628554,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2995},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8628965,"byte_end":8628972,"line_start":122,"line_end":122,"column_start":18,"column_end":25},"name":"send_to","qualname":"<SendHalf>::send_to","value":"fn (&mut self, buf: &[u8], target: &SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8628674,"byte_end":8628746,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8628751,"byte_end":8628822,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8628827,"byte_end":8628830,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8628835,"byte_end":8628911,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8628916,"byte_end":8628947,"line_start":121,"line_end":121,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2999},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8629524,"byte_end":8629528,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"send","qualname":"<SendHalf>::send","value":"fn (&mut self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8629116,"byte_end":8629214,"line_start":126,"line_end":126,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8629219,"byte_end":8629290,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8629295,"byte_end":8629298,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8629303,"byte_end":8629386,"line_start":129,"line_end":129,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8629391,"byte_end":8629451,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8629456,"byte_end":8629459,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8629464,"byte_end":8629506,"line_start":132,"line_end":132,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":3030},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::net::unix","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","parent":null,"children":[{"krate":0,"index":3031},{"krate":0,"index":3092},{"krate":0,"index":3107},{"krate":0,"index":3108},{"krate":0,"index":3154},{"krate":0,"index":3155},{"krate":0,"index":3179},{"krate":0,"index":3182},{"krate":0,"index":3249},{"krate":0,"index":3250},{"krate":0,"index":3262}],"decl_id":null,"docs":" Unix domain socket utility types\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23599,"byte_end":23633,"line_start":350,"line_end":350,"column_start":13,"column_end":47}},{"value":"! Unix domain socket utility types","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":8629836,"byte_end":8629872,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3266},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8630510,"byte_end":8630522,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"UnixDatagram","qualname":"::net::unix::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":3267}],"decl_id":null,"docs":" An I/O object representing a Unix datagram socket.\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23599,"byte_end":23633,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3049},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8630679,"byte_end":8630683,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"fn <P> (path: P) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` bound to the specified path.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` bound to the specified path.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8630606,"byte_end":8630667,"line_start":21,"line_end":21,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3051},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8631146,"byte_end":8631150,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"fn () -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8630866,"byte_end":8630915,"line_start":30,"line_end":30,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8630920,"byte_end":8630923,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8630928,"byte_end":8630999,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8631004,"byte_end":8631074,"line_start":33,"line_end":33,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8631079,"byte_end":8631134,"line_start":34,"line_end":34,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3052},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8631976,"byte_end":8631984,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"fn (datagram: net::UnixDatagram) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixDatagram` in the standard library and returns a\n nonblocking `UnixDatagram` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixDatagram` in the standard library and returns a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8631361,"byte_end":8631428,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixDatagram` from this crate.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8631433,"byte_end":8631480,"line_start":44,"line_end":44,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8631485,"byte_end":8631488,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ The returned datagram will be associated with the given event loop","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8631493,"byte_end":8631563,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8631568,"byte_end":8631622,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8631627,"byte_end":8631630,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8631635,"byte_end":8631647,"line_start":49,"line_end":49,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8631652,"byte_end":8631655,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8631660,"byte_end":8631720,"line_start":51,"line_end":51,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8631725,"byte_end":8631728,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8631733,"byte_end":8631803,"line_start":53,"line_end":53,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8631808,"byte_end":8631881,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8631886,"byte_end":8631964,"line_start":55,"line_end":55,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3054},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8632435,"byte_end":8632442,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"fn () -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` which is not bound to any address.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` which is not bound to any address.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8632356,"byte_end":8632423,"line_start":67,"line_end":67,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3055},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8632795,"byte_end":8632802,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"fn <P> (&self, path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8632576,"byte_end":8632625,"line_start":73,"line_end":73,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8632630,"byte_end":8632633,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ The `send` method may be used to send data to the specified address.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8632638,"byte_end":8632710,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ `recv` and `recv_from` will only receive data from that address.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8632715,"byte_end":8632783,"line_start":76,"line_end":76,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3057},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8632974,"byte_end":8632978,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"fn (&mut self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8632906,"byte_end":8632956,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3062},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8634173,"byte_end":8634177,"line_start":113,"line_end":113,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8634121,"byte_end":8634155,"line_start":112,"line_end":112,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3067},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8634855,"byte_end":8634862,"line_start":134,"line_end":134,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"fn <P> (&mut self, buf: &[u8], target: P) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8634783,"byte_end":8634837,"line_start":133,"line_end":133,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3073},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8635583,"byte_end":8635592,"line_start":159,"line_end":159,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8635531,"byte_end":8635565,"line_start":158,"line_end":158,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3078},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8636319,"byte_end":8636329,"line_start":180,"line_end":180,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8636248,"byte_end":8636307,"line_start":179,"line_end":179,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8636545,"byte_end":8636554,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8636415,"byte_end":8636461,"line_start":184,"line_end":184,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8636466,"byte_end":8636469,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8636474,"byte_end":8636533,"line_start":186,"line_end":186,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3080},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8636698,"byte_end":8636708,"line_start":192,"line_end":192,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8636639,"byte_end":8636686,"line_start":191,"line_end":191,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3081},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8637082,"byte_end":8637090,"line_start":201,"line_end":201,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8636801,"byte_end":8636867,"line_start":196,"line_end":196,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8636872,"byte_end":8636875,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8636880,"byte_end":8636948,"line_start":198,"line_end":198,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8636953,"byte_end":8637023,"line_start":199,"line_end":199,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8637028,"byte_end":8637070,"line_start":200,"line_end":200,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3268},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8638468,"byte_end":8638476,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::unix::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":3270}],"decl_id":null,"docs":" Stream of listeners\n","sig":null,"attributes":[{"value":"/ Stream of listeners","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8638367,"byte_end":8638390,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8638408,"byte_end":8638456,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3103},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8638985,"byte_end":8638996,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"fn (mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<UnixStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `UnixStream` by polling inner `UnixListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `UnixStream` by polling inner `UnixListener` to accept","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8638656,"byte_end":8638731,"line_start":19,"line_end":19,"column_start":5,"column_end":80}},{"value":"/ connection.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8638736,"byte_end":8638751,"line_start":20,"line_end":20,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8638756,"byte_end":8638759,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ If `UnixListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8638764,"byte_end":8638834,"line_start":22,"line_end":22,"column_start":5,"column_end":75}},{"value":"/ current task will be notified by a waker.  Otherwise `Poll::Ready` with","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8638839,"byte_end":8638914,"line_start":23,"line_end":23,"column_start":5,"column_end":80}},{"value":"/ `Result` containing `UnixStream` will be returned.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8638919,"byte_end":8638973,"line_start":24,"line_end":24,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3274},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8641322,"byte_end":8641334,"line_start":49,"line_end":49,"column_start":16,"column_end":28},"name":"UnixListener","qualname":"::net::unix::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":3275}],"decl_id":null,"docs":" A Unix socket which can accept connections from other Unix sockets.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23599,"byte_end":23633,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3129},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8641833,"byte_end":8641837,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"fn <P> (path: P) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified path.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8641418,"byte_end":8641479,"line_start":55,"line_end":55,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8641484,"byte_end":8641487,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8641492,"byte_end":8641504,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8641509,"byte_end":8641512,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8641517,"byte_end":8641577,"line_start":59,"line_end":59,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8641582,"byte_end":8641585,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8641590,"byte_end":8641660,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8641665,"byte_end":8641738,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8641743,"byte_end":8641821,"line_start":63,"line_end":63,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3131},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8642681,"byte_end":8642689,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"fn (listener: net::UnixListener) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixListener` in the standard library and returns a\n nonblocking `UnixListener` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixListener` in the standard library and returns a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8642066,"byte_end":8642133,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixListener` from this crate.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8642138,"byte_end":8642185,"line_start":74,"line_end":74,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8642190,"byte_end":8642193,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The returned listener will be associated with the given event loop","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8642198,"byte_end":8642268,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8642273,"byte_end":8642327,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8642332,"byte_end":8642335,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8642340,"byte_end":8642352,"line_start":79,"line_end":79,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8642357,"byte_end":8642360,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8642365,"byte_end":8642425,"line_start":81,"line_end":81,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8642430,"byte_end":8642433,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8642438,"byte_end":8642508,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8642513,"byte_end":8642586,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8642591,"byte_end":8642669,"line_start":85,"line_end":85,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3132},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8642976,"byte_end":8642986,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8642910,"byte_end":8642964,"line_start":92,"line_end":92,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3133},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8643131,"byte_end":8643141,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8643072,"byte_end":8643119,"line_start":97,"line_end":97,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3134},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8643307,"byte_end":8643313,"line_start":103,"line_end":103,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"fn (&mut self) -> io::Result<(UnixStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.\n","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8643234,"byte_end":8643289,"line_start":102,"line_end":102,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3140},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645782,"byte_end":8645790,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"incoming","qualname":"<UnixListener>::incoming","value":"fn (&mut self) -> Incoming<'_>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8644418,"byte_end":8644492,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8644497,"byte_end":8644500,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Note that `UnixListener` also directly implements `Stream`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8644505,"byte_end":8644568,"line_start":139,"line_end":139,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8644573,"byte_end":8644576,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8644581,"byte_end":8644657,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8644662,"byte_end":8644731,"line_start":142,"line_end":142,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8644736,"byte_end":8644765,"line_start":143,"line_end":143,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8644770,"byte_end":8644773,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8644778,"byte_end":8644790,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8644795,"byte_end":8644798,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8644803,"byte_end":8644878,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8644883,"byte_end":8644958,"line_start":148,"line_end":148,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8644963,"byte_end":8645037,"line_start":149,"line_end":149,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645042,"byte_end":8645117,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645122,"byte_end":8645130,"line_start":151,"line_end":151,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645135,"byte_end":8645138,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645143,"byte_end":8645157,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645162,"byte_end":8645165,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645170,"byte_end":8645183,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixListener;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645188,"byte_end":8645221,"line_start":156,"line_end":156,"column_start":5,"column_end":38}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645226,"byte_end":8645259,"line_start":157,"line_end":157,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645264,"byte_end":8645267,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645272,"byte_end":8645290,"line_start":159,"line_end":159,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645295,"byte_end":8645316,"line_start":160,"line_end":160,"column_start":5,"column_end":26}},{"value":"/     let mut listener = UnixListener::bind(\"/path/to/the/socket\").unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645321,"byte_end":8645399,"line_start":161,"line_end":161,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645404,"byte_end":8645451,"line_start":162,"line_end":162,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645456,"byte_end":8645459,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645464,"byte_end":8645520,"line_start":164,"line_end":164,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645525,"byte_end":8645551,"line_start":165,"line_end":165,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645556,"byte_end":8645587,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645592,"byte_end":8645636,"line_start":167,"line_end":167,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645641,"byte_end":8645658,"line_start":168,"line_end":168,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645663,"byte_end":8645716,"line_start":169,"line_end":169,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645721,"byte_end":8645734,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645739,"byte_end":8645748,"line_start":171,"line_end":171,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645753,"byte_end":8645758,"line_start":172,"line_end":172,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645763,"byte_end":8645770,"line_start":173,"line_end":173,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3276},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8647901,"byte_end":8647909,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::unix::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read half of a `UnixStream`.\n","sig":null,"attributes":[{"value":"/ Read half of a `UnixStream`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8647840,"byte_end":8647872,"line_start":20,"line_end":20,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3283},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8647994,"byte_end":8648003,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::unix::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Write half of a `UnixStream`.\n","sig":null,"attributes":[{"value":"/ Write half of a `UnixStream`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8647932,"byte_end":8647965,"line_start":24,"line_end":24,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3290},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8649969,"byte_end":8649979,"line_start":23,"line_end":23,"column_start":16,"column_end":26},"name":"UnixStream","qualname":"::net::unix::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":3291}],"decl_id":null,"docs":" A structure representing a connected Unix socket.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23599,"byte_end":23633,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3215},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8650301,"byte_end":8650308,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"fn <P> (path: P) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8650059,"byte_end":8650102,"line_start":29,"line_end":29,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8650107,"byte_end":8650110,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This function will create a new Unix socket and connect to the path","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8650115,"byte_end":8650186,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"/ specified, associating the returned stream with the default event loop's","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8650191,"byte_end":8650267,"line_start":32,"line_end":32,"column_start":5,"column_end":81}},{"value":"/ handle.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8650272,"byte_end":8650283,"line_start":33,"line_end":33,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3220},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8651193,"byte_end":8651201,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"fn (stream: net::UnixStream) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixStream` in the standard library and returns a\n nonblocking `UnixStream` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixStream` in the standard library and returns a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8650584,"byte_end":8650649,"line_start":45,"line_end":45,"column_start":5,"column_end":70}},{"value":"/ nonblocking `UnixStream` from this crate.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8650654,"byte_end":8650699,"line_start":46,"line_end":46,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8650704,"byte_end":8650707,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be associated with the given event loop","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8650712,"byte_end":8650780,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8650785,"byte_end":8650839,"line_start":49,"line_end":49,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8650844,"byte_end":8650847,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8650852,"byte_end":8650864,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8650869,"byte_end":8650872,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8650877,"byte_end":8650937,"line_start":53,"line_end":53,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8650942,"byte_end":8650945,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8650950,"byte_end":8651020,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8651025,"byte_end":8651098,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8651103,"byte_end":8651181,"line_start":57,"line_end":57,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3221},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8651685,"byte_end":8651689,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"fn () -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8651405,"byte_end":8651454,"line_start":65,"line_end":65,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8651459,"byte_end":8651462,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8651467,"byte_end":8651538,"line_start":67,"line_end":67,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8651543,"byte_end":8651613,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8651618,"byte_end":8651673,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3223},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8652130,"byte_end":8652140,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8652050,"byte_end":8652118,"line_start":83,"line_end":83,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3224},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8652307,"byte_end":8652316,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8652226,"byte_end":8652295,"line_start":88,"line_end":88,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3225},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8652495,"byte_end":8652504,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"peer_cred","qualname":"<UnixStream>::peer_cred","value":"fn (&self) -> io::Result<UCred>","parent":null,"children":[],"decl_id":null,"docs":" Returns effective credentials of the process which called `connect` or `pair`.\n","sig":null,"attributes":[{"value":"/ Returns effective credentials of the process which called `connect` or `pair`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8652401,"byte_end":8652483,"line_start":93,"line_end":93,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3226},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8652640,"byte_end":8652650,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8652581,"byte_end":8652628,"line_start":98,"line_end":98,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3227},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8653024,"byte_end":8653032,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8652743,"byte_end":8652809,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8652814,"byte_end":8652817,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8652822,"byte_end":8652890,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8652895,"byte_end":8652965,"line_start":106,"line_end":106,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8652970,"byte_end":8653012,"line_start":107,"line_end":107,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3228},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8653266,"byte_end":8653271,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"split","qualname":"<UnixStream>::split","value":"fn (&mut self) -> (ReadHalf<'_>, WriteHalf<'_>)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.\n","sig":null,"attributes":[{"value":"/ Split a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8653126,"byte_end":8653203,"line_start":112,"line_end":112,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8653208,"byte_end":8653254,"line_start":113,"line_end":113,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":3292},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":8656852,"byte_end":8656857,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"UCred","qualname":"::net::unix::ucred::UCred","value":"UCred { uid, gid }","parent":null,"children":[{"krate":0,"index":3293},{"krate":0,"index":3294}],"decl_id":null,"docs":" Credentials of a process\n","sig":null,"attributes":[{"value":"/ Credentials of a process","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":8656761,"byte_end":8656789,"line_start":3,"line_end":3,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":3293},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":8656905,"byte_end":8656908,"line_start":7,"line_end":7,"column_start":9,"column_end":12},"name":"uid","qualname":"::net::unix::ucred::UCred::uid","value":"u32","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" UID (user ID) of the process\n","sig":null,"attributes":[{"value":"/ UID (user ID) of the process","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":8656864,"byte_end":8656896,"line_start":6,"line_end":6,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3294},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":8656963,"byte_end":8656966,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"gid","qualname":"::net::unix::ucred::UCred::gid","value":"u32","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" GID (group ID) of the process\n","sig":null,"attributes":[{"value":"/ GID (group ID) of the process","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":8656921,"byte_end":8656954,"line_start":8,"line_end":8,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":545},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":93380,"byte_end":93386,"line_start":55,"line_end":55,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":93317,"byte_end":93370,"line_start":54,"line_end":54,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":546},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":93439,"byte_end":93444,"line_start":58,"line_end":58,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":93401,"byte_end":93429,"line_start":57,"line_end":57,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":556},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":3410}],"decl_id":null,"docs":" A \"prelude\" for users of the `tokio` crate.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105035,"byte_end":105053,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"! A \"prelude\" for users of the `tokio` crate.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105055,"byte_end":105102,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105103,"byte_end":105106,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This prelude is similar to the standard library's prelude in that you'll","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105107,"byte_end":105183,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"! almost always want to import its entire contents, but unlike the standard","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105184,"byte_end":105261,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"! library's prelude you'll have to do so manually:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105262,"byte_end":105314,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105315,"byte_end":105318,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105319,"byte_end":105326,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"! # #![allow(warnings)]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105327,"byte_end":105352,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105353,"byte_end":105379,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105380,"byte_end":105387,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105388,"byte_end":105391,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! The prelude may grow over time as additional items see ubiquitous use.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105392,"byte_end":105466,"line_start":14,"line_end":14,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":562},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":3425},{"krate":0,"index":3516},{"krate":0,"index":3517},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":668},{"krate":0,"index":671},{"krate":0,"index":683},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":4085},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":4086},{"krate":0,"index":4090},{"krate":0,"index":4092},{"krate":0,"index":4099},{"krate":0,"index":722},{"krate":0,"index":723}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"! The Tokio runtime.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105678,"byte_end":105700,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105701,"byte_end":105704,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Unlike other Rust programs, asynchronous applications require","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105705,"byte_end":105770,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"! runtime support. In particular, the following runtime services are","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105771,"byte_end":105841,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"! necessary:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105842,"byte_end":105856,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105857,"byte_end":105860,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105861,"byte_end":105939,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"!   dispatches I/O events to tasks that depend on them.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105940,"byte_end":105997,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"! * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105998,"byte_end":106068,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"! * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106069,"byte_end":106141,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106142,"byte_end":106145,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106146,"byte_end":106226,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"! them to be started, shut down, and configured together. However, most","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106227,"byte_end":106300,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"! applications won't need to use [`Runtime`] directly. Instead, they can","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106301,"byte_end":106375,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"! use the [`tokio::main`] attribute macro, which creates a [`Runtime`] under","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106376,"byte_end":106454,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"! the hood.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106455,"byte_end":106468,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106469,"byte_end":106472,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106473,"byte_end":106484,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106485,"byte_end":106488,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! Most applications will use the [`tokio::main`] attribute macro.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106489,"byte_end":106556,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106557,"byte_end":106560,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106561,"byte_end":106574,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"! use tokio::net::TcpListener;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106575,"byte_end":106607,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106608,"byte_end":106634,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106635,"byte_end":106638,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106639,"byte_end":106657,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106658,"byte_end":106721,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"!     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106722,"byte_end":106792,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106793,"byte_end":106796,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106797,"byte_end":106811,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"!         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106812,"byte_end":106871,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106872,"byte_end":106875,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"!         tokio::spawn(async move {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106876,"byte_end":106913,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"!             let mut buf = [0; 1024];","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106914,"byte_end":106954,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106955,"byte_end":106958,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"!             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106959,"byte_end":107039,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"!             loop {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107040,"byte_end":107062,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"!                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107063,"byte_end":107126,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"!                     // socket closed","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107127,"byte_end":107167,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"!                     Ok(n) if n == 0 => return,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107168,"byte_end":107218,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"!                     Ok(n) => n,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107219,"byte_end":107254,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"!                     Err(e) => {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107255,"byte_end":107290,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"!                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107291,"byte_end":107373,"line_start":43,"line_end":43,"column_start":1,"column_end":83}},{"value":"!                         return;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107374,"byte_end":107409,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107410,"byte_end":107435,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"!                 };","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107436,"byte_end":107458,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107459,"byte_end":107462,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"!                 // Write the data back","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107463,"byte_end":107505,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"!                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107506,"byte_end":107578,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"!                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107579,"byte_end":107656,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"!                     return;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107657,"byte_end":107688,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"!                 }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107689,"byte_end":107710,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107711,"byte_end":107728,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"!         });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107729,"byte_end":107744,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"!     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107745,"byte_end":107754,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107755,"byte_end":107760,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107761,"byte_end":107768,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107769,"byte_end":107772,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107773,"byte_end":107851,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"! the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107852,"byte_end":107930,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"! executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107931,"byte_end":107992,"line_start":61,"line_end":61,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107993,"byte_end":107996,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! A [`Runtime`] instance can also be used directly.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107997,"byte_end":108050,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108051,"byte_end":108054,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108055,"byte_end":108068,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"! use tokio::net::TcpListener;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108069,"byte_end":108101,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108102,"byte_end":108128,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"! use tokio::runtime::Runtime;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108129,"byte_end":108161,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108162,"byte_end":108165,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108166,"byte_end":108223,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"!     // Create the runtime","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108224,"byte_end":108253,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"!     let mut rt = Runtime::new()?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108254,"byte_end":108291,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108292,"byte_end":108295,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"!     // Spawn the root task","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108296,"byte_end":108326,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"!     rt.block_on(async {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108327,"byte_end":108354,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"!         let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108355,"byte_end":108429,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108430,"byte_end":108433,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"!         loop {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108434,"byte_end":108452,"line_start":78,"line_end":78,"column_start":1,"column_end":19}},{"value":"!             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108453,"byte_end":108516,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108517,"byte_end":108520,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"!             tokio::spawn(async move {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108521,"byte_end":108562,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"!                 let mut buf = [0; 1024];","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108563,"byte_end":108607,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108608,"byte_end":108611,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"!                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108612,"byte_end":108696,"line_start":84,"line_end":84,"column_start":1,"column_end":85}},{"value":"!                 loop {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108697,"byte_end":108723,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"!                     let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108724,"byte_end":108791,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"!                         // socket closed","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108792,"byte_end":108836,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"!                         Ok(n) if n == 0 => return,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108837,"byte_end":108891,"line_start":88,"line_end":88,"column_start":1,"column_end":55}},{"value":"!                         Ok(n) => n,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108892,"byte_end":108931,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"!                         Err(e) => {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108932,"byte_end":108971,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"!                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108972,"byte_end":109058,"line_start":91,"line_end":91,"column_start":1,"column_end":87}},{"value":"!                             return;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109059,"byte_end":109098,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"!                         }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109099,"byte_end":109128,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"!                     };","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109129,"byte_end":109155,"line_start":94,"line_end":94,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109156,"byte_end":109159,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"!                     // Write the data back","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109160,"byte_end":109206,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"!                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109207,"byte_end":109283,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"!                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109284,"byte_end":109365,"line_start":98,"line_end":98,"column_start":1,"column_end":82}},{"value":"!                         return;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109366,"byte_end":109401,"line_start":99,"line_end":99,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109402,"byte_end":109427,"line_start":100,"line_end":100,"column_start":1,"column_end":26}},{"value":"!                 }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109428,"byte_end":109449,"line_start":101,"line_end":101,"column_start":1,"column_end":22}},{"value":"!             });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109450,"byte_end":109469,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"!         }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109470,"byte_end":109483,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"!     })","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109484,"byte_end":109494,"line_start":104,"line_end":104,"column_start":1,"column_end":11}},{"value":"! }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109495,"byte_end":109500,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109501,"byte_end":109508,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109509,"byte_end":109512,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! ## Runtime Configurations","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109513,"byte_end":109542,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109543,"byte_end":109546,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109547,"byte_end":109625,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"! applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109626,"byte_end":109702,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"! used to select which scheduler to use.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109703,"byte_end":109745,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109746,"byte_end":109749,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"! #### Basic Scheduler","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109750,"byte_end":109774,"line_start":114,"line_end":114,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109775,"byte_end":109778,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"! The basic scheduler provides a _single-threaded_ future executor. All tasks","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109779,"byte_end":109858,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"! will be created and executed on the current thread. The basic scheduler","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109859,"byte_end":109934,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"! requires the `rt-core` feature flag, and can be selected using the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109935,"byte_end":110005,"line_start":118,"line_end":118,"column_start":1,"column_end":71}},{"value":"! [`Builder::basic_scheduler`] method:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110006,"byte_end":110046,"line_start":119,"line_end":119,"column_start":1,"column_end":41}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110047,"byte_end":110054,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"! use tokio::runtime;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110055,"byte_end":110078,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110079,"byte_end":110082,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"! # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110083,"byte_end":110142,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"! let basic_rt = runtime::Builder::new()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110143,"byte_end":110185,"line_start":124,"line_end":124,"column_start":1,"column_end":43}},{"value":"!     .basic_scheduler()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110186,"byte_end":110212,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"!     .build()?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110213,"byte_end":110231,"line_start":126,"line_end":126,"column_start":1,"column_end":19}},{"value":"! # Ok(()) }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110232,"byte_end":110246,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110247,"byte_end":110254,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110255,"byte_end":110258,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"! If the `rt-core` feature is enabled and `rt-threaded` is not,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110259,"byte_end":110324,"line_start":130,"line_end":130,"column_start":1,"column_end":66}},{"value":"! [`Runtime::new`] will return a basic scheduler runtime by default.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110325,"byte_end":110395,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110396,"byte_end":110399,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! #### Threaded Scheduler","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110400,"byte_end":110427,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110428,"byte_end":110431,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! The threaded scheduler executes futures on a _thread pool_, using a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110432,"byte_end":110503,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"! work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110504,"byte_end":110582,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"! CPU core available on the system. This tends to be the ideal configurations","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110583,"byte_end":110662,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"! for most applications. The threaded scheduler requires the `rt-threaded` feature","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110663,"byte_end":110747,"line_start":138,"line_end":138,"column_start":1,"column_end":85}},{"value":"! flag, and can be selected using the  [`Builder::threaded_scheduler`] method:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110748,"byte_end":110828,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110829,"byte_end":110836,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"! use tokio::runtime;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110837,"byte_end":110860,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110861,"byte_end":110864,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110865,"byte_end":110924,"line_start":143,"line_end":143,"column_start":1,"column_end":60}},{"value":"! let threaded_rt = runtime::Builder::new()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110925,"byte_end":110970,"line_start":144,"line_end":144,"column_start":1,"column_end":46}},{"value":"!     .threaded_scheduler()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110971,"byte_end":111000,"line_start":145,"line_end":145,"column_start":1,"column_end":30}},{"value":"!     .build()?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111001,"byte_end":111019,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"! # Ok(()) }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111020,"byte_end":111034,"line_start":147,"line_end":147,"column_start":1,"column_end":15}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111035,"byte_end":111042,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111043,"byte_end":111046,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"! If the `rt-threaded` feature flag is enabled, [`Runtime::new`] will return a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111047,"byte_end":111127,"line_start":150,"line_end":150,"column_start":1,"column_end":81}},{"value":"! threaded scheduler runtime by default.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111128,"byte_end":111170,"line_start":151,"line_end":151,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111171,"byte_end":111174,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"! Most applications should use the threaded scheduler, except in some niche","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111175,"byte_end":111252,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"! use-cases, such as when running only a single thread is required.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111253,"byte_end":111322,"line_start":154,"line_end":154,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111323,"byte_end":111326,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"! #### Resource drivers","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111327,"byte_end":111352,"line_start":156,"line_end":156,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111353,"byte_end":111356,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"! When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111357,"byte_end":111431,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"! default. In this case, attempting to use networking types or time types will","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111432,"byte_end":111512,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"! fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111513,"byte_end":111592,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"! This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111593,"byte_end":111672,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"! shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111673,"byte_end":111742,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111743,"byte_end":111746,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"! ## Lifetime of spawned threads","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111747,"byte_end":111781,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111782,"byte_end":111785,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"! The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111786,"byte_end":111865,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"! threaded scheduler spawns threads to schedule tasks and calls to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111866,"byte_end":111934,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"! `spawn_blocking` spawn threads to run blocking operations.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111935,"byte_end":111997,"line_start":168,"line_end":168,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111998,"byte_end":112001,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112002,"byte_end":112080,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"! idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112081,"byte_end":112160,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"! Any tasks that have not yet completed will be dropped.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112161,"byte_end":112219,"line_start":172,"line_end":172,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112220,"byte_end":112223,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"! [tasks]: crate::task","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112224,"byte_end":112248,"line_start":174,"line_end":174,"column_start":1,"column_end":25}},{"value":"! [`Runtime`]: Runtime","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112249,"byte_end":112273,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"! [`tokio::spawn`]: crate::spawn","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112274,"byte_end":112308,"line_start":176,"line_end":176,"column_start":1,"column_end":35}},{"value":"! [`tokio::main`]: ../attr.main.html","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112309,"byte_end":112347,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"! [runtime builder]: crate::runtime::Builder","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112348,"byte_end":112394,"line_start":178,"line_end":178,"column_start":1,"column_end":47}},{"value":"! [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112395,"byte_end":112445,"line_start":179,"line_end":179,"column_start":1,"column_end":51}},{"value":"! [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112446,"byte_end":112520,"line_start":180,"line_end":180,"column_start":1,"column_end":75}},{"value":"! [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112521,"byte_end":112601,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"! [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112602,"byte_end":112664,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"! [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112665,"byte_end":112731,"line_start":183,"line_end":183,"column_start":1,"column_end":67}},{"value":"! [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112732,"byte_end":112796,"line_start":184,"line_end":184,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":3963},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8686365,"byte_end":8686374,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":3964}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3609},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8686550,"byte_end":8686559,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<JoinError>::cancelled","value":"fn () -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8686525,"byte_end":8686538,"line_start":20,"line_end":20,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3611},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8686777,"byte_end":8686782,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"panic","qualname":"<JoinError>::panic","value":"fn (err: Box<dyn Any + Send + 'static>) -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8686752,"byte_end":8686765,"line_start":32,"line_end":32,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3613},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687112,"byte_end":8687124,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687032,"byte_end":8687100,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3614},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687630,"byte_end":8687638,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687251,"byte_end":8687313,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687318,"byte_end":8687321,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687326,"byte_end":8687340,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687345,"byte_end":8687348,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687353,"byte_end":8687360,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687365,"byte_end":8687384,"line_start":56,"line_end":56,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687389,"byte_end":8687392,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687397,"byte_end":8687415,"line_start":58,"line_end":58,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687420,"byte_end":8687441,"line_start":59,"line_end":59,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687446,"byte_end":8687484,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687489,"byte_end":8687516,"line_start":61,"line_end":61,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687521,"byte_end":8687551,"line_start":62,"line_end":62,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687556,"byte_end":8687559,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687564,"byte_end":8687596,"line_start":64,"line_end":64,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687601,"byte_end":8687606,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687611,"byte_end":8687618,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3615},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688545,"byte_end":8688555,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"fn (self) -> Box<dyn Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687764,"byte_end":8687843,"line_start":74,"line_end":74,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687848,"byte_end":8687851,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687856,"byte_end":8687868,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687873,"byte_end":8687876,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687881,"byte_end":8687955,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8687960,"byte_end":8688035,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688040,"byte_end":8688098,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688103,"byte_end":8688106,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688111,"byte_end":8688125,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688130,"byte_end":8688133,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688138,"byte_end":8688157,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688162,"byte_end":8688181,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688186,"byte_end":8688189,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688194,"byte_end":8688212,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688217,"byte_end":8688238,"line_start":88,"line_end":88,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688243,"byte_end":8688281,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688286,"byte_end":8688313,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688318,"byte_end":8688348,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688353,"byte_end":8688356,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688361,"byte_end":8688388,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688393,"byte_end":8688441,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688446,"byte_end":8688497,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688502,"byte_end":8688511,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688516,"byte_end":8688521,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688526,"byte_end":8688533,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3616},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8689320,"byte_end":8689334,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"fn (self) -> Result<Box<dyn Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688696,"byte_end":8688765,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688770,"byte_end":8688842,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688847,"byte_end":8688860,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688865,"byte_end":8688868,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688873,"byte_end":8688887,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688892,"byte_end":8688895,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688900,"byte_end":8688919,"line_start":110,"line_end":110,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688924,"byte_end":8688943,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688948,"byte_end":8688951,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688956,"byte_end":8688974,"line_start":113,"line_end":113,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8688979,"byte_end":8689000,"line_start":114,"line_end":114,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8689005,"byte_end":8689043,"line_start":115,"line_end":115,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8689048,"byte_end":8689075,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8689080,"byte_end":8689110,"line_start":117,"line_end":117,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8689115,"byte_end":8689118,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8689123,"byte_end":8689173,"line_start":119,"line_end":119,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8689178,"byte_end":8689226,"line_start":120,"line_end":120,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8689231,"byte_end":8689272,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8689277,"byte_end":8689286,"line_start":122,"line_end":122,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8689291,"byte_end":8689296,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8689301,"byte_end":8689308,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3965},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8705700,"byte_end":8705710,"line_start":78,"line_end":78,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":3967},{"krate":0,"index":3968}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":592},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128991,"byte_end":128998,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128163,"byte_end":128221,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128222,"byte_end":128225,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128226,"byte_end":128298,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128299,"byte_end":128347,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128348,"byte_end":128351,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128352,"byte_end":128417,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128418,"byte_end":128421,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128422,"byte_end":128499,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128500,"byte_end":128513,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128514,"byte_end":128517,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128518,"byte_end":128551,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new`]: method@Self::new","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128552,"byte_end":128590,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128591,"byte_end":128594,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128595,"byte_end":128609,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128610,"byte_end":128613,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128614,"byte_end":128621,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128622,"byte_end":128654,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128655,"byte_end":128658,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128659,"byte_end":128674,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128675,"byte_end":128699,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128700,"byte_end":128736,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/         .threaded_scheduler()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128737,"byte_end":128770,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/         .core_threads(4)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128771,"byte_end":128799,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128800,"byte_end":128842,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128843,"byte_end":128890,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128891,"byte_end":128911,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128912,"byte_end":128934,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128935,"byte_end":128938,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128939,"byte_end":128965,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128966,"byte_end":128971,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128972,"byte_end":128979,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130153,"byte_end":130156,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime builder initialized with default configuration\n values.","sig":null,"attributes":[{"value":"/ Returns a new runtime builder initialized with default configuration","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":129979,"byte_end":130051,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ values.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130056,"byte_end":130067,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130072,"byte_end":130075,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130080,"byte_end":130141,"line_start":84,"line_end":84,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131360,"byte_end":131370,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130846,"byte_end":130884,"line_start":113,"line_end":113,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130889,"byte_end":130892,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130897,"byte_end":130968,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130973,"byte_end":131049,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131054,"byte_end":131108,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131113,"byte_end":131116,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131121,"byte_end":131135,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131140,"byte_end":131143,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131148,"byte_end":131155,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131160,"byte_end":131183,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131188,"byte_end":131191,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131196,"byte_end":131232,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131237,"byte_end":131266,"line_start":125,"line_end":125,"column_start":5,"column_end":34}},{"value":"/     .enable_all()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131271,"byte_end":131292,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131297,"byte_end":131313,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131318,"byte_end":131336,"line_start":128,"line_end":128,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131341,"byte_end":131348,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131925,"byte_end":131936,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"num_threads","qualname":"<Builder>::num_threads","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"deprecated(note = \"In future will be replaced by core_threads method\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131547,"byte_end":131620,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ Sets the maximum number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131625,"byte_end":131703,"line_start":140,"line_end":140,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131708,"byte_end":131711,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This must be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131716,"byte_end":131791,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ this value on the smaller side.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131796,"byte_end":131831,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131836,"byte_end":131839,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131844,"byte_end":131913,"line_start":145,"line_end":145,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132645,"byte_end":132657,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"core_threads","qualname":"<Builder>::core_threads","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the core number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets the core number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132038,"byte_end":132113,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132118,"byte_end":132121,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This should be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132126,"byte_end":132203,"line_start":153,"line_end":153,"column_start":5,"column_end":82}},{"value":"/ this value on the smaller side.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132208,"byte_end":132243,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132248,"byte_end":132251,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132256,"byte_end":132325,"line_start":156,"line_end":156,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132330,"byte_end":132333,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ These threads will be always active and running.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132338,"byte_end":132390,"line_start":158,"line_end":158,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132395,"byte_end":132398,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132403,"byte_end":132417,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132422,"byte_end":132425,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132430,"byte_end":132437,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132442,"byte_end":132465,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132470,"byte_end":132473,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132478,"byte_end":132514,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132519,"byte_end":132548,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     .core_threads(4)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132553,"byte_end":132577,"line_start":167,"line_end":167,"column_start":5,"column_end":29}},{"value":"/     .build()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132582,"byte_end":132598,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132603,"byte_end":132621,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132626,"byte_end":132633,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133536,"byte_end":133547,"line_start":191,"line_end":191,"column_start":12,"column_end":23},"name":"max_threads","qualname":"<Builder>::max_threads","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies limit for threads, spawned by the Runtime.","sig":null,"attributes":[{"value":"/ Specifies limit for threads, spawned by the Runtime.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132818,"byte_end":132874,"line_start":177,"line_end":177,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132879,"byte_end":132882,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This is number of threads to be used by Runtime, including `core_threads`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132887,"byte_end":132964,"line_start":179,"line_end":179,"column_start":5,"column_end":82}},{"value":"/ Having `max_threads` less than `core_threads` results in invalid configuration","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132969,"byte_end":133051,"line_start":180,"line_end":180,"column_start":5,"column_end":87}},{"value":"/ when building multi-threaded `Runtime`, which would cause a panic.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133056,"byte_end":133126,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133131,"byte_end":133134,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Similarly to the `core_threads`, this number should be between 1 and 32,768.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133139,"byte_end":133219,"line_start":183,"line_end":183,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133224,"byte_end":133227,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133232,"byte_end":133261,"line_start":185,"line_end":185,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133266,"byte_end":133269,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ When multi-threaded runtime is not used, will act as limit on additional threads.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133274,"byte_end":133359,"line_start":187,"line_end":187,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133364,"byte_end":133367,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Otherwise as `core_threads` are always active, it limits additional threads (e.g. for","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133372,"byte_end":133461,"line_start":189,"line_end":189,"column_start":5,"column_end":94}},{"value":"/ blocking annotations) as `max_threads - core_threads`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133466,"byte_end":133524,"line_start":190,"line_end":190,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134071,"byte_end":134082,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"fn (&mut self, val: impl Into<String>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133701,"byte_end":133765,"line_start":197,"line_end":197,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133770,"byte_end":133773,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133778,"byte_end":133825,"line_start":199,"line_end":199,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133830,"byte_end":133833,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133838,"byte_end":133852,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133857,"byte_end":133860,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133865,"byte_end":133872,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133877,"byte_end":133902,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133907,"byte_end":133910,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133915,"byte_end":133936,"line_start":206,"line_end":206,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133941,"byte_end":133977,"line_start":207,"line_end":207,"column_start":5,"column_end":41}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133982,"byte_end":134013,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134018,"byte_end":134035,"line_start":209,"line_end":209,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134040,"byte_end":134047,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134052,"byte_end":134059,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134806,"byte_end":134823,"line_start":237,"line_end":237,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134196,"byte_end":134250,"line_start":217,"line_end":217,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134255,"byte_end":134258,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134263,"byte_end":134335,"line_start":219,"line_end":219,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134340,"byte_end":134373,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134378,"byte_end":134381,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134386,"byte_end":134454,"line_start":222,"line_end":222,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134459,"byte_end":134520,"line_start":223,"line_end":223,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134525,"byte_end":134528,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134533,"byte_end":134547,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134552,"byte_end":134555,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134560,"byte_end":134567,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134572,"byte_end":134597,"line_start":228,"line_end":228,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134602,"byte_end":134605,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134610,"byte_end":134631,"line_start":230,"line_end":230,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134636,"byte_end":134672,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134677,"byte_end":134706,"line_start":232,"line_end":232,"column_start":5,"column_end":34}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134711,"byte_end":134748,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134753,"byte_end":134770,"line_start":234,"line_end":234,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134775,"byte_end":134782,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134787,"byte_end":134794,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135464,"byte_end":135479,"line_start":262,"line_end":262,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"fn <F> (&mut self, f: F) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134930,"byte_end":135005,"line_start":242,"line_end":242,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135010,"byte_end":135025,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135030,"byte_end":135033,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135038,"byte_end":135100,"line_start":245,"line_end":245,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135105,"byte_end":135108,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135113,"byte_end":135127,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135132,"byte_end":135135,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135140,"byte_end":135147,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135152,"byte_end":135177,"line_start":250,"line_end":250,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135182,"byte_end":135185,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135190,"byte_end":135211,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135216,"byte_end":135257,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135262,"byte_end":135291,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135296,"byte_end":135325,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135330,"byte_end":135369,"line_start":256,"line_end":256,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135374,"byte_end":135384,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135389,"byte_end":135406,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135411,"byte_end":135418,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135423,"byte_end":135430,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135435,"byte_end":135452,"line_start":261,"line_end":261,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136130,"byte_end":136144,"line_start":289,"line_end":289,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"fn <F> (&mut self, f: F) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135640,"byte_end":135691,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135696,"byte_end":135699,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135704,"byte_end":135766,"line_start":272,"line_end":272,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135771,"byte_end":135774,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135779,"byte_end":135793,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135798,"byte_end":135801,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135806,"byte_end":135813,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135818,"byte_end":135843,"line_start":277,"line_end":277,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135848,"byte_end":135851,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135856,"byte_end":135877,"line_start":279,"line_end":279,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135882,"byte_end":135923,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135928,"byte_end":135957,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135962,"byte_end":135990,"line_start":282,"line_end":282,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135995,"byte_end":136035,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136040,"byte_end":136050,"line_start":284,"line_end":284,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136055,"byte_end":136072,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136077,"byte_end":136084,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136089,"byte_end":136096,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136101,"byte_end":136118,"line_start":288,"line_end":288,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136690,"byte_end":136695,"line_start":312,"line_end":312,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"fn (&mut self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136305,"byte_end":136342,"line_start":297,"line_end":297,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136347,"byte_end":136350,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The returned `ThreadPool` instance is ready to spawn tasks.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136355,"byte_end":136418,"line_start":299,"line_end":299,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136423,"byte_end":136426,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136431,"byte_end":136445,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136450,"byte_end":136453,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136458,"byte_end":136465,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136470,"byte_end":136502,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136507,"byte_end":136510,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Builder::new().build().unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136515,"byte_end":136564,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136569,"byte_end":136572,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136577,"byte_end":136600,"line_start":308,"line_end":308,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136605,"byte_end":136654,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136659,"byte_end":136666,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136671,"byte_end":136678,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4001},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138320,"byte_end":138329,"line_start":367,"line_end":367,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4003},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138840,"byte_end":138851,"line_start":390,"line_end":390,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4005},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":139464,"byte_end":139479,"line_start":409,"line_end":409,"column_start":16,"column_end":31},"name":"basic_scheduler","qualname":"<Builder>::basic_scheduler","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a simpler scheduler that runs all tasks on the current-thread.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4043},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150461,"byte_end":150467,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":4044},{"krate":0,"index":4045},{"krate":0,"index":4046},{"krate":0,"index":4047},{"krate":0,"index":4048}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150192,"byte_end":150218,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150219,"byte_end":150222,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150223,"byte_end":150311,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150312,"byte_end":150362,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150363,"byte_end":150366,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150367,"byte_end":150425,"line_start":20,"line_end":20,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152004,"byte_end":152009,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"fn <F, R> (&self, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150831,"byte_end":150906,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150911,"byte_end":150989,"line_start":40,"line_end":40,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150994,"byte_end":151062,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151067,"byte_end":151070,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Runtime::enter`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151075,"byte_end":151133,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151138,"byte_end":151141,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151146,"byte_end":151186,"line_start":45,"line_end":45,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151191,"byte_end":151238,"line_start":46,"line_end":46,"column_start":5,"column_end":52}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151243,"byte_end":151300,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151305,"byte_end":151342,"line_start":48,"line_end":48,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151347,"byte_end":151350,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151355,"byte_end":151368,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151373,"byte_end":151376,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151381,"byte_end":151388,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151393,"byte_end":151425,"line_start":53,"line_end":53,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151430,"byte_end":151433,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151438,"byte_end":151480,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `handle.enter` below, this would panic.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151485,"byte_end":151551,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151556,"byte_end":151589,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151594,"byte_end":151626,"line_start":58,"line_end":58,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151631,"byte_end":151642,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151647,"byte_end":151652,"line_start":60,"line_end":60,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151657,"byte_end":151660,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151665,"byte_end":151680,"line_start":62,"line_end":62,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151685,"byte_end":151726,"line_start":63,"line_end":63,"column_start":5,"column_end":46}},{"value":"/     let handle = rt.handle().clone();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151731,"byte_end":151772,"line_start":64,"line_end":64,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151777,"byte_end":151780,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151785,"byte_end":151828,"line_start":66,"line_end":66,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151833,"byte_end":151836,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151841,"byte_end":151916,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/     handle.enter(|| function_that_spawns(s));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151921,"byte_end":151970,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151975,"byte_end":151980,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151985,"byte_end":151992,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153479,"byte_end":153486,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152127,"byte_end":152191,"line_start":79,"line_end":79,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152196,"byte_end":152199,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152204,"byte_end":152215,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152220,"byte_end":152223,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152228,"byte_end":152322,"line_start":83,"line_end":83,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152327,"byte_end":152419,"line_start":84,"line_end":84,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152424,"byte_end":152500,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152505,"byte_end":152508,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152513,"byte_end":152527,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152532,"byte_end":152535,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152540,"byte_end":152622,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152627,"byte_end":152673,"line_start":90,"line_end":90,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152678,"byte_end":152681,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152686,"byte_end":152693,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152698,"byte_end":152720,"line_start":93,"line_end":93,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152725,"byte_end":152759,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152764,"byte_end":152780,"line_start":95,"line_end":95,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152785,"byte_end":152824,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152829,"byte_end":152851,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152856,"byte_end":152887,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152892,"byte_end":152895,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152900,"byte_end":152941,"line_start":100,"line_end":100,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152946,"byte_end":152981,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152986,"byte_end":153010,"line_start":102,"line_end":102,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153015,"byte_end":153071,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153076,"byte_end":153083,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153088,"byte_end":153091,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153096,"byte_end":153114,"line_start":106,"line_end":106,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153119,"byte_end":153146,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153151,"byte_end":153236,"line_start":108,"line_end":108,"column_start":5,"column_end":90}},{"value":"/     handle.block_on(async { /* ... */ })","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153241,"byte_end":153285,"line_start":109,"line_end":109,"column_start":5,"column_end":49}},{"value":"/     // This next line would cause a panic","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153290,"byte_end":153335,"line_start":110,"line_end":110,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153340,"byte_end":153383,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153388,"byte_end":153395,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153400,"byte_end":153429,"line_start":113,"line_end":113,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153434,"byte_end":153443,"line_start":114,"line_end":114,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153448,"byte_end":153455,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153460,"byte_end":153467,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153784,"byte_end":153795,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"fn () -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153591,"byte_end":153651,"line_start":121,"line_end":121,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153656,"byte_end":153659,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153664,"byte_end":153715,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153720,"byte_end":153723,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153728,"byte_end":153772,"line_start":125,"line_end":125,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4054},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":155320,"byte_end":155325,"line_start":170,"line_end":170,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Handle>::spawn","value":"fn <F> (&self, future: F) -> JoinHandle<F::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future onto the Tokio runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4056},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":159444,"byte_end":159452,"line_start":274,"line_end":274,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Handle>::block_on","value":"fn <F> (&self, future: F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime from a synchronous\n context.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":660},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163244,"byte_end":163259,"line_start":357,"line_end":357,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163164,"byte_end":163232,"line_start":356,"line_end":356,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":4086},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114701,"byte_end":114708,"line_start":275,"line_end":275,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":4087},{"krate":0,"index":4088},{"krate":0,"index":4089}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113684,"byte_end":113706,"line_start":246,"line_end":246,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113707,"byte_end":113710,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ The runtime provides an I/O driver, task scheduler, [timer], and blocking","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113711,"byte_end":113788,"line_start":248,"line_end":248,"column_start":1,"column_end":78}},{"value":"/ pool, necessary for running asynchronous tasks.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113789,"byte_end":113840,"line_start":249,"line_end":249,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113841,"byte_end":113844,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ Instances of `Runtime` can be created using [`new`] or [`Builder`]. However,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113845,"byte_end":113925,"line_start":251,"line_end":251,"column_start":1,"column_end":81}},{"value":"/ most users will use the `#[tokio::main]` annotation on their entry point instead.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113926,"byte_end":114011,"line_start":252,"line_end":252,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114012,"byte_end":114015,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114016,"byte_end":114075,"line_start":254,"line_end":254,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114076,"byte_end":114079,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # Shutdown","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114080,"byte_end":114094,"line_start":256,"line_end":256,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114095,"byte_end":114098,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ Shutting down the runtime is done by dropping the value. The current thread","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114099,"byte_end":114178,"line_start":258,"line_end":258,"column_start":1,"column_end":80}},{"value":"/ will block until the shut down operation has completed.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114179,"byte_end":114238,"line_start":259,"line_end":259,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114239,"byte_end":114242,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ * Drain any scheduled work queues.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114243,"byte_end":114281,"line_start":261,"line_end":261,"column_start":1,"column_end":39}},{"value":"/ * Drop any futures that have not yet completed.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114282,"byte_end":114333,"line_start":262,"line_end":262,"column_start":1,"column_end":52}},{"value":"/ * Drop the reactor.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114334,"byte_end":114357,"line_start":263,"line_end":263,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114358,"byte_end":114361,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Once the reactor has dropped, any outstanding I/O resources bound to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114362,"byte_end":114434,"line_start":265,"line_end":265,"column_start":1,"column_end":73}},{"value":"/ that reactor will no longer function. Calling any method on them will","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114435,"byte_end":114508,"line_start":266,"line_end":266,"column_start":1,"column_end":74}},{"value":"/ result in an error.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114509,"byte_end":114532,"line_start":267,"line_end":267,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114533,"byte_end":114536,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ [timer]: crate::time","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114537,"byte_end":114561,"line_start":269,"line_end":269,"column_start":1,"column_end":25}},{"value":"/ [mod]: index.html","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114562,"byte_end":114583,"line_start":270,"line_end":270,"column_start":1,"column_end":22}},{"value":"/ [`new`]: method@Self::new","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114584,"byte_end":114613,"line_start":271,"line_end":271,"column_start":1,"column_end":30}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114614,"byte_end":114645,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ [`tokio::run`]: fn@run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114646,"byte_end":114672,"line_start":273,"line_end":273,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116929,"byte_end":116932,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"fn () -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"/ Create a new runtime instance with default configuration values.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115522,"byte_end":115590,"line_start":306,"line_end":306,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115595,"byte_end":115598,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This results in a scheduler, I/O driver, and time driver being","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115603,"byte_end":115669,"line_start":308,"line_end":308,"column_start":5,"column_end":71}},{"value":"/ initialized. The type of scheduler used depends on what feature flags","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115674,"byte_end":115747,"line_start":309,"line_end":309,"column_start":5,"column_end":78}},{"value":"/ are enabled: if the `rt-threaded` feature is enabled, the [threaded","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115752,"byte_end":115823,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ scheduler] is used, while if only the `rt-core` feature is enabled, the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115828,"byte_end":115903,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ [basic scheduler] is used instead.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115908,"byte_end":115946,"line_start":312,"line_end":312,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115951,"byte_end":115954,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ If the threaded scheduler is selected, it will not spawn","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115959,"byte_end":116019,"line_start":314,"line_end":314,"column_start":5,"column_end":65}},{"value":"/ any worker threads until it needs to, i.e. tasks are scheduled to run.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116024,"byte_end":116098,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116103,"byte_end":116106,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Most applications will not need to call this function directly. Instead,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116111,"byte_end":116187,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ they will use the  [`#[tokio::main]` attribute][main]. When more complex","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116192,"byte_end":116268,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/ configuration is necessary, the [runtime builder] may be used.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116273,"byte_end":116339,"line_start":319,"line_end":319,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116344,"byte_end":116347,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116352,"byte_end":116411,"line_start":321,"line_end":321,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116416,"byte_end":116419,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116424,"byte_end":116438,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116443,"byte_end":116446,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Creating a new `Runtime` with default configuration values.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116451,"byte_end":116514,"line_start":325,"line_end":325,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116519,"byte_end":116522,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116527,"byte_end":116534,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116539,"byte_end":116571,"line_start":328,"line_end":328,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116576,"byte_end":116579,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116584,"byte_end":116611,"line_start":330,"line_end":330,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116616,"byte_end":116634,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116639,"byte_end":116642,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ // Use the runtime...","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116647,"byte_end":116672,"line_start":333,"line_end":333,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116677,"byte_end":116684,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116689,"byte_end":116692,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116697,"byte_end":116718,"line_start":336,"line_end":336,"column_start":5,"column_end":26}},{"value":"/ [main]: ../attr.main.html","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116723,"byte_end":116752,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/ [threaded scheduler]: index.html#threaded-scheduler","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116757,"byte_end":116812,"line_start":338,"line_end":338,"column_start":5,"column_end":60}},{"value":"/ [basic scheduler]: index.html#basic-scheduler","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116817,"byte_end":116866,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116871,"byte_end":116917,"line_start":340,"line_end":340,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118522,"byte_end":118527,"line_start":391,"line_end":391,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"fn <F> (&self, future: F) -> JoinHandle<F::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117342,"byte_end":117384,"line_start":354,"line_end":354,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117389,"byte_end":117392,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117397,"byte_end":117468,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117473,"byte_end":117548,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117553,"byte_end":117576,"line_start":358,"line_end":358,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117581,"byte_end":117584,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117589,"byte_end":117648,"line_start":360,"line_end":360,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117653,"byte_end":117656,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117661,"byte_end":117682,"line_start":362,"line_end":362,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117687,"byte_end":117690,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117695,"byte_end":117709,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117714,"byte_end":117717,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117722,"byte_end":117729,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117734,"byte_end":117766,"line_start":367,"line_end":367,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117771,"byte_end":117774,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117779,"byte_end":117795,"line_start":369,"line_end":369,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117800,"byte_end":117825,"line_start":370,"line_end":370,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117830,"byte_end":117867,"line_start":371,"line_end":371,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117872,"byte_end":117875,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117880,"byte_end":117918,"line_start":373,"line_end":373,"column_start":5,"column_end":43}},{"value":"/ rt.spawn(async {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117923,"byte_end":117943,"line_start":374,"line_end":374,"column_start":5,"column_end":25}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117948,"byte_end":117999,"line_start":375,"line_end":375,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118004,"byte_end":118011,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118016,"byte_end":118023,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118028,"byte_end":118035,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118040,"byte_end":118043,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118048,"byte_end":118060,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118065,"byte_end":118068,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This function will not panic unless task execution is disabled on the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118073,"byte_end":118146,"line_start":382,"line_end":382,"column_start":5,"column_end":78}},{"value":"/ executor. This can only happen if the runtime was built using","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118151,"byte_end":118216,"line_start":383,"line_end":383,"column_start":5,"column_end":70}},{"value":"/ [`Builder`] without picking either [`basic_scheduler`] or","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118221,"byte_end":118282,"line_start":384,"line_end":384,"column_start":5,"column_end":66}},{"value":"/ [`threaded_scheduler`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118287,"byte_end":118314,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118319,"byte_end":118322,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118327,"byte_end":118358,"line_start":387,"line_end":387,"column_start":5,"column_end":36}},{"value":"/ [`threaded_scheduler`]: fn@Builder::threaded_scheduler","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118363,"byte_end":118421,"line_start":388,"line_end":388,"column_start":5,"column_end":63}},{"value":"/ [`basic_scheduler`]: fn@Builder::basic_scheduler","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118426,"byte_end":118478,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118483,"byte_end":118510,"line_start":390,"line_end":390,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120148,"byte_end":120156,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"fn <F> (&mut self, future: F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the runtime's\n entry point.","sig":null,"attributes":[{"value":"/ Run a future to completion on the Tokio runtime. This is the runtime's","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118929,"byte_end":119003,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ entry point.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119008,"byte_end":119024,"line_start":405,"line_end":405,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119029,"byte_end":119032,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119037,"byte_end":119104,"line_start":407,"line_end":407,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119109,"byte_end":119182,"line_start":408,"line_end":408,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119187,"byte_end":119252,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119257,"byte_end":119260,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ `&mut` is required as calling `block_on` **may** result in advancing the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119265,"byte_end":119341,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ state of the runtime. The details depend on how the runtime is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119346,"byte_end":119412,"line_start":412,"line_end":412,"column_start":5,"column_end":71}},{"value":"/ configured. [`runtime::Handle::block_on`][handle] provides a version","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119417,"byte_end":119489,"line_start":413,"line_end":413,"column_start":5,"column_end":77}},{"value":"/ that takes `&self`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119494,"byte_end":119517,"line_start":414,"line_end":414,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119522,"byte_end":119525,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This method may not be called from an asynchronous context.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119530,"byte_end":119593,"line_start":416,"line_end":416,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119598,"byte_end":119601,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119606,"byte_end":119618,"line_start":418,"line_end":418,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119623,"byte_end":119626,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function panics if the provided future panics, or if called within an","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119631,"byte_end":119709,"line_start":420,"line_end":420,"column_start":5,"column_end":83}},{"value":"/ asynchronous execution context.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119714,"byte_end":119749,"line_start":421,"line_end":421,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119754,"byte_end":119757,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119762,"byte_end":119776,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119781,"byte_end":119784,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119789,"byte_end":119802,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119807,"byte_end":119839,"line_start":426,"line_end":426,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119844,"byte_end":119847,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ // Create the runtime","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119852,"byte_end":119877,"line_start":428,"line_end":428,"column_start":5,"column_end":30}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119882,"byte_end":119923,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119928,"byte_end":119931,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ // Execute the future, blocking the current thread until completion","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119936,"byte_end":120007,"line_start":431,"line_end":431,"column_start":5,"column_end":76}},{"value":"/ rt.block_on(async {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120012,"byte_end":120035,"line_start":432,"line_end":432,"column_start":5,"column_end":28}},{"value":"/     println!(\"hello\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120040,"byte_end":120066,"line_start":433,"line_end":433,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120071,"byte_end":120078,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120083,"byte_end":120090,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120095,"byte_end":120098,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ [handle]: fn@Handle::block_on","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120103,"byte_end":120136,"line_start":437,"line_end":437,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121678,"byte_end":121683,"line_start":482,"line_end":482,"column_start":12,"column_end":17},"name":"enter","qualname":"<Runtime>::enter","value":"fn <F, R> (&self, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120562,"byte_end":120637,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120642,"byte_end":120720,"line_start":451,"line_end":451,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120725,"byte_end":120793,"line_start":452,"line_end":452,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120798,"byte_end":120801,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Handle::enter`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120806,"byte_end":120863,"line_start":454,"line_end":454,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120868,"byte_end":120871,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120876,"byte_end":120916,"line_start":456,"line_end":456,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120921,"byte_end":120968,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ [`Handle::enter`]: fn@crate::runtime::Handle::enter","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120973,"byte_end":121028,"line_start":458,"line_end":458,"column_start":5,"column_end":60}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121033,"byte_end":121070,"line_start":459,"line_end":459,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121075,"byte_end":121078,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121083,"byte_end":121096,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121101,"byte_end":121104,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121109,"byte_end":121116,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121121,"byte_end":121153,"line_start":464,"line_end":464,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121158,"byte_end":121161,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121166,"byte_end":121208,"line_start":466,"line_end":466,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `rt.enter` below, this would panic.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121213,"byte_end":121275,"line_start":467,"line_end":467,"column_start":5,"column_end":67}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121280,"byte_end":121313,"line_start":468,"line_end":468,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121318,"byte_end":121350,"line_start":469,"line_end":469,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121355,"byte_end":121366,"line_start":470,"line_end":470,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121371,"byte_end":121376,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121381,"byte_end":121384,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121389,"byte_end":121404,"line_start":473,"line_end":473,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121409,"byte_end":121450,"line_start":474,"line_end":474,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121455,"byte_end":121458,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121463,"byte_end":121506,"line_start":476,"line_end":476,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121511,"byte_end":121514,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121519,"byte_end":121594,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/     rt.enter(|| function_that_spawns(s));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121599,"byte_end":121644,"line_start":479,"line_end":479,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121649,"byte_end":121654,"line_start":480,"line_end":480,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121659,"byte_end":121666,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122270,"byte_end":122276,"line_start":506,"line_end":506,"column_start":12,"column_end":18},"name":"handle","qualname":"<Runtime>::handle","value":"fn (&self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[{"value":"/ Return a handle to the runtime's spawner.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121790,"byte_end":121835,"line_start":489,"line_end":489,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121840,"byte_end":121843,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to spawn tasks that run on this runtime, and can","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121848,"byte_end":121932,"line_start":491,"line_end":491,"column_start":5,"column_end":89}},{"value":"/ be cloned to allow moving the `Handle` to other threads.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121937,"byte_end":121997,"line_start":492,"line_end":492,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122002,"byte_end":122005,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122010,"byte_end":122024,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122029,"byte_end":122032,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122037,"byte_end":122044,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122049,"byte_end":122081,"line_start":497,"line_end":497,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122086,"byte_end":122089,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122094,"byte_end":122121,"line_start":499,"line_end":499,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122126,"byte_end":122144,"line_start":500,"line_end":500,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122149,"byte_end":122152,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122157,"byte_end":122186,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122191,"byte_end":122194,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ handle.spawn(async { println!(\"hello\"); });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122199,"byte_end":122246,"line_start":504,"line_end":504,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122251,"byte_end":122258,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123684,"byte_end":123700,"line_start":545,"line_end":545,"column_start":12,"column_end":28},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"fn (self, duration: Duration) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, waiting for at most `duration` for all spawned","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122329,"byte_end":122401,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ task to shutdown.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122406,"byte_end":122427,"line_start":511,"line_end":511,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122432,"byte_end":122435,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Usually, dropping a `Runtime` handle is sufficient as tasks are able to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122440,"byte_end":122515,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ shutdown in a timely fashion. However, dropping a `Runtime` will wait","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122520,"byte_end":122593,"line_start":514,"line_end":514,"column_start":5,"column_end":78}},{"value":"/ indefinitely for all tasks to terminate, and there are cases where a long","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122598,"byte_end":122675,"line_start":515,"line_end":515,"column_start":5,"column_end":82}},{"value":"/ blocking task has been spawned, which can block dropping `Runtime`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122680,"byte_end":122751,"line_start":516,"line_end":516,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122756,"byte_end":122759,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ In this case, calling `shutdown_timeout` with an explicit wait timeout","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122764,"byte_end":122838,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ can work. The `shutdown_timeout` will signal all tasks to shutdown and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122843,"byte_end":122917,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/ will wait for at most `duration` for all spawned tasks to terminate. If","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122922,"byte_end":122997,"line_start":520,"line_end":520,"column_start":5,"column_end":80}},{"value":"/ `timeout` elapses before all tasks are dropped, the function returns and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123002,"byte_end":123078,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"/ outstanding tasks are potentially leaked.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123083,"byte_end":123128,"line_start":522,"line_end":522,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123133,"byte_end":123136,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123141,"byte_end":123155,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123160,"byte_end":123163,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123168,"byte_end":123175,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123180,"byte_end":123212,"line_start":527,"line_end":527,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123217,"byte_end":123237,"line_start":528,"line_end":528,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123242,"byte_end":123245,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123250,"byte_end":123270,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123275,"byte_end":123303,"line_start":531,"line_end":531,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123308,"byte_end":123311,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123316,"byte_end":123331,"line_start":533,"line_end":533,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123336,"byte_end":123385,"line_start":534,"line_end":534,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123390,"byte_end":123393,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123398,"byte_end":123434,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/        task::spawn_blocking(move || {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123439,"byte_end":123480,"line_start":537,"line_end":537,"column_start":5,"column_end":46}},{"value":"/            thread::sleep(Duration::from_secs(10_000));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123485,"byte_end":123543,"line_start":538,"line_end":538,"column_start":5,"column_end":63}},{"value":"/        });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123548,"byte_end":123562,"line_start":539,"line_end":539,"column_start":5,"column_end":19}},{"value":"/    });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123567,"byte_end":123577,"line_start":540,"line_end":540,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123582,"byte_end":123585,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/    runtime.shutdown_timeout(Duration::from_millis(100));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123590,"byte_end":123650,"line_start":542,"line_end":542,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123655,"byte_end":123660,"line_start":543,"line_end":543,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123665,"byte_end":123672,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124980,"byte_end":124999,"line_start":578,"line_end":578,"column_start":12,"column_end":31},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"fn (self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, without waiting for any spawned tasks to shutdown.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123862,"byte_end":123938,"line_start":552,"line_end":552,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123943,"byte_end":123946,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ This can be useful if you want to drop a runtime from within another runtime.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123951,"byte_end":124032,"line_start":554,"line_end":554,"column_start":5,"column_end":86}},{"value":"/ Normally, dropping a runtime will block indefinitely for spawned blocking tasks","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124037,"byte_end":124120,"line_start":555,"line_end":555,"column_start":5,"column_end":88}},{"value":"/ to complete, which would normally not be permitted within an asynchronous context.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124125,"byte_end":124211,"line_start":556,"line_end":556,"column_start":5,"column_end":91}},{"value":"/ By calling `shutdown_background()`, you can drop the runtime from such a context.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124216,"byte_end":124301,"line_start":557,"line_end":557,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124306,"byte_end":124309,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ Note however, that because we do not wait for any blocking tasks to complete, this","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124314,"byte_end":124400,"line_start":559,"line_end":559,"column_start":5,"column_end":91}},{"value":"/ may result in a resource leak (in that any blocking tasks are still running until they","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124405,"byte_end":124495,"line_start":560,"line_end":560,"column_start":5,"column_end":95}},{"value":"/ return.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124500,"byte_end":124511,"line_start":561,"line_end":561,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124516,"byte_end":124519,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `shutdown_timeout(Duration::of_nanos(0))`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124524,"byte_end":124609,"line_start":563,"line_end":563,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124614,"byte_end":124617,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124622,"byte_end":124629,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124634,"byte_end":124666,"line_start":566,"line_end":566,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124671,"byte_end":124674,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124679,"byte_end":124694,"line_start":568,"line_end":568,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124699,"byte_end":124748,"line_start":569,"line_end":569,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124753,"byte_end":124756,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124761,"byte_end":124797,"line_start":571,"line_end":571,"column_start":5,"column_end":41}},{"value":"/        let inner_runtime = Runtime::new().unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124802,"byte_end":124857,"line_start":572,"line_end":572,"column_start":5,"column_end":60}},{"value":"/        // ...","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124862,"byte_end":124879,"line_start":573,"line_end":573,"column_start":5,"column_end":22}},{"value":"/        inner_runtime.shutdown_background();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124884,"byte_end":124931,"line_start":574,"line_end":574,"column_start":5,"column_end":52}},{"value":"/    });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124936,"byte_end":124946,"line_start":575,"line_end":575,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124951,"byte_end":124956,"line_start":576,"line_end":576,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124961,"byte_end":124968,"line_start":577,"line_end":577,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4129},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signal","qualname":"::signal","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","parent":null,"children":[{"krate":0,"index":4130},{"krate":0,"index":4137},{"krate":0,"index":4138},{"krate":0,"index":4186},{"krate":0,"index":4190}],"decl_id":null,"docs":" Asynchronous signal handling for Tokio","sig":null,"attributes":[{"value":"cfg(feature = \"signal\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":20815,"byte_end":20841,"line_start":210,"line_end":210,"column_start":13,"column_end":39}},{"value":"cfg(not(loom))","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":20916,"byte_end":20933,"line_start":212,"line_end":212,"column_start":13,"column_end":30}},{"value":"! Asynchronous signal handling for Tokio","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727270,"byte_end":8727312,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727313,"byte_end":8727316,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Note that signal handling is in general a very tricky topic and should be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727317,"byte_end":8727394,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"! used with great care. This crate attempts to implement 'best practice' for","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727395,"byte_end":8727473,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! signal handling, but it should be evaluated for your own applications' needs","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727474,"byte_end":8727554,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"! to see if it's suitable.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727555,"byte_end":8727583,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727584,"byte_end":8727587,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! The are some fundamental limitations of this crate documented on the OS","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727588,"byte_end":8727663,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"! specific structures, as well.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727664,"byte_end":8727697,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727698,"byte_end":8727701,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727702,"byte_end":8727716,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727717,"byte_end":8727720,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Print on \"ctrl-c\" notification.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727721,"byte_end":8727756,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727757,"byte_end":8727760,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727761,"byte_end":8727779,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"! use tokio::signal;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727780,"byte_end":8727802,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727803,"byte_end":8727806,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727807,"byte_end":8727825,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727826,"byte_end":8727889,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"!     signal::ctrl_c().await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727890,"byte_end":8727922,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"!     println!(\"ctrl-c received!\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727923,"byte_end":8727960,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"!     Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727961,"byte_end":8727975,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727976,"byte_end":8727981,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727982,"byte_end":8727989,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727990,"byte_end":8727993,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! Wait for SIGHUP on Unix","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8727994,"byte_end":8728021,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8728022,"byte_end":8728025,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8728026,"byte_end":8728044,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"! # #[cfg(unix)] {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8728045,"byte_end":8728065,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"! use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8728066,"byte_end":8728116,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8728117,"byte_end":8728120,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8728121,"byte_end":8728139,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8728140,"byte_end":8728203,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"!     // An infinite stream of hangup signals.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8728204,"byte_end":8728252,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"!     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8728253,"byte_end":8728308,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8728309,"byte_end":8728312,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"!     // Print whenever a HUP signal is received","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8728313,"byte_end":8728363,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"!     loop {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8728364,"byte_end":8728378,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"!         stream.recv().await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8728379,"byte_end":8728411,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"!         println!(\"got signal HUP\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8728412,"byte_end":8728451,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"!     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8728452,"byte_end":8728461,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8728462,"byte_end":8728467,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"! # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8728468,"byte_end":8728475,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8728476,"byte_end":8728483,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4134},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8730559,"byte_end":8730565,"line_start":50,"line_end":50,"column_start":14,"column_end":20},"name":"ctrl_c","qualname":"::signal::ctrl_c::ctrl_c","value":"fn () -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Completes when a \"ctrl-c\" notification is sent to the process.","sig":null,"attributes":[{"value":"/ Completes when a \"ctrl-c\" notification is sent to the process.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8728857,"byte_end":8728923,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8728924,"byte_end":8728927,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While signals are handled very differently between Unix and Windows, both","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8728928,"byte_end":8729005,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ platforms support receiving a signal on \"ctrl-c\". This function provides a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8729006,"byte_end":8729084,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ portable API for receiving this notification.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8729085,"byte_end":8729134,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8729135,"byte_end":8729138,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Once the returned future is polled, a listener is registered. The future","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8729139,"byte_end":8729215,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ will complete on the first received `ctrl-c` **after** the initial call to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8729216,"byte_end":8729294,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ either `Future::poll` or `.await`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8729295,"byte_end":8729333,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8729334,"byte_end":8729337,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8729338,"byte_end":8729351,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8729352,"byte_end":8729355,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ On Unix platforms, the first time that a `Signal` instance is registered for a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8729356,"byte_end":8729438,"line_start":20,"line_end":20,"column_start":1,"column_end":83}},{"value":"/ particular signal kind, an OS signal-handler is installed which replaces the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8729439,"byte_end":8729519,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ default platform behavior when that signal is received, **for the duration of","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8729520,"byte_end":8729601,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ the entire process**.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8729602,"byte_end":8729627,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8729628,"byte_end":8729631,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8729632,"byte_end":8729705,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ receives a signal generated by \"CTRL+C\" on the terminal. But, when a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8729706,"byte_end":8729778,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `ctrl_c` stream is created to listen for this signal, the time it arrives,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8729779,"byte_end":8729857,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ it will be translated to a stream event, and the process will continue to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8729858,"byte_end":8729935,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ execute.  **Even if this `Signal` instance is dropped, subsequent SIGINT","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8729936,"byte_end":8730012,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ deliveries will end up captured by Tokio, and the default platform behavior","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8730013,"byte_end":8730092,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ will NOT be reset**.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8730093,"byte_end":8730117,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8730118,"byte_end":8730121,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8730122,"byte_end":8730200,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8730201,"byte_end":8730261,"line_start":34,"line_end":34,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8730262,"byte_end":8730265,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8730266,"byte_end":8730280,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8730281,"byte_end":8730284,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8730285,"byte_end":8730303,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8730304,"byte_end":8730326,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8730327,"byte_end":8730330,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8730331,"byte_end":8730349,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8730350,"byte_end":8730371,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/     println!(\"waiting for ctrl-c\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8730372,"byte_end":8730411,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8730412,"byte_end":8730415,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     signal::ctrl_c().await.expect(\"failed to listen for event\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8730416,"byte_end":8730484,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8730485,"byte_end":8730488,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     println!(\"received ctrl-c event\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8730489,"byte_end":8730531,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8730532,"byte_end":8730537,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8730538,"byte_end":8730545,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":4190},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::signal::unix","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","parent":null,"children":[{"krate":0,"index":4191},{"krate":0,"index":4194},{"krate":0,"index":4201},{"krate":0,"index":4204},{"krate":0,"index":4205},{"krate":0,"index":4206},{"krate":0,"index":4211},{"krate":0,"index":4212},{"krate":0,"index":4215},{"krate":0,"index":4216},{"krate":0,"index":4219},{"krate":0,"index":4220},{"krate":0,"index":4221},{"krate":0,"index":4224},{"krate":0,"index":4286},{"krate":0,"index":4289},{"krate":0,"index":4231},{"krate":0,"index":4291},{"krate":0,"index":4297},{"krate":0,"index":4295},{"krate":0,"index":4294},{"krate":0,"index":4233},{"krate":0,"index":4247},{"krate":0,"index":4251},{"krate":0,"index":4253},{"krate":0,"index":4254},{"krate":0,"index":4299},{"krate":0,"index":4301},{"krate":0,"index":4258},{"krate":0,"index":4260},{"krate":0,"index":4303},{"krate":0,"index":4306},{"krate":0,"index":4264},{"krate":0,"index":4265},{"krate":0,"index":4308},{"krate":0,"index":4272}],"decl_id":null,"docs":" Unix-specific types for signal handling.","sig":null,"attributes":[{"value":"! Unix-specific types for signal handling.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8740003,"byte_end":8740047,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8740048,"byte_end":8740051,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is only defined on Unix platforms and contains the primary","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8740052,"byte_end":8740126,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! `Signal` type for receiving notifications of signals.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8740127,"byte_end":8740184,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"cfg(unix)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8740186,"byte_end":8740199,"line_start":6,"line_end":6,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4291},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8741514,"byte_end":8741524,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"SignalKind","qualname":"::signal::unix::SignalKind","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents the specific kind of signal to listen for.\n","sig":null,"attributes":[{"value":"/ Represents the specific kind of signal to listen for.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8741415,"byte_end":8741472,"line_start":59,"line_end":59,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4234},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8741923,"byte_end":8741931,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<SignalKind>::from_raw","value":"fn (signum: c_int) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows for listening to any valid OS signal.","sig":null,"attributes":[{"value":"/ Allows for listening to any valid OS signal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8741556,"byte_end":8741604,"line_start":64,"line_end":64,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8741609,"byte_end":8741612,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ For example, this can be used for listening for platform-specific","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8741617,"byte_end":8741686,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ signals.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8741691,"byte_end":8741703,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8741708,"byte_end":8741726,"line_start":68,"line_end":68,"column_start":5,"column_end":23}},{"value":"/ # use tokio::signal::unix::SignalKind;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8741731,"byte_end":8741773,"line_start":69,"line_end":69,"column_start":5,"column_end":47}},{"value":"/ # let signum = -1;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8741778,"byte_end":8741800,"line_start":70,"line_end":70,"column_start":5,"column_end":27}},{"value":"/ // let signum = libc::OS_SPECIFIC_SIGNAL;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8741805,"byte_end":8741850,"line_start":71,"line_end":71,"column_start":5,"column_end":50}},{"value":"/ let kind = SignalKind::from_raw(signum);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8741855,"byte_end":8741899,"line_start":72,"line_end":72,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8741904,"byte_end":8741911,"line_start":73,"line_end":73,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4235},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8742185,"byte_end":8742190,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"alarm","qualname":"<SignalKind>::alarm","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGALRM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGALRM signal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8741989,"byte_end":8742023,"line_start":78,"line_end":78,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8742028,"byte_end":8742031,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when a real-time timer has expired.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8742036,"byte_end":8742111,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8742116,"byte_end":8742173,"line_start":81,"line_end":81,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4236},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8742432,"byte_end":8742437,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"child","qualname":"<SignalKind>::child","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGCHLD signal.","sig":null,"attributes":[{"value":"/ Represents the SIGCHLD signal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8742242,"byte_end":8742276,"line_start":86,"line_end":86,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8742281,"byte_end":8742284,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the status of a child process","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8742289,"byte_end":8742363,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ has changed. By default, this signal is ignored.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8742368,"byte_end":8742420,"line_start":89,"line_end":89,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4237},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8742683,"byte_end":8742689,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"hangup","qualname":"<SignalKind>::hangup","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGHUP signal.","sig":null,"attributes":[{"value":"/ Represents the SIGHUP signal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8742489,"byte_end":8742522,"line_start":94,"line_end":94,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8742527,"byte_end":8742530,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal is disconnected.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8742535,"byte_end":8742609,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8742614,"byte_end":8742671,"line_start":97,"line_end":97,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4238},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8743103,"byte_end":8743107,"line_start":113,"line_end":113,"column_start":12,"column_end":16},"name":"info","qualname":"<SignalKind>::info","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGINFO signal.","sig":null,"attributes":[{"value":"/ Represents the SIGINFO signal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8742740,"byte_end":8742774,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8742779,"byte_end":8742782,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to request a status update from the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8742787,"byte_end":8742862,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ process. By default, this signal is ignored.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8742867,"byte_end":8742915,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"macos\",\n          target_os = \"netbsd\", target_os = \"openbsd\"))","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8742920,"byte_end":8743091,"line_start":106,"line_end":112,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4239},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8743342,"byte_end":8743351,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"interrupt","qualname":"<SignalKind>::interrupt","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGINT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGINT signal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8743159,"byte_end":8743192,"line_start":117,"line_end":117,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8743197,"byte_end":8743200,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to interrupt a program.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8743205,"byte_end":8743268,"line_start":119,"line_end":119,"column_start":5,"column_end":68}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8743273,"byte_end":8743330,"line_start":120,"line_end":120,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4240},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8743600,"byte_end":8743602,"line_start":129,"line_end":129,"column_start":12,"column_end":14},"name":"io","qualname":"<SignalKind>::io","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGIO signal.","sig":null,"attributes":[{"value":"/ Represents the SIGIO signal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8743402,"byte_end":8743434,"line_start":125,"line_end":125,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8743439,"byte_end":8743442,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when I/O operations are possible","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8743447,"byte_end":8743519,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ on some file descriptor. By default, this signal is ignored.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8743524,"byte_end":8743588,"line_start":128,"line_end":128,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4241},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8743886,"byte_end":8743890,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"pipe","qualname":"<SignalKind>::pipe","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGPIPE signal.","sig":null,"attributes":[{"value":"/ Represents the SIGPIPE signal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8743652,"byte_end":8743686,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8743691,"byte_end":8743694,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the process attempts to write","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8743699,"byte_end":8743773,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ to a pipe which has no reader. By default, the process is terminated by","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8743778,"byte_end":8743853,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ this signal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8743858,"byte_end":8743874,"line_start":137,"line_end":137,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":4242},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8744193,"byte_end":8744197,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"quit","qualname":"<SignalKind>::quit","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGQUIT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGQUIT signal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8743942,"byte_end":8743976,"line_start":142,"line_end":142,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8743981,"byte_end":8743984,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8743989,"byte_end":8744055,"line_start":144,"line_end":144,"column_start":5,"column_end":71}},{"value":"/ process, after which the OS will dump the process core.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8744060,"byte_end":8744119,"line_start":145,"line_end":145,"column_start":5,"column_end":64}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8744124,"byte_end":8744181,"line_start":146,"line_end":146,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4243},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8744445,"byte_end":8744454,"line_start":155,"line_end":155,"column_start":12,"column_end":21},"name":"terminate","qualname":"<SignalKind>::terminate","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGTERM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGTERM signal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8744249,"byte_end":8744283,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8744288,"byte_end":8744291,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8744296,"byte_end":8744362,"line_start":153,"line_end":153,"column_start":5,"column_end":71}},{"value":"/ process. By default, the process is terminated by this signal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8744367,"byte_end":8744433,"line_start":154,"line_end":154,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4244},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8744677,"byte_end":8744690,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"user_defined1","qualname":"<SignalKind>::user_defined1","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR1 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR1 signal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8744506,"byte_end":8744540,"line_start":159,"line_end":159,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8744545,"byte_end":8744548,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8744553,"byte_end":8744603,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8744608,"byte_end":8744665,"line_start":162,"line_end":162,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4245},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8744913,"byte_end":8744926,"line_start":171,"line_end":171,"column_start":12,"column_end":25},"name":"user_defined2","qualname":"<SignalKind>::user_defined2","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR2 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR2 signal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8744742,"byte_end":8744776,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8744781,"byte_end":8744784,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8744789,"byte_end":8744839,"line_start":169,"line_end":169,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8744844,"byte_end":8744901,"line_start":170,"line_end":170,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4246},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8745158,"byte_end":8745171,"line_start":179,"line_end":179,"column_start":12,"column_end":25},"name":"window_change","qualname":"<SignalKind>::window_change","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGWINCH signal.","sig":null,"attributes":[{"value":"/ Represents the SIGWINCH signal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8744978,"byte_end":8745013,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8745018,"byte_end":8745021,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal window is resized.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8745026,"byte_end":8745102,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ By default, this signal is ignored.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8745107,"byte_end":8745146,"line_start":178,"line_end":178,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4303},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752594,"byte_end":8752600,"line_start":378,"line_end":378,"column_start":12,"column_end":18},"name":"Signal","qualname":"::signal::unix::Signal","value":"Signal {  }","parent":null,"children":[{"krate":0,"index":4304},{"krate":0,"index":4305}],"decl_id":null,"docs":" A stream of events for receiving a particular type of OS signal.","sig":null,"attributes":[{"value":"/ A stream of events for receiving a particular type of OS signal.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8749829,"byte_end":8749897,"line_start":314,"line_end":314,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8749898,"byte_end":8749901,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ In general signal handling on Unix is a pretty tricky topic, and this","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8749902,"byte_end":8749975,"line_start":316,"line_end":316,"column_start":1,"column_end":74}},{"value":"/ structure is no exception! There are some important limitations to keep in","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8749976,"byte_end":8750054,"line_start":317,"line_end":317,"column_start":1,"column_end":79}},{"value":"/ mind when using `Signal` streams:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8750055,"byte_end":8750092,"line_start":318,"line_end":318,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8750093,"byte_end":8750096,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ * Signals handling in Unix already necessitates coalescing signals","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8750097,"byte_end":8750167,"line_start":320,"line_end":320,"column_start":1,"column_end":71}},{"value":"/   together sometimes. This `Signal` stream is also no exception here in","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8750168,"byte_end":8750243,"line_start":321,"line_end":321,"column_start":1,"column_end":76}},{"value":"/   that it will also coalesce signals. That is, even if the signal handler","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8750244,"byte_end":8750321,"line_start":322,"line_end":322,"column_start":1,"column_end":78}},{"value":"/   for this process runs multiple times, the `Signal` stream may only return","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8750322,"byte_end":8750401,"line_start":323,"line_end":323,"column_start":1,"column_end":80}},{"value":"/   one signal notification. Specifically, before `poll` is called, all","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8750402,"byte_end":8750475,"line_start":324,"line_end":324,"column_start":1,"column_end":74}},{"value":"/   signal notifications are coalesced into one item returned from `poll`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8750476,"byte_end":8750552,"line_start":325,"line_end":325,"column_start":1,"column_end":77}},{"value":"/   Once `poll` has been called, however, a further signal is guaranteed to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8750553,"byte_end":8750630,"line_start":326,"line_end":326,"column_start":1,"column_end":78}},{"value":"/   be yielded as an item.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8750631,"byte_end":8750659,"line_start":327,"line_end":327,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8750660,"byte_end":8750663,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/   Put another way, any element pulled off the returned stream corresponds to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8750664,"byte_end":8750744,"line_start":329,"line_end":329,"column_start":1,"column_end":81}},{"value":"/   *at least one* signal, but possibly more.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8750745,"byte_end":8750792,"line_start":330,"line_end":330,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8750793,"byte_end":8750796,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ * Signal handling in general is relatively inefficient. Although some","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8750797,"byte_end":8750870,"line_start":332,"line_end":332,"column_start":1,"column_end":74}},{"value":"/   improvements are possible in this crate, it's recommended to not plan on","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8750871,"byte_end":8750949,"line_start":333,"line_end":333,"column_start":1,"column_end":79}},{"value":"/   having millions of signal channels open.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8750950,"byte_end":8750996,"line_start":334,"line_end":334,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8750997,"byte_end":8751000,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ If you've got any questions about this feel free to open an issue on the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8751001,"byte_end":8751077,"line_start":336,"line_end":336,"column_start":1,"column_end":77}},{"value":"/ repo! New approaches to alleviate some of these limitations are always","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8751078,"byte_end":8751152,"line_start":337,"line_end":337,"column_start":1,"column_end":75}},{"value":"/ appreciated!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8751153,"byte_end":8751169,"line_start":338,"line_end":338,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8751170,"byte_end":8751173,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8751174,"byte_end":8751187,"line_start":340,"line_end":340,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8751188,"byte_end":8751191,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ The first time that a `Signal` instance is registered for a particular","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8751192,"byte_end":8751266,"line_start":342,"line_end":342,"column_start":1,"column_end":75}},{"value":"/ signal kind, an OS signal-handler is installed which replaces the default","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8751267,"byte_end":8751344,"line_start":343,"line_end":343,"column_start":1,"column_end":78}},{"value":"/ platform behavior when that signal is received, **for the duration of the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8751345,"byte_end":8751422,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/ entire process**.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8751423,"byte_end":8751444,"line_start":345,"line_end":345,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8751445,"byte_end":8751448,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8751449,"byte_end":8751522,"line_start":347,"line_end":347,"column_start":1,"column_end":74}},{"value":"/ receives SIGINT. But, when a `Signal` instance is created to listen for","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8751523,"byte_end":8751598,"line_start":348,"line_end":348,"column_start":1,"column_end":76}},{"value":"/ this signal, the next SIGINT that arrives will be translated to a stream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8751599,"byte_end":8751675,"line_start":349,"line_end":349,"column_start":1,"column_end":77}},{"value":"/ event, and the process will continue to execute. **Even if this `Signal`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8751676,"byte_end":8751752,"line_start":350,"line_end":350,"column_start":1,"column_end":77}},{"value":"/ instance is dropped, subsequent SIGINT deliveries will end up captured by","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8751753,"byte_end":8751830,"line_start":351,"line_end":351,"column_start":1,"column_end":78}},{"value":"/ Tokio, and the default platform behavior will NOT be reset**.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8751831,"byte_end":8751896,"line_start":352,"line_end":352,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8751897,"byte_end":8751900,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8751901,"byte_end":8751979,"line_start":354,"line_end":354,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8751980,"byte_end":8752040,"line_start":355,"line_end":355,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752041,"byte_end":8752044,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752045,"byte_end":8752059,"line_start":357,"line_end":357,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752060,"byte_end":8752063,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752064,"byte_end":8752083,"line_start":359,"line_end":359,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752084,"byte_end":8752087,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752088,"byte_end":8752106,"line_start":361,"line_end":361,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752107,"byte_end":8752157,"line_start":362,"line_end":362,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752158,"byte_end":8752161,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752162,"byte_end":8752180,"line_start":364,"line_end":364,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752181,"byte_end":8752244,"line_start":365,"line_end":365,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752245,"byte_end":8752293,"line_start":366,"line_end":366,"column_start":1,"column_end":49}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752294,"byte_end":8752349,"line_start":367,"line_end":367,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752350,"byte_end":8752353,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752354,"byte_end":8752404,"line_start":369,"line_end":369,"column_start":1,"column_end":51}},{"value":"/     loop {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752405,"byte_end":8752419,"line_start":370,"line_end":370,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752420,"byte_end":8752452,"line_start":371,"line_end":371,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752453,"byte_end":8752492,"line_start":372,"line_end":372,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752493,"byte_end":8752502,"line_start":373,"line_end":373,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752503,"byte_end":8752508,"line_start":374,"line_end":374,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752509,"byte_end":8752516,"line_start":375,"line_end":375,"column_start":1,"column_end":8}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752517,"byte_end":8752565,"line_start":376,"line_end":376,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4264},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8753693,"byte_end":8753699,"line_start":405,"line_end":405,"column_start":8,"column_end":14},"name":"signal","qualname":"::signal::unix::signal","value":"fn (kind: SignalKind) -> io::Result<Signal>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream which will receive notifications when the current\n process receives the specified signal `kind`.","sig":null,"attributes":[{"value":"/ Creates a new stream which will receive notifications when the current","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752648,"byte_end":8752722,"line_start":383,"line_end":383,"column_start":1,"column_end":75}},{"value":"/ process receives the specified signal `kind`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752723,"byte_end":8752772,"line_start":384,"line_end":384,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752773,"byte_end":8752776,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ This function will create a new stream which binds to the default reactor.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752777,"byte_end":8752855,"line_start":386,"line_end":386,"column_start":1,"column_end":79}},{"value":"/ The `Signal` stream is an infinite stream which will receive","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752856,"byte_end":8752920,"line_start":387,"line_end":387,"column_start":1,"column_end":65}},{"value":"/ notifications whenever a signal is received. More documentation can be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752921,"byte_end":8752995,"line_start":388,"line_end":388,"column_start":1,"column_end":75}},{"value":"/ found on `Signal` itself, but to reiterate:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8752996,"byte_end":8753043,"line_start":389,"line_end":389,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8753044,"byte_end":8753047,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ * Signals may be coalesced beyond what the kernel already does.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8753048,"byte_end":8753115,"line_start":391,"line_end":391,"column_start":1,"column_end":68}},{"value":"/ * Once a signal handler is registered with the process the underlying","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8753116,"byte_end":8753189,"line_start":392,"line_end":392,"column_start":1,"column_end":74}},{"value":"/   libc signal handler is never unregistered.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8753190,"byte_end":8753238,"line_start":393,"line_end":393,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8753239,"byte_end":8753242,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ A `Signal` stream can be created for a particular signal number","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8753243,"byte_end":8753310,"line_start":395,"line_end":395,"column_start":1,"column_end":68}},{"value":"/ multiple times. When a signal is received then all the associated","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8753311,"byte_end":8753380,"line_start":396,"line_end":396,"column_start":1,"column_end":70}},{"value":"/ channels will receive the signal notification.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8753381,"byte_end":8753431,"line_start":397,"line_end":397,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8753432,"byte_end":8753435,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8753436,"byte_end":8753448,"line_start":399,"line_end":399,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8753449,"byte_end":8753452,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ * If the lower-level C functions fail for some reason.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8753453,"byte_end":8753511,"line_start":401,"line_end":401,"column_start":1,"column_end":59}},{"value":"/ * If the previous initialization of this specific signal failed.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8753512,"byte_end":8753580,"line_start":402,"line_end":402,"column_start":1,"column_end":69}},{"value":"/ * If the signal is one of","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8753581,"byte_end":8753610,"line_start":403,"line_end":403,"column_start":1,"column_end":30}},{"value":"/   [`signal_hook::FORBIDDEN`](fn@signal_hook_registry::register#panics)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8753611,"byte_end":8753685,"line_start":404,"line_end":404,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4266},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754910,"byte_end":8754914,"line_start":447,"line_end":447,"column_start":18,"column_end":22},"name":"recv","qualname":"<Signal>::recv","value":"fn (&mut self) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Receives the next signal notification event.","sig":null,"attributes":[{"value":"/ Receives the next signal notification event.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754203,"byte_end":8754251,"line_start":424,"line_end":424,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754256,"byte_end":8754259,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754264,"byte_end":8754336,"line_start":426,"line_end":426,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754341,"byte_end":8754344,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754349,"byte_end":8754363,"line_start":428,"line_end":428,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754368,"byte_end":8754371,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754376,"byte_end":8754395,"line_start":430,"line_end":430,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754400,"byte_end":8754403,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754408,"byte_end":8754426,"line_start":432,"line_end":432,"column_start":5,"column_end":23}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754431,"byte_end":8754481,"line_start":433,"line_end":433,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754486,"byte_end":8754489,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754494,"byte_end":8754512,"line_start":435,"line_end":435,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754517,"byte_end":8754580,"line_start":436,"line_end":436,"column_start":5,"column_end":68}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754585,"byte_end":8754633,"line_start":437,"line_end":437,"column_start":5,"column_end":53}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754638,"byte_end":8754693,"line_start":438,"line_end":438,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754698,"byte_end":8754701,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754706,"byte_end":8754756,"line_start":440,"line_end":440,"column_start":5,"column_end":55}},{"value":"/     loop {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754761,"byte_end":8754775,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/         stream.recv().await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754780,"byte_end":8754812,"line_start":442,"line_end":442,"column_start":5,"column_end":37}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754817,"byte_end":8754856,"line_start":443,"line_end":443,"column_start":5,"column_end":44}},{"value":"/     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754861,"byte_end":8754870,"line_start":444,"line_end":444,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754875,"byte_end":8754880,"line_start":445,"line_end":445,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754885,"byte_end":8754892,"line_start":446,"line_end":446,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4271},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755863,"byte_end":8755872,"line_start":480,"line_end":480,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Signal>::poll_recv","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next signal notification event, outside of an\n `async` context.","sig":null,"attributes":[{"value":"/ Polls to receive the next signal notification event, outside of an","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755036,"byte_end":8755106,"line_start":452,"line_end":452,"column_start":5,"column_end":75}},{"value":"/ `async` context.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755111,"byte_end":8755131,"line_start":453,"line_end":453,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755136,"byte_end":8755139,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755144,"byte_end":8755216,"line_start":455,"line_end":455,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755221,"byte_end":8755224,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755229,"byte_end":8755243,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755248,"byte_end":8755251,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Polling from a manually implemented future","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755256,"byte_end":8755302,"line_start":459,"line_end":459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755307,"byte_end":8755310,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755315,"byte_end":8755333,"line_start":461,"line_end":461,"column_start":5,"column_end":23}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755338,"byte_end":8755360,"line_start":462,"line_end":462,"column_start":5,"column_end":27}},{"value":"/ use std::future::Future;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755365,"byte_end":8755393,"line_start":463,"line_end":463,"column_start":5,"column_end":33}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755398,"byte_end":8755433,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ use tokio::signal::unix::Signal;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755438,"byte_end":8755474,"line_start":465,"line_end":465,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755479,"byte_end":8755482,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ struct MyFuture {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755487,"byte_end":8755508,"line_start":467,"line_end":467,"column_start":5,"column_end":26}},{"value":"/     signal: Signal,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755513,"byte_end":8755536,"line_start":468,"line_end":468,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755541,"byte_end":8755546,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755551,"byte_end":8755554,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755559,"byte_end":8755589,"line_start":471,"line_end":471,"column_start":5,"column_end":35}},{"value":"/     type Output = Option<()>;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755594,"byte_end":8755627,"line_start":472,"line_end":472,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755632,"byte_end":8755635,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/     fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755640,"byte_end":8755727,"line_start":474,"line_end":474,"column_start":5,"column_end":92}},{"value":"/         println!(\"polling MyFuture\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755732,"byte_end":8755773,"line_start":475,"line_end":475,"column_start":5,"column_end":46}},{"value":"/         self.signal.poll_recv(cx)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755778,"byte_end":8755815,"line_start":476,"line_end":476,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755820,"byte_end":8755829,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755834,"byte_end":8755839,"line_start":478,"line_end":478,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8755844,"byte_end":8755851,"line_start":479,"line_end":479,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4311},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":4312},{"krate":0,"index":4332},{"krate":0,"index":4333},{"krate":0,"index":4353},{"krate":0,"index":4354},{"krate":0,"index":4374},{"krate":0,"index":4375},{"krate":0,"index":4466},{"krate":0,"index":4467},{"krate":0,"index":4468},{"krate":0,"index":4488},{"krate":0,"index":4491},{"krate":0,"index":4513},{"krate":0,"index":4514},{"krate":0,"index":4537},{"krate":0,"index":4538},{"krate":0,"index":4557},{"krate":0,"index":4558},{"krate":0,"index":4573},{"krate":0,"index":4574},{"krate":0,"index":4589},{"krate":0,"index":4592},{"krate":0,"index":4617},{"krate":0,"index":4618},{"krate":0,"index":4641},{"krate":0,"index":4642},{"krate":0,"index":4659},{"krate":0,"index":4660},{"krate":0,"index":4679},{"krate":0,"index":4682},{"krate":0,"index":4702},{"krate":0,"index":4705},{"krate":0,"index":4747},{"krate":0,"index":4748},{"krate":0,"index":4768},{"krate":0,"index":4769},{"krate":0,"index":4791},{"krate":0,"index":4792},{"krate":0,"index":4813},{"krate":0,"index":4814},{"krate":0,"index":4835},{"krate":0,"index":4836},{"krate":0,"index":4860},{"krate":0,"index":4975},{"krate":0,"index":4998},{"krate":0,"index":4999},{"krate":0,"index":4861},{"krate":0,"index":4862},{"krate":0,"index":4896},{"krate":0,"index":4898}],"decl_id":null,"docs":" Stream utilities for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"stream\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21047,"byte_end":21073,"line_start":221,"line_end":221,"column_start":13,"column_end":39}},{"value":"! Stream utilities for Tokio.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8765042,"byte_end":8765073,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8765074,"byte_end":8765077,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! A `Stream` is an asynchronous sequence of values. It can be thought of as an asynchronous version of the standard library's `Iterator` trait.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8765078,"byte_end":8765223,"line_start":3,"line_end":3,"column_start":1,"column_end":146}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8765224,"byte_end":8765227,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module provides helpers to work with them.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8765228,"byte_end":8765279,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4899},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8790960,"byte_end":8790969,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":4903},{"krate":0,"index":4904}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`all`](super::StreamExt::all) method.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8790806,"byte_end":8790863,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8790881,"byte_end":8790948,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4910},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8792123,"byte_end":8792132,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":4914},{"krate":0,"index":4915}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`any`](super::StreamExt::any) method.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8791969,"byte_end":8792026,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8792044,"byte_end":8792111,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7779},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":8793252,"byte_end":8793257,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":7782},{"krate":0,"index":7783}],"decl_id":null,"docs":" Stream returned by the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7758},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8794490,"byte_end":8794497,"line_start":15,"line_end":15,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":7761},{"krate":0,"index":7762}],"decl_id":null,"docs":" Future returned by the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8156368,"byte_end":8156377,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":4389},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8795062,"byte_end":8795072,"line_start":36,"line_end":36,"column_start":11,"column_end":21},"name":"FromStream","qualname":"::stream::collect::FromStream","value":"FromStream<T>: sealed::FromStreamPriv<T>","parent":null,"children":[],"decl_id":null,"docs":" Convert from a [`Stream`](crate::stream::Stream).","sig":null,"attributes":[{"value":"/ Convert from a [`Stream`](crate::stream::Stream).","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8794649,"byte_end":8794702,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8794703,"byte_end":8794706,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is not intended to be used directly. Instead, call","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8794707,"byte_end":8794772,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ [`StreamExt::collect()`](super::StreamExt::collect).","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8794773,"byte_end":8794829,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8794830,"byte_end":8794833,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Implementing","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8794834,"byte_end":8794852,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8794853,"byte_end":8794856,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait may not be implemented by third parties. The trait is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8794857,"byte_end":8794936,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ sealed in order to make changes in the future. Stabilization is pending","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8794937,"byte_end":8795012,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8795013,"byte_end":8795051,"line_start":35,"line_end":35,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":4460},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8799973,"byte_end":8799987,"line_start":231,"line_end":231,"column_start":15,"column_end":29},"name":"FromStreamPriv","qualname":"::stream::collect::sealed::FromStreamPriv","value":"FromStreamPriv<T>","parent":null,"children":[{"krate":0,"index":4462},{"krate":0,"index":4463},{"krate":0,"index":4464},{"krate":0,"index":4465}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4462},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8800067,"byte_end":8800077,"line_start":233,"line_end":233,"column_start":14,"column_end":24},"name":"Collection","qualname":"::stream::collect::sealed::FromStreamPriv::Collection","value":"type Collection;","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" Intermediate type used during collection process\n","sig":null,"attributes":[{"value":"/ Intermediate type used during collection process","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8800001,"byte_end":8800053,"line_start":232,"line_end":232,"column_start":9,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4463},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8800129,"byte_end":8800139,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"initialize","qualname":"::stream::collect::sealed::FromStreamPriv::initialize","value":"fn (lower: usize, upper: Option<usize>) -> Self::Collection","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" Initialize the collection\n","sig":null,"attributes":[{"value":"/ Initialize the collection","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8800088,"byte_end":8800117,"line_start":235,"line_end":235,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4464},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8800356,"byte_end":8800362,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"extend","qualname":"::stream::collect::sealed::FromStreamPriv::extend","value":"fn (collection: &mut Self::Collection, item: T) -> bool","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" Extend the collection with the received item","sig":null,"attributes":[{"value":"/ Extend the collection with the received item","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8800206,"byte_end":8800254,"line_start":238,"line_end":238,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8800263,"byte_end":8800266,"line_start":239,"line_end":239,"column_start":9,"column_end":12}},{"value":"/ Return `true` to continue streaming, `false` complete collection.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8800275,"byte_end":8800344,"line_start":240,"line_end":240,"column_start":9,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4465},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8800478,"byte_end":8800486,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"finalize","qualname":"::stream::collect::sealed::FromStreamPriv::finalize","value":"fn (collection: &mut Self::Collection) -> Self","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" Finalize collection into target type.\n","sig":null,"attributes":[{"value":"/ Finalize collection into target type.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8800425,"byte_end":8800466,"line_start":243,"line_end":243,"column_start":9,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":4921},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8800779,"byte_end":8800784,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`empty`](fn@empty) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`](fn@empty) function.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8800653,"byte_end":8800701,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8800719,"byte_end":8800767,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4481},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8801374,"byte_end":8801379,"line_start":36,"line_end":36,"column_start":14,"column_end":19},"name":"empty","qualname":"::stream::empty::empty","value":"fn <T> () -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields nothing.","sig":null,"attributes":[{"value":"/ Creates a stream that yields nothing.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8800909,"byte_end":8800950,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8800951,"byte_end":8800954,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and returns `None`. Use","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8800955,"byte_end":8801023,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ [`stream::pending()`](super::pending()) to obtain a stream that is never","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8801024,"byte_end":8801100,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8801101,"byte_end":8801111,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8801112,"byte_end":8801115,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8801116,"byte_end":8801130,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8801131,"byte_end":8801134,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8801135,"byte_end":8801151,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8801152,"byte_end":8801155,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8801156,"byte_end":8801163,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8801164,"byte_end":8801205,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8801206,"byte_end":8801209,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8801210,"byte_end":8801228,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8801229,"byte_end":8801250,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/     let mut none = stream::empty::<i32>();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8801251,"byte_end":8801297,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8801298,"byte_end":8801301,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(None, none.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8801302,"byte_end":8801346,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8801347,"byte_end":8801352,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8801353,"byte_end":8801360,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7685},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":8801962,"byte_end":8801968,"line_start":11,"line_end":11,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":7688},{"krate":0,"index":7689}],"decl_id":null,"docs":" Stream returned by the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8156368,"byte_end":8156377,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7640},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":8803400,"byte_end":8803409,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":7643},{"krate":0,"index":7644}],"decl_id":null,"docs":" Stream returned by the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8156368,"byte_end":8156377,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7612},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":8804826,"byte_end":8804836,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":7616},{"krate":0,"index":7617},{"krate":0,"index":7618}],"decl_id":null,"docs":" Future returned by the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7564},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":8805992,"byte_end":8805996,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":7566}],"decl_id":null,"docs":" Stream returned by [`fuse()`][super::StreamExt::fuse].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4928},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807128,"byte_end":8807132,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4930}],"decl_id":null,"docs":" Stream for the [`iter`](fn@iter) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`](fn@iter) function.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807004,"byte_end":8807050,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807068,"byte_end":8807116,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4582},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807706,"byte_end":8807710,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"fn <I> (i: I) -> Iter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807184,"byte_end":8807248,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807249,"byte_end":8807277,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807278,"byte_end":8807281,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807282,"byte_end":8807355,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807356,"byte_end":8807411,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807412,"byte_end":8807415,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807416,"byte_end":8807423,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807424,"byte_end":8807446,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807447,"byte_end":8807488,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807489,"byte_end":8807492,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::iter(vec![17, 19]);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807493,"byte_end":8807541,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807542,"byte_end":8807545,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(stream.next().await, Some(17));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807546,"byte_end":8807592,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, Some(19));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807593,"byte_end":8807639,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807640,"byte_end":8807682,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807683,"byte_end":8807690,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807691,"byte_end":8807698,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7497},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":8808490,"byte_end":8808493,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":7500},{"krate":0,"index":7501}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8156368,"byte_end":8156377,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7448},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":8809563,"byte_end":8809568,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Merge","qualname":"::stream::merge::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":7451},{"krate":0,"index":7452},{"krate":0,"index":7453}],"decl_id":null,"docs":" Stream returned by the [`merge`](super::StreamExt::merge) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4934},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8811443,"byte_end":8811447,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":4937}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8811287,"byte_end":8811346,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8811364,"byte_end":8811431,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4942},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812143,"byte_end":8812147,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":4944}],"decl_id":null,"docs":" Stream for the [`once`](fn@once) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`once`](fn@once) function.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812019,"byte_end":8812065,"line_start":7,"line_end":7,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812083,"byte_end":8812131,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4672},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812719,"byte_end":8812723,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"fn <T> (value: T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that emits an element exactly once.","sig":null,"attributes":[{"value":"/ Creates a stream that emits an element exactly once.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812223,"byte_end":8812279,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812280,"byte_end":8812283,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and emits the provided value once.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812284,"byte_end":8812363,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812364,"byte_end":8812367,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812368,"byte_end":8812382,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812383,"byte_end":8812386,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812387,"byte_end":8812394,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812395,"byte_end":8812436,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812437,"byte_end":8812440,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812441,"byte_end":8812459,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812460,"byte_end":8812481,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     // one is the loneliest number","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812482,"byte_end":8812520,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/     let mut one = stream::once(1);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812521,"byte_end":8812559,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812560,"byte_end":8812563,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(Some(1), one.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812564,"byte_end":8812610,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812611,"byte_end":8812614,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     // just one, that's all we get","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812615,"byte_end":8812653,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(None, one.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812654,"byte_end":8812697,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812698,"byte_end":8812703,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812704,"byte_end":8812711,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4948},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813346,"byte_end":8813353,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`pending`](fn@pending) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending`](fn@pending) function.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813216,"byte_end":8813268,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813286,"byte_end":8813334,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4695},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8814093,"byte_end":8814100,"line_start":40,"line_end":40,"column_start":14,"column_end":21},"name":"pending","qualname":"::stream::pending::pending","value":"fn <T> () -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that is never ready","sig":null,"attributes":[{"value":"/ Creates a stream that is never ready","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813484,"byte_end":8813524,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813525,"byte_end":8813528,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is never ready. Attempting to call","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813529,"byte_end":8813587,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/ [`next()`](crate::stream::StreamExt::next) will never complete. Use","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813588,"byte_end":8813659,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ [`stream::empty()`](super::empty()) to obtain a stream that is is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813660,"byte_end":8813729,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ immediately empty but returns no values.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813730,"byte_end":8813774,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813775,"byte_end":8813778,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813779,"byte_end":8813793,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813794,"byte_end":8813797,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813798,"byte_end":8813814,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813815,"byte_end":8813818,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813819,"byte_end":8813832,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813833,"byte_end":8813874,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813875,"byte_end":8813878,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813879,"byte_end":8813897,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813898,"byte_end":8813919,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/     let mut never = stream::pending::<i32>();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813920,"byte_end":8813969,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813970,"byte_end":8813973,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     // This will never complete","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813974,"byte_end":8814009,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/     never.next().await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8814010,"byte_end":8814037,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8814038,"byte_end":8814041,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     unreachable!();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8814042,"byte_end":8814065,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8814066,"byte_end":8814071,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8814072,"byte_end":8814079,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4955},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819749,"byte_end":8819758,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"StreamMap","qualname":"::stream::stream_map::StreamMap","value":"StreamMap {  }","parent":null,"children":[{"krate":0,"index":4958}],"decl_id":null,"docs":" Combine many streams into one, indexing each source stream with a unique\n key.","sig":null,"attributes":[{"value":"/ Combine many streams into one, indexing each source stream with a unique","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8814517,"byte_end":8814593,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ key.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8814594,"byte_end":8814602,"line_start":9,"line_end":9,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8814603,"byte_end":8814606,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is similar to [`StreamExt::merge`] in that it combines source","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8814607,"byte_end":8814684,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ streams into a single merged stream that yields values in the order that","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8814685,"byte_end":8814761,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ they arrive from the source streams. However, `StreamMap` has a lot more","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8814762,"byte_end":8814838,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ flexibility in usage patterns.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8814839,"byte_end":8814873,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8814874,"byte_end":8814877,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` can:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8814878,"byte_end":8814898,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8814899,"byte_end":8814902,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * Merge an arbitrary number of streams.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8814903,"byte_end":8814946,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ * Track which source stream the value was received from.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8814947,"byte_end":8815007,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ * Handle inserting and removing streams from the set of managed streams at","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8815008,"byte_end":8815086,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/   any point during iteration.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8815087,"byte_end":8815120,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8815121,"byte_end":8815124,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All source streams held by `StreamMap` are indexed using a key. This key is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8815125,"byte_end":8815204,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ included with the value when a source stream yields a value. The key is also","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8815205,"byte_end":8815285,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ used to remove the stream from the `StreamMap` before the stream has","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8815286,"byte_end":8815358,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ completed streaming.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8815359,"byte_end":8815383,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8815384,"byte_end":8815387,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # `Unpin`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8815388,"byte_end":8815401,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8815402,"byte_end":8815405,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Because the `StreamMap` API moves streams during runtime, both streams and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8815406,"byte_end":8815484,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ keys must be `Unpin`. In order to insert a `!Unpin` stream into a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8815485,"byte_end":8815554,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ `StreamMap`, use [`pin!`] to pin the stream to the stack or [`Box::pin`] to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8815555,"byte_end":8815634,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ pin the stream in the heap.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8815635,"byte_end":8815666,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8815667,"byte_end":8815670,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8815671,"byte_end":8815691,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8815692,"byte_end":8815695,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is backed by a `Vec<(K, V)>`. There is no guarantee that this","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8815696,"byte_end":8815773,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ internal implementation detail will persist in future versions, but it is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8815774,"byte_end":8815851,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ important to know the runtime implications. In general, `StreamMap` works","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8815852,"byte_end":8815929,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ best with a \"smallish\" number of streams as all entries are scanned on","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8815930,"byte_end":8816004,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ insert, remove, and polling. In cases where a large number of streams need","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816005,"byte_end":8816083,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ to be merged, it may be advisable to use tasks sending values on a shared","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816084,"byte_end":8816161,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ [`mpsc`] channel.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816162,"byte_end":8816183,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816184,"byte_end":8816187,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`StreamExt::merge`]: crate::stream::StreamExt::merge","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816188,"byte_end":8816245,"line_start":45,"line_end":45,"column_start":1,"column_end":58}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816246,"byte_end":8816277,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/ [`pin!`]: macro@pin","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816278,"byte_end":8816301,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/ [`Box::pin`]: std::boxed::Box::pin","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816302,"byte_end":8816340,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816341,"byte_end":8816344,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816345,"byte_end":8816359,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816360,"byte_end":8816363,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Merging two streams, then remove them after receiving the first value","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816364,"byte_end":8816437,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816438,"byte_end":8816441,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816442,"byte_end":8816449,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{StreamExt, StreamMap};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816450,"byte_end":8816496,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816497,"byte_end":8816523,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816524,"byte_end":8816527,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816528,"byte_end":8816546,"line_start":58,"line_end":58,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816547,"byte_end":8816568,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816569,"byte_end":8816616,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816617,"byte_end":8816664,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816665,"byte_end":8816668,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816669,"byte_end":8816702,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816703,"byte_end":8816742,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816743,"byte_end":8816746,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/         // This value will never be received. The send may or may not return","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816747,"byte_end":8816827,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/         // `Err` depending on if the remote end closed first or not.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816828,"byte_end":8816900,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/         let _ = tx1.send(2).await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816901,"byte_end":8816939,"line_start":68,"line_end":68,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816940,"byte_end":8816951,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816952,"byte_end":8816955,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816956,"byte_end":8816989,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8816990,"byte_end":8817029,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"/         let _ = tx2.send(4).await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817030,"byte_end":8817068,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817069,"byte_end":8817080,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817081,"byte_end":8817084,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     let mut map = StreamMap::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817085,"byte_end":8817124,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817125,"byte_end":8817128,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     // Insert both streams","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817129,"byte_end":8817159,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/     map.insert(\"one\", rx1);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817160,"byte_end":8817191,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/     map.insert(\"two\", rx2);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817192,"byte_end":8817223,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817224,"byte_end":8817227,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     // Read twice","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817228,"byte_end":8817249,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     for _ in 0..2 {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817250,"byte_end":8817273,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/         let (key, val) = map.next().await.unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817274,"byte_end":8817329,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817330,"byte_end":8817333,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/         if key == \"one\" {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817334,"byte_end":8817363,"line_start":86,"line_end":86,"column_start":1,"column_end":30}},{"value":"/             assert_eq!(val, 1);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817364,"byte_end":8817399,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/         } else {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817400,"byte_end":8817420,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/             assert_eq!(val, 3);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817421,"byte_end":8817456,"line_start":89,"line_end":89,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817457,"byte_end":8817470,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817471,"byte_end":8817474,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/         // Remove the stream to prevent reading the next value","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817475,"byte_end":8817541,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/         map.remove(key);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817542,"byte_end":8817570,"line_start":93,"line_end":93,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817571,"byte_end":8817580,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817581,"byte_end":8817586,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817587,"byte_end":8817594,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817595,"byte_end":8817598,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This example models a read-only client to a chat system with channels. The","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817599,"byte_end":8817677,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ client sends commands to join and leave channels. `StreamMap` is used to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817678,"byte_end":8817754,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ manage active channel subscriptions.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817755,"byte_end":8817795,"line_start":100,"line_end":100,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817796,"byte_end":8817799,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ For simplicity, messages are displayed with `println!`, but they could be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817800,"byte_end":8817877,"line_start":102,"line_end":102,"column_start":1,"column_end":78}},{"value":"/ sent to the client over a socket.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817878,"byte_end":8817915,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817916,"byte_end":8817919,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817920,"byte_end":8817933,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{Stream, StreamExt, StreamMap};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817934,"byte_end":8817988,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817989,"byte_end":8817992,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8817993,"byte_end":8818011,"line_start":108,"line_end":108,"column_start":1,"column_end":19}},{"value":"/     Join(String),","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818012,"byte_end":8818033,"line_start":109,"line_end":109,"column_start":1,"column_end":22}},{"value":"/     Leave(String),","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818034,"byte_end":8818056,"line_start":110,"line_end":110,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818057,"byte_end":8818062,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818063,"byte_end":8818066,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ fn commands() -> impl Stream<Item = Command> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818067,"byte_end":8818117,"line_start":113,"line_end":113,"column_start":1,"column_end":51}},{"value":"/     // Streams in user commands by parsing `stdin`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818118,"byte_end":8818173,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818174,"byte_end":8818204,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818205,"byte_end":8818210,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818211,"byte_end":8818214,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ // Join a channel, returns a stream of messages received on the channel.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818215,"byte_end":8818291,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ fn join(channel: &str) -> impl Stream<Item = String> + Unpin {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818292,"byte_end":8818358,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/     // left as an exercise to the reader","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818359,"byte_end":8818403,"line_start":120,"line_end":120,"column_start":1,"column_end":45}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818404,"byte_end":8818434,"line_start":121,"line_end":121,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818435,"byte_end":8818440,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818441,"byte_end":8818444,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818445,"byte_end":8818463,"line_start":124,"line_end":124,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818464,"byte_end":8818485,"line_start":125,"line_end":125,"column_start":1,"column_end":22}},{"value":"/     let mut channels = StreamMap::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818486,"byte_end":8818530,"line_start":126,"line_end":126,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818531,"byte_end":8818534,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/     // Input commands (join / leave channels).","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818535,"byte_end":8818585,"line_start":128,"line_end":128,"column_start":1,"column_end":51}},{"value":"/     let cmds = commands();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818586,"byte_end":8818616,"line_start":129,"line_end":129,"column_start":1,"column_end":31}},{"value":"/     tokio::pin!(cmds);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818617,"byte_end":8818643,"line_start":130,"line_end":130,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818644,"byte_end":8818647,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818648,"byte_end":8818662,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"/         tokio::select! {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818663,"byte_end":8818691,"line_start":133,"line_end":133,"column_start":1,"column_end":29}},{"value":"/             Some(cmd) = cmds.next() => {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818692,"byte_end":8818736,"line_start":134,"line_end":134,"column_start":1,"column_end":45}},{"value":"/                 match cmd {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818737,"byte_end":8818768,"line_start":135,"line_end":135,"column_start":1,"column_end":32}},{"value":"/                     Command::Join(chan) => {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818769,"byte_end":8818817,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/                         // Join the channel and add it to the `channels`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818818,"byte_end":8818894,"line_start":137,"line_end":137,"column_start":1,"column_end":77}},{"value":"/                         // stream map","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818895,"byte_end":8818936,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/                         let msgs = join(&chan);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818937,"byte_end":8818988,"line_start":139,"line_end":139,"column_start":1,"column_end":52}},{"value":"/                         channels.insert(chan, msgs);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8818989,"byte_end":8819045,"line_start":140,"line_end":140,"column_start":1,"column_end":57}},{"value":"/                     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819046,"byte_end":8819071,"line_start":141,"line_end":141,"column_start":1,"column_end":26}},{"value":"/                     Command::Leave(chan) => {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819072,"byte_end":8819121,"line_start":142,"line_end":142,"column_start":1,"column_end":50}},{"value":"/                         channels.remove(&chan);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819122,"byte_end":8819173,"line_start":143,"line_end":143,"column_start":1,"column_end":52}},{"value":"/                     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819174,"byte_end":8819199,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819200,"byte_end":8819221,"line_start":145,"line_end":145,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819222,"byte_end":8819239,"line_start":146,"line_end":146,"column_start":1,"column_end":18}},{"value":"/             Some((chan, msg)) = channels.next() => {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819240,"byte_end":8819296,"line_start":147,"line_end":147,"column_start":1,"column_end":57}},{"value":"/                 // Received a message, display it on stdout with the channel","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819297,"byte_end":8819377,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/                 // it originated from.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819378,"byte_end":8819420,"line_start":149,"line_end":149,"column_start":1,"column_end":43}},{"value":"/                 println!(\"{}: {}\", chan, msg);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819421,"byte_end":8819471,"line_start":150,"line_end":150,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819472,"byte_end":8819489,"line_start":151,"line_end":151,"column_start":1,"column_end":18}},{"value":"/             // Both the `commands` stream and the `channels` stream are","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819490,"byte_end":8819565,"line_start":152,"line_end":152,"column_start":1,"column_end":76}},{"value":"/             // complete. There is no more work to do, so leave the loop.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819566,"byte_end":8819642,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/             else => break,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819643,"byte_end":8819673,"line_start":154,"line_end":154,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819674,"byte_end":8819687,"line_start":155,"line_end":155,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819688,"byte_end":8819697,"line_start":156,"line_end":156,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819698,"byte_end":8819703,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819704,"byte_end":8819711,"line_start":158,"line_end":158,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4716},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820231,"byte_end":8820234,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamMap<K, V>>::new","value":"fn () -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819863,"byte_end":8819896,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819901,"byte_end":8819904,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The stream map is initially created with a capacity of `0`, so it will","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819909,"byte_end":8819983,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/ not allocate until it is first inserted into.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819988,"byte_end":8820037,"line_start":169,"line_end":169,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820042,"byte_end":8820045,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820050,"byte_end":8820064,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820069,"byte_end":8820072,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820077,"byte_end":8820084,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820089,"byte_end":8820133,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820138,"byte_end":8820141,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820146,"byte_end":8820207,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820212,"byte_end":8820219,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4717},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820739,"byte_end":8820752,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<StreamMap<K, V>>::with_capacity","value":"fn (capacity: usize) -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap` with the specified capacity.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820307,"byte_end":8820368,"line_start":182,"line_end":182,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820373,"byte_end":8820376,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The stream map will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820381,"byte_end":8820457,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ reallocating. If `capacity` is 0, the stream map will not allocate.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820462,"byte_end":8820533,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820538,"byte_end":8820541,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820546,"byte_end":8820560,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820565,"byte_end":8820568,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820573,"byte_end":8820580,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820585,"byte_end":8820629,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820634,"byte_end":8820637,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::with_capacity(10);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820642,"byte_end":8820715,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820720,"byte_end":8820727,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4718},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821370,"byte_end":8821374,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"keys","qualname":"<StreamMap<K, V>>::keys","value":"fn (&self) -> impl Iterator<Item = &K>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all keys in arbitrary order.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all keys in arbitrary order.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820883,"byte_end":8820944,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820949,"byte_end":8820952,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a K.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8820957,"byte_end":8820996,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821001,"byte_end":8821004,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821009,"byte_end":8821023,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821028,"byte_end":8821031,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821036,"byte_end":8821043,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821048,"byte_end":8821092,"line_start":207,"line_end":207,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821097,"byte_end":8821100,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821105,"byte_end":8821140,"line_start":209,"line_end":209,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821145,"byte_end":8821148,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821153,"byte_end":8821191,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821196,"byte_end":8821227,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821232,"byte_end":8821263,"line_start":213,"line_end":213,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821268,"byte_end":8821271,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821276,"byte_end":8821303,"line_start":215,"line_end":215,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821308,"byte_end":8821336,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821341,"byte_end":8821346,"line_start":217,"line_end":217,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821351,"byte_end":8821358,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4721},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821958,"byte_end":8821964,"line_start":242,"line_end":242,"column_start":12,"column_end":18},"name":"values","qualname":"<StreamMap<K, V>>::values","value":"fn (&self) -> impl Iterator<Item = &V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821467,"byte_end":8821522,"line_start":223,"line_end":223,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821527,"byte_end":8821530,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a V.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821535,"byte_end":8821574,"line_start":225,"line_end":225,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821579,"byte_end":8821582,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821587,"byte_end":8821601,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821606,"byte_end":8821609,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821614,"byte_end":8821621,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821626,"byte_end":8821670,"line_start":230,"line_end":230,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821675,"byte_end":8821678,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821683,"byte_end":8821718,"line_start":232,"line_end":232,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821723,"byte_end":8821726,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821731,"byte_end":8821769,"line_start":234,"line_end":234,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821774,"byte_end":8821805,"line_start":235,"line_end":235,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821810,"byte_end":8821841,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821846,"byte_end":8821849,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821854,"byte_end":8821886,"line_start":238,"line_end":238,"column_start":5,"column_end":37}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821891,"byte_end":8821924,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821929,"byte_end":8821934,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8821939,"byte_end":8821946,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4724},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822564,"byte_end":8822574,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<StreamMap<K, V>>::values_mut","value":"fn (&mut self) -> impl Iterator<Item = &mut V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822057,"byte_end":8822120,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822125,"byte_end":8822128,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a mut V.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822133,"byte_end":8822176,"line_start":248,"line_end":248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822181,"byte_end":8822184,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822189,"byte_end":8822203,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822208,"byte_end":8822211,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822216,"byte_end":8822223,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822228,"byte_end":8822272,"line_start":253,"line_end":253,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822277,"byte_end":8822280,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822285,"byte_end":8822320,"line_start":255,"line_end":255,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822325,"byte_end":8822328,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822333,"byte_end":8822371,"line_start":257,"line_end":257,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822376,"byte_end":8822407,"line_start":258,"line_end":258,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822412,"byte_end":8822443,"line_start":259,"line_end":259,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822448,"byte_end":8822451,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values_mut() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822456,"byte_end":8822492,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822497,"byte_end":8822530,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822535,"byte_end":8822540,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822545,"byte_end":8822552,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4727},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823152,"byte_end":8823160,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"capacity","qualname":"<StreamMap<K, V>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of streams the map can hold without reallocating.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822679,"byte_end":8822751,"line_start":269,"line_end":269,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822756,"byte_end":8822759,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the `StreamMap` might be able to hold","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822764,"byte_end":8822835,"line_start":271,"line_end":271,"column_start":5,"column_end":76}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822840,"byte_end":8822906,"line_start":272,"line_end":272,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822911,"byte_end":8822914,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822919,"byte_end":8822933,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822938,"byte_end":8822941,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822946,"byte_end":8822953,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8822958,"byte_end":8823002,"line_start":277,"line_end":277,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823007,"byte_end":8823010,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<i32, Pending<()>> = StreamMap::with_capacity(100);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823015,"byte_end":8823088,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823093,"byte_end":8823128,"line_start":280,"line_end":280,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823133,"byte_end":8823140,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4728},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823536,"byte_end":8823539,"line_start":298,"line_end":298,"column_start":12,"column_end":15},"name":"len","qualname":"<StreamMap<K, V>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams in the map.","sig":null,"attributes":[{"value":"/ Returns the number of streams in the map.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823222,"byte_end":8823267,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823272,"byte_end":8823275,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823280,"byte_end":8823294,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823299,"byte_end":8823302,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823307,"byte_end":8823314,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823319,"byte_end":8823363,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823368,"byte_end":8823371,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823376,"byte_end":8823409,"line_start":293,"line_end":293,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823414,"byte_end":8823441,"line_start":294,"line_end":294,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823446,"byte_end":8823480,"line_start":295,"line_end":295,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823485,"byte_end":8823512,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823517,"byte_end":8823524,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4729},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823890,"byte_end":8823898,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<StreamMap<K, V>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823596,"byte_end":8823647,"line_start":302,"line_end":302,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823652,"byte_end":8823655,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823660,"byte_end":8823674,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823679,"byte_end":8823682,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823687,"byte_end":8823694,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823699,"byte_end":8823733,"line_start":307,"line_end":307,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823738,"byte_end":8823741,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823746,"byte_end":8823777,"line_start":309,"line_end":309,"column_start":5,"column_end":36}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823782,"byte_end":8823808,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823813,"byte_end":8823834,"line_start":311,"line_end":311,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823839,"byte_end":8823866,"line_start":312,"line_end":312,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823871,"byte_end":8823878,"line_start":313,"line_end":313,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4730},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824310,"byte_end":8824315,"line_start":331,"line_end":331,"column_start":12,"column_end":17},"name":"clear","qualname":"<StreamMap<K, V>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-stream pairs. Keeps the allocated\n memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-stream pairs. Keeps the allocated","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8823959,"byte_end":8824029,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ memory for reuse.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824034,"byte_end":8824055,"line_start":319,"line_end":319,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824060,"byte_end":8824063,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824068,"byte_end":8824082,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824087,"byte_end":8824090,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824095,"byte_end":8824102,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824107,"byte_end":8824151,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824156,"byte_end":8824159,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824164,"byte_end":8824197,"line_start":326,"line_end":326,"column_start":5,"column_end":38}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824202,"byte_end":8824236,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ a.clear();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824241,"byte_end":8824255,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824260,"byte_end":8824286,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824291,"byte_end":8824298,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4731},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824990,"byte_end":8824996,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"insert","qualname":"<StreamMap<K, V>>::insert","value":"fn (&mut self, k: K, stream: V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-stream pair into the map.","sig":null,"attributes":[{"value":"/ Insert a key-stream pair into the map.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824370,"byte_end":8824412,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824417,"byte_end":8824420,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824425,"byte_end":8824490,"line_start":337,"line_end":337,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824495,"byte_end":8824498,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new `stream` replaces the old","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824503,"byte_end":8824578,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ one and the old stream is returned.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824583,"byte_end":8824622,"line_start":340,"line_end":340,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824627,"byte_end":8824630,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824635,"byte_end":8824649,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824654,"byte_end":8824657,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824662,"byte_end":8824669,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824674,"byte_end":8824718,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824723,"byte_end":8824726,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824731,"byte_end":8824766,"line_start":347,"line_end":347,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824771,"byte_end":8824774,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ assert!(map.insert(37, pending::<i32>()).is_none());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824779,"byte_end":8824835,"line_start":349,"line_end":349,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824840,"byte_end":8824869,"line_start":350,"line_end":350,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824874,"byte_end":8824877,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, pending());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824882,"byte_end":8824912,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/ assert!(map.insert(37, pending()).is_some());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824917,"byte_end":8824966,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8824971,"byte_end":8824978,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4732},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8825727,"byte_end":8825733,"line_start":380,"line_end":380,"column_start":12,"column_end":18},"name":"remove","qualname":"<StreamMap<K, V>>::remove","value":"fn <Q> (&mut self, k: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stream at the key if the key was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stream at the key if the key was previously in the map.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8825175,"byte_end":8825276,"line_start":365,"line_end":365,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8825281,"byte_end":8825284,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8825289,"byte_end":8825363,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8825368,"byte_end":8825432,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8825437,"byte_end":8825440,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8825445,"byte_end":8825459,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8825464,"byte_end":8825467,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8825472,"byte_end":8825479,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8825484,"byte_end":8825528,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8825533,"byte_end":8825536,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8825541,"byte_end":8825576,"line_start":375,"line_end":375,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8825581,"byte_end":8825617,"line_start":376,"line_end":376,"column_start":5,"column_end":41}},{"value":"/ assert!(map.remove(&1).is_some());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8825622,"byte_end":8825660,"line_start":377,"line_end":377,"column_start":5,"column_end":43}},{"value":"/ assert!(map.remove(&1).is_none());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8825665,"byte_end":8825703,"line_start":378,"line_end":378,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8825708,"byte_end":8825715,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4734},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8826567,"byte_end":8826579,"line_start":409,"line_end":409,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<StreamMap<K, V>>::contains_key","value":"fn <Q> (&self, k: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a stream for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a stream for the specified key.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8826035,"byte_end":8826105,"line_start":394,"line_end":394,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8826110,"byte_end":8826113,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8826118,"byte_end":8826192,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8826197,"byte_end":8826261,"line_start":397,"line_end":397,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8826266,"byte_end":8826269,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8826274,"byte_end":8826288,"line_start":399,"line_end":399,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8826293,"byte_end":8826296,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8826301,"byte_end":8826308,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8826313,"byte_end":8826357,"line_start":402,"line_end":402,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8826362,"byte_end":8826365,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8826370,"byte_end":8826405,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8826410,"byte_end":8826446,"line_start":405,"line_end":405,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8826451,"byte_end":8826494,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8826499,"byte_end":8826543,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8826548,"byte_end":8826555,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7411},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":8829519,"byte_end":8829523,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":7413},{"krate":0,"index":7414}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8156368,"byte_end":8156377,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7366},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":8831085,"byte_end":8831094,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":7369},{"krate":0,"index":7370}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8156368,"byte_end":8156377,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4967},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8832898,"byte_end":8832905,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":4970}],"decl_id":null,"docs":" Future for the [`try_next`](super::StreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::StreamExt::try_next) method.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8832734,"byte_end":8832801,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8832819,"byte_end":8832886,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7329},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":8833754,"byte_end":8833758,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":7331},{"krate":0,"index":7332}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8156368,"byte_end":8156377,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7280},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":8835601,"byte_end":8835610,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":7283},{"krate":0,"index":7284},{"krate":0,"index":7285}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8156368,"byte_end":8156377,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7257},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":8867278,"byte_end":8867285,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::stream::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":7259},{"krate":0,"index":7260},{"krate":0,"index":7261},{"krate":0,"index":7262}],"decl_id":null,"docs":" Stream returned by the [`timeout`](super::StreamExt::timeout) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8156368,"byte_end":8156377,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":4862},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766283,"byte_end":8766292,"line_start":81,"line_end":81,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":4863},{"krate":0,"index":4864},{"krate":0,"index":4867},{"krate":0,"index":4870},{"krate":0,"index":4872},{"krate":0,"index":4874},{"krate":0,"index":4877},{"krate":0,"index":4878},{"krate":0,"index":4879},{"krate":0,"index":4881},{"krate":0,"index":4882},{"krate":0,"index":4884},{"krate":0,"index":4886},{"krate":0,"index":4888},{"krate":0,"index":4890},{"krate":0,"index":4893},{"krate":0,"index":4895}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766172,"byte_end":8766246,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766247,"byte_end":8766272,"line_start":80,"line_end":80,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4863},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767362,"byte_end":8767366,"line_start":113,"line_end":113,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::StreamExt::next","value":"fn (&mut self) -> Next<'_, Self>","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Consumes and returns the next value in the stream or `None` if the\n stream is finished.","sig":null,"attributes":[{"value":"/ Consumes and returns the next value in the stream or `None` if the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766307,"byte_end":8766377,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ stream is finished.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766382,"byte_end":8766405,"line_start":83,"line_end":83,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766410,"byte_end":8766413,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766418,"byte_end":8766436,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766441,"byte_end":8766444,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766449,"byte_end":8766462,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ async fn next(&mut self) -> Option<Self::Item>;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766467,"byte_end":8766518,"line_start":88,"line_end":88,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766523,"byte_end":8766530,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766535,"byte_end":8766538,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766543,"byte_end":8766611,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766616,"byte_end":8766691,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766696,"byte_end":8766771,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766776,"byte_end":8766830,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766835,"byte_end":8766910,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766915,"byte_end":8766925,"line_start":96,"line_end":96,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766930,"byte_end":8766933,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766938,"byte_end":8766952,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766957,"byte_end":8766960,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766965,"byte_end":8766972,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766977,"byte_end":8766997,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767002,"byte_end":8767025,"line_start":102,"line_end":102,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767030,"byte_end":8767071,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767076,"byte_end":8767079,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767084,"byte_end":8767125,"line_start":105,"line_end":105,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767130,"byte_end":8767133,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767138,"byte_end":8767183,"line_start":107,"line_end":107,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767188,"byte_end":8767233,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767238,"byte_end":8767283,"line_start":109,"line_end":109,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767288,"byte_end":8767330,"line_start":110,"line_end":110,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767335,"byte_end":8767342,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767347,"byte_end":8767354,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4864},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768437,"byte_end":8768445,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::StreamExt::try_next","value":"fn <T, E> (&mut self) -> TryNext<'_, Self>","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Consumes and returns the next item in the stream. If an error is\n encountered before the next item, the error is returned instead.","sig":null,"attributes":[{"value":"/ Consumes and returns the next item in the stream. If an error is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767468,"byte_end":8767536,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ encountered before the next item, the error is returned instead.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767541,"byte_end":8767609,"line_start":121,"line_end":121,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767614,"byte_end":8767617,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767622,"byte_end":8767640,"line_start":123,"line_end":123,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767645,"byte_end":8767648,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767653,"byte_end":8767666,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ async fn try_next(&mut self) -> Result<Option<T>, E>;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767671,"byte_end":8767728,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767733,"byte_end":8767740,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767745,"byte_end":8767748,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`](StreamExt::next) combinator,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767753,"byte_end":8767817,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/ but returns a [`Result<Option<T>, E>`](Result) rather than","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767822,"byte_end":8767884,"line_start":130,"line_end":130,"column_start":5,"column_end":67}},{"value":"/ an [`Option<Result<T, E>>`](Option), making for easy use","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767889,"byte_end":8767949,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/ with the [`?`](std::ops::Try) operator.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8767954,"byte_end":8767997,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768002,"byte_end":8768005,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768010,"byte_end":8768024,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768029,"byte_end":8768032,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768037,"byte_end":8768044,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768049,"byte_end":8768069,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768074,"byte_end":8768097,"line_start":138,"line_end":138,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768102,"byte_end":8768143,"line_start":139,"line_end":139,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768148,"byte_end":8768151,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(1), Ok(2), Err(\"nope\")]);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768156,"byte_end":8768223,"line_start":141,"line_end":141,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768228,"byte_end":8768231,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768236,"byte_end":8768289,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768294,"byte_end":8768347,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(\"nope\"));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768352,"byte_end":8768405,"line_start":145,"line_end":145,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768410,"byte_end":8768417,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768422,"byte_end":8768429,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4867},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769513,"byte_end":8769516,"line_start":181,"line_end":181,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::StreamExt::map","value":"fn <T, F> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768589,"byte_end":8768664,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768669,"byte_end":8768692,"line_start":156,"line_end":156,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768697,"byte_end":8768700,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768705,"byte_end":8768777,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768782,"byte_end":8768846,"line_start":159,"line_end":159,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768851,"byte_end":8768888,"line_start":160,"line_end":160,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768893,"byte_end":8768896,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768901,"byte_end":8768977,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8768982,"byte_end":8769053,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769058,"byte_end":8769079,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769084,"byte_end":8769087,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769092,"byte_end":8769106,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769111,"byte_end":8769114,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769119,"byte_end":8769126,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769131,"byte_end":8769151,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769156,"byte_end":8769179,"line_start":170,"line_end":170,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769184,"byte_end":8769225,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769230,"byte_end":8769233,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769238,"byte_end":8769275,"line_start":173,"line_end":173,"column_start":5,"column_end":42}},{"value":"/ let mut stream = stream.map(|x| x + 3);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769280,"byte_end":8769323,"line_start":174,"line_end":174,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769328,"byte_end":8769331,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769336,"byte_end":8769381,"line_start":176,"line_end":176,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769386,"byte_end":8769431,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769436,"byte_end":8769481,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769486,"byte_end":8769493,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769498,"byte_end":8769505,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4870},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8772126,"byte_end":8772131,"line_start":259,"line_end":259,"column_start":8,"column_end":13},"name":"merge","qualname":"::stream::StreamExt::merge","value":"fn <U> (self, other: U) -> Merge<Self, U>","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Combine two streams into one by interleaving the output of both as it\n is produced.","sig":null,"attributes":[{"value":"/ Combine two streams into one by interleaving the output of both as it","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769660,"byte_end":8769733,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ is produced.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769738,"byte_end":8769754,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769759,"byte_end":8769762,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Values are produced from the merged stream in the order they arrive from","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769767,"byte_end":8769843,"line_start":192,"line_end":192,"column_start":5,"column_end":81}},{"value":"/ the two source streams. If both source streams provide values","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769848,"byte_end":8769913,"line_start":193,"line_end":193,"column_start":5,"column_end":70}},{"value":"/ simultaneously, the merge stream alternates between them. This provides","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769918,"byte_end":8769993,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ some level of fairness. You should not chain calls to `merge`, as this","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8769998,"byte_end":8770072,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ will break the fairness of the merging.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770077,"byte_end":8770120,"line_start":196,"line_end":196,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770125,"byte_end":8770128,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The merged stream completes once **both** source streams complete. When","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770133,"byte_end":8770208,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/ one source stream completes before the other, the merge stream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770213,"byte_end":8770279,"line_start":199,"line_end":199,"column_start":5,"column_end":71}},{"value":"/ exclusively polls the remaining stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770284,"byte_end":8770327,"line_start":200,"line_end":200,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770332,"byte_end":8770335,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ For merging multiple streams, consider using [`StreamMap`] instead.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770340,"byte_end":8770411,"line_start":202,"line_end":202,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770416,"byte_end":8770419,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ [`StreamMap`]: crate::stream::StreamMap","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770424,"byte_end":8770467,"line_start":204,"line_end":204,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770472,"byte_end":8770475,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770480,"byte_end":8770494,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770499,"byte_end":8770502,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770507,"byte_end":8770514,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770519,"byte_end":8770552,"line_start":209,"line_end":209,"column_start":5,"column_end":38}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770557,"byte_end":8770583,"line_start":210,"line_end":210,"column_start":5,"column_end":31}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770588,"byte_end":8770608,"line_start":211,"line_end":211,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770613,"byte_end":8770616,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770621,"byte_end":8770649,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770654,"byte_end":8770657,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # /*","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770662,"byte_end":8770670,"line_start":215,"line_end":215,"column_start":5,"column_end":13}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770675,"byte_end":8770693,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/ # */","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770698,"byte_end":8770706,"line_start":217,"line_end":217,"column_start":5,"column_end":13}},{"value":"/ # #[tokio::main(basic_scheduler)]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770711,"byte_end":8770748,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770753,"byte_end":8770774,"line_start":219,"line_end":219,"column_start":5,"column_end":26}},{"value":"/ # time::pause();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770779,"byte_end":8770799,"line_start":220,"line_end":220,"column_start":5,"column_end":25}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770804,"byte_end":8770851,"line_start":221,"line_end":221,"column_start":5,"column_end":52}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770856,"byte_end":8770903,"line_start":222,"line_end":222,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770908,"byte_end":8770911,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/     let mut rx = rx1.merge(rx2);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770916,"byte_end":8770952,"line_start":224,"line_end":224,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770957,"byte_end":8770960,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8770965,"byte_end":8770998,"line_start":226,"line_end":226,"column_start":5,"column_end":38}},{"value":"/         // Send some values immediately","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771003,"byte_end":8771046,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771051,"byte_end":8771090,"line_start":228,"line_end":228,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771095,"byte_end":8771134,"line_start":229,"line_end":229,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771139,"byte_end":8771142,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/         // Let the other task send values","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771147,"byte_end":8771192,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/         time::delay_for(Duration::from_millis(20)).await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771197,"byte_end":8771258,"line_start":232,"line_end":232,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771263,"byte_end":8771266,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/         tx1.send(4).await.unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771271,"byte_end":8771310,"line_start":234,"line_end":234,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771315,"byte_end":8771326,"line_start":235,"line_end":235,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771331,"byte_end":8771334,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771339,"byte_end":8771372,"line_start":237,"line_end":237,"column_start":5,"column_end":38}},{"value":"/         // Wait for the first task to send values","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771377,"byte_end":8771430,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/         time::delay_for(Duration::from_millis(5)).await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771435,"byte_end":8771495,"line_start":239,"line_end":239,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771500,"byte_end":8771503,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771508,"byte_end":8771547,"line_start":241,"line_end":241,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771552,"byte_end":8771555,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/         time::delay_for(Duration::from_millis(25)).await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771560,"byte_end":8771621,"line_start":243,"line_end":243,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771626,"byte_end":8771629,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/         // Send the final value","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771634,"byte_end":8771669,"line_start":245,"line_end":245,"column_start":5,"column_end":40}},{"value":"/         tx2.send(5).await.unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771674,"byte_end":8771713,"line_start":246,"line_end":246,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771718,"byte_end":8771729,"line_start":247,"line_end":247,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771734,"byte_end":8771737,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/    assert_eq!(1, rx.next().await.unwrap());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771742,"byte_end":8771789,"line_start":249,"line_end":249,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(2, rx.next().await.unwrap());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771794,"byte_end":8771841,"line_start":250,"line_end":250,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(3, rx.next().await.unwrap());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771846,"byte_end":8771893,"line_start":251,"line_end":251,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(4, rx.next().await.unwrap());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771898,"byte_end":8771945,"line_start":252,"line_end":252,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(5, rx.next().await.unwrap());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8771950,"byte_end":8771997,"line_start":253,"line_end":253,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8772002,"byte_end":8772005,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/    // The merged stream is consumed","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8772010,"byte_end":8772049,"line_start":255,"line_end":255,"column_start":5,"column_end":44}},{"value":"/    assert!(rx.next().await.is_none());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8772054,"byte_end":8772096,"line_start":256,"line_end":256,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8772101,"byte_end":8772106,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8772111,"byte_end":8772118,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4872},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8773436,"byte_end":8773442,"line_start":297,"line_end":297,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::StreamExt::filter","value":"fn <F> (self, f: F) -> Filter<Self, F>","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8772287,"byte_end":8772359,"line_start":267,"line_end":267,"column_start":5,"column_end":77}},{"value":"/ predicate.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8772364,"byte_end":8772378,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8772383,"byte_end":8772386,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8772391,"byte_end":8772466,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8772471,"byte_end":8772517,"line_start":271,"line_end":271,"column_start":5,"column_end":51}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8772522,"byte_end":8772594,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ predicate resolves to `false`, then the value","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8772599,"byte_end":8772648,"line_start":273,"line_end":273,"column_start":5,"column_end":54}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8772653,"byte_end":8772711,"line_start":274,"line_end":274,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8772716,"byte_end":8772719,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8772724,"byte_end":8772800,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter`] method in the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8772805,"byte_end":8772877,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ standard library.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8772882,"byte_end":8772903,"line_start":278,"line_end":278,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8772908,"byte_end":8772911,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8772916,"byte_end":8772930,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8772935,"byte_end":8772938,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8772943,"byte_end":8772950,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8772955,"byte_end":8772975,"line_start":283,"line_end":283,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8772980,"byte_end":8773003,"line_start":284,"line_end":284,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8773008,"byte_end":8773049,"line_start":285,"line_end":285,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8773054,"byte_end":8773057,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8773062,"byte_end":8773099,"line_start":287,"line_end":287,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter(|x| x % 2 == 0);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8773104,"byte_end":8773154,"line_start":288,"line_end":288,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8773159,"byte_end":8773162,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(2), evens.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8773167,"byte_end":8773211,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(4), evens.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8773216,"byte_end":8773260,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(6), evens.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8773265,"byte_end":8773309,"line_start":292,"line_end":292,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(8), evens.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8773314,"byte_end":8773358,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8773363,"byte_end":8773404,"line_start":294,"line_end":294,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8773409,"byte_end":8773416,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8773421,"byte_end":8773428,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4874},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774809,"byte_end":8774819,"line_start":335,"line_end":335,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::StreamExt::filter_map","value":"fn <T, F> (self, f: F) -> FilterMap<Self, F>","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8773593,"byte_end":8773668,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided closure.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8773673,"byte_end":8773736,"line_start":306,"line_end":306,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8773741,"byte_end":8773744,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8773749,"byte_end":8773824,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the predicate `f` resolves to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8773829,"byte_end":8773881,"line_start":309,"line_end":309,"column_start":5,"column_end":57}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8773886,"byte_end":8773962,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`], then the value will be skipped.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8773967,"byte_end":8774027,"line_start":311,"line_end":311,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774032,"byte_end":8774035,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774040,"byte_end":8774116,"line_start":313,"line_end":313,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter_map`] method in the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774121,"byte_end":8774197,"line_start":314,"line_end":314,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774202,"byte_end":8774223,"line_start":315,"line_end":315,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774228,"byte_end":8774231,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774236,"byte_end":8774250,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774255,"byte_end":8774262,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774267,"byte_end":8774287,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774292,"byte_end":8774315,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774320,"byte_end":8774361,"line_start":321,"line_end":321,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774366,"byte_end":8774369,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774374,"byte_end":8774411,"line_start":323,"line_end":323,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter_map(|x| {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774416,"byte_end":8774459,"line_start":324,"line_end":324,"column_start":5,"column_end":48}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774464,"byte_end":8774515,"line_start":325,"line_end":325,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774520,"byte_end":8774527,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774532,"byte_end":8774535,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), evens.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774540,"byte_end":8774584,"line_start":328,"line_end":328,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(5), evens.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774589,"byte_end":8774633,"line_start":329,"line_end":329,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(7), evens.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774638,"byte_end":8774682,"line_start":330,"line_end":330,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(9), evens.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774687,"byte_end":8774731,"line_start":331,"line_end":331,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774736,"byte_end":8774777,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774782,"byte_end":8774789,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774794,"byte_end":8774801,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4877},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776951,"byte_end":8776955,"line_start":401,"line_end":401,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::StreamExt::fuse","value":"fn (self) -> Fuse<Self>","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Creates a stream which ends after the first `None`.","sig":null,"attributes":[{"value":"/ Creates a stream which ends after the first `None`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8774983,"byte_end":8775038,"line_start":343,"line_end":343,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775043,"byte_end":8775046,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ After a stream returns `None`, behavior is undefined. Future calls to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775051,"byte_end":8775124,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ `poll_next` may or may not return `Some(T)` again or they may panic.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775129,"byte_end":8775201,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ `fuse()` adapts a stream, ensuring that after `None` is given, it will","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775206,"byte_end":8775280,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ return `None` forever.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775285,"byte_end":8775311,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775316,"byte_end":8775319,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775324,"byte_end":8775338,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775343,"byte_end":8775346,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775351,"byte_end":8775358,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{Stream, StreamExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775363,"byte_end":8775406,"line_start":353,"line_end":353,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775411,"byte_end":8775414,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775419,"byte_end":8775441,"line_start":355,"line_end":355,"column_start":5,"column_end":27}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775446,"byte_end":8775481,"line_start":356,"line_end":356,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775486,"byte_end":8775489,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ // a stream which alternates between Some and None","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775494,"byte_end":8775548,"line_start":358,"line_end":358,"column_start":5,"column_end":59}},{"value":"/ struct Alternate {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775553,"byte_end":8775575,"line_start":359,"line_end":359,"column_start":5,"column_end":27}},{"value":"/     state: i32,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775580,"byte_end":8775599,"line_start":360,"line_end":360,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775604,"byte_end":8775609,"line_start":361,"line_end":361,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775614,"byte_end":8775617,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ impl Stream for Alternate {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775622,"byte_end":8775653,"line_start":363,"line_end":363,"column_start":5,"column_end":36}},{"value":"/     type Item = i32;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775658,"byte_end":8775682,"line_start":364,"line_end":364,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775687,"byte_end":8775690,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     fn poll_next(mut self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Option<i32>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775695,"byte_end":8775787,"line_start":366,"line_end":366,"column_start":5,"column_end":97}},{"value":"/         let val = self.state;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775792,"byte_end":8775825,"line_start":367,"line_end":367,"column_start":5,"column_end":38}},{"value":"/         self.state = self.state + 1;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775830,"byte_end":8775870,"line_start":368,"line_end":368,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775875,"byte_end":8775878,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/         // if it's even, Some(i32), else None","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775883,"byte_end":8775932,"line_start":370,"line_end":370,"column_start":5,"column_end":54}},{"value":"/         if val % 2 == 0 {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775937,"byte_end":8775966,"line_start":371,"line_end":371,"column_start":5,"column_end":34}},{"value":"/             Poll::Ready(Some(val))","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8775971,"byte_end":8776009,"line_start":372,"line_end":372,"column_start":5,"column_end":43}},{"value":"/         } else {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776014,"byte_end":8776034,"line_start":373,"line_end":373,"column_start":5,"column_end":25}},{"value":"/             Poll::Ready(None)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776039,"byte_end":8776072,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"/         }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776077,"byte_end":8776090,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776095,"byte_end":8776104,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776109,"byte_end":8776114,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776119,"byte_end":8776122,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776127,"byte_end":8776145,"line_start":379,"line_end":379,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776150,"byte_end":8776171,"line_start":380,"line_end":380,"column_start":5,"column_end":26}},{"value":"/     let mut stream = Alternate { state: 0 };","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776176,"byte_end":8776224,"line_start":381,"line_end":381,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776229,"byte_end":8776232,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/     // the stream goes back and forth","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776237,"byte_end":8776278,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(stream.next().await, Some(0));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776283,"byte_end":8776332,"line_start":384,"line_end":384,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776337,"byte_end":8776383,"line_start":385,"line_end":385,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776388,"byte_end":8776437,"line_start":386,"line_end":386,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776442,"byte_end":8776488,"line_start":387,"line_end":387,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776493,"byte_end":8776496,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     // however, once it is fused","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776501,"byte_end":8776537,"line_start":389,"line_end":389,"column_start":5,"column_end":41}},{"value":"/     let mut stream = stream.fuse();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776542,"byte_end":8776581,"line_start":390,"line_end":390,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776586,"byte_end":8776589,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776594,"byte_end":8776643,"line_start":392,"line_end":392,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776648,"byte_end":8776694,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776699,"byte_end":8776702,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     // it will always return `None` after the first time.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776707,"byte_end":8776768,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776773,"byte_end":8776819,"line_start":396,"line_end":396,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776824,"byte_end":8776870,"line_start":397,"line_end":397,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776875,"byte_end":8776921,"line_start":398,"line_end":398,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776926,"byte_end":8776931,"line_start":399,"line_end":399,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8776936,"byte_end":8776943,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4878},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777691,"byte_end":8777695,"line_start":428,"line_end":428,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::StreamExt::take","value":"fn (self, n: usize) -> Take<Self>","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777048,"byte_end":8777119,"line_start":408,"line_end":408,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777124,"byte_end":8777127,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777132,"byte_end":8777205,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777210,"byte_end":8777245,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777250,"byte_end":8777253,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777258,"byte_end":8777272,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777277,"byte_end":8777280,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777285,"byte_end":8777292,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777297,"byte_end":8777317,"line_start":416,"line_end":416,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777322,"byte_end":8777345,"line_start":417,"line_end":417,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777350,"byte_end":8777391,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777396,"byte_end":8777399,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take(3);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777404,"byte_end":8777454,"line_start":420,"line_end":420,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777459,"byte_end":8777462,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777467,"byte_end":8777512,"line_start":422,"line_end":422,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777517,"byte_end":8777562,"line_start":423,"line_end":423,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777567,"byte_end":8777612,"line_start":424,"line_end":424,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777617,"byte_end":8777659,"line_start":425,"line_end":425,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777664,"byte_end":8777671,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777676,"byte_end":8777683,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4879},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778588,"byte_end":8778598,"line_start":457,"line_end":457,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::StreamExt::take_while","value":"fn <F> (self, f: F) -> TakeWhile<Self, F>","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided predicate","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777801,"byte_end":8777864,"line_start":435,"line_end":435,"column_start":5,"column_end":68}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777869,"byte_end":8777892,"line_start":436,"line_end":436,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777897,"byte_end":8777900,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777905,"byte_end":8777980,"line_start":438,"line_end":438,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8777985,"byte_end":8778057,"line_start":439,"line_end":439,"column_start":5,"column_end":77}},{"value":"/ returns false it will always return that the stream is done.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778062,"byte_end":8778126,"line_start":440,"line_end":440,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778131,"byte_end":8778134,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778139,"byte_end":8778153,"line_start":442,"line_end":442,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778158,"byte_end":8778161,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778166,"byte_end":8778173,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778178,"byte_end":8778198,"line_start":445,"line_end":445,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778203,"byte_end":8778226,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778231,"byte_end":8778272,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778277,"byte_end":8778280,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take_while(|x| *x <= 3);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778285,"byte_end":8778351,"line_start":449,"line_end":449,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778356,"byte_end":8778359,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778364,"byte_end":8778409,"line_start":451,"line_end":451,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778414,"byte_end":8778459,"line_start":452,"line_end":452,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778464,"byte_end":8778509,"line_start":453,"line_end":453,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778514,"byte_end":8778556,"line_start":454,"line_end":454,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778561,"byte_end":8778568,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778573,"byte_end":8778580,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4881},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779295,"byte_end":8779299,"line_start":483,"line_end":483,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::StreamExt::skip","value":"fn (self, n: usize) -> Skip<Self>","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Creates a new stream that will skip the `n` first items of the\n underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream that will skip the `n` first items of the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778755,"byte_end":8778821,"line_start":465,"line_end":465,"column_start":5,"column_end":71}},{"value":"/ underlying stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778826,"byte_end":8778848,"line_start":466,"line_end":466,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778853,"byte_end":8778856,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778861,"byte_end":8778875,"line_start":468,"line_end":468,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778880,"byte_end":8778883,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778888,"byte_end":8778895,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778900,"byte_end":8778920,"line_start":471,"line_end":471,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778925,"byte_end":8778948,"line_start":472,"line_end":472,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778953,"byte_end":8778994,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8778999,"byte_end":8779002,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).skip(7);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779007,"byte_end":8779057,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779062,"byte_end":8779065,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(8), stream.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779070,"byte_end":8779115,"line_start":477,"line_end":477,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(9), stream.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779120,"byte_end":8779165,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(10), stream.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779170,"byte_end":8779216,"line_start":479,"line_end":479,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779221,"byte_end":8779263,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779268,"byte_end":8779275,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779280,"byte_end":8779287,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4882},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8780277,"byte_end":8780287,"line_start":513,"line_end":513,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::StreamExt::skip_while","value":"fn <F> (self, f: F) -> SkipWhile<Self, F>","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Skip elements from the underlying stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements from the underlying stream while the provided predicate","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779405,"byte_end":8779478,"line_start":490,"line_end":490,"column_start":5,"column_end":78}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779483,"byte_end":8779506,"line_start":491,"line_end":491,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779511,"byte_end":8779514,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This function, like [`Iterator::skip_while`], will ignore elemets from the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779519,"byte_end":8779597,"line_start":493,"line_end":493,"column_start":5,"column_end":83}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779602,"byte_end":8779674,"line_start":494,"line_end":494,"column_start":5,"column_end":77}},{"value":"/ returns false, the rest of the elements will be yielded.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779679,"byte_end":8779739,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779744,"byte_end":8779747,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [`Iterator::skip_while`]: std::iter::Iterator::skip_while()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779752,"byte_end":8779815,"line_start":497,"line_end":497,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779820,"byte_end":8779823,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779828,"byte_end":8779842,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779847,"byte_end":8779850,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779855,"byte_end":8779862,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779867,"byte_end":8779887,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779892,"byte_end":8779915,"line_start":503,"line_end":503,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779920,"byte_end":8779961,"line_start":504,"line_end":504,"column_start":5,"column_end":46}},{"value":"/ let mut stream = stream::iter(vec![1,2,3,4,1]).skip_while(|x| *x < 3);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8779966,"byte_end":8780040,"line_start":505,"line_end":505,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8780045,"byte_end":8780048,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8780053,"byte_end":8780098,"line_start":507,"line_end":507,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(4), stream.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8780103,"byte_end":8780148,"line_start":508,"line_end":508,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8780153,"byte_end":8780198,"line_start":509,"line_end":509,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8780203,"byte_end":8780245,"line_start":510,"line_end":510,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8780250,"byte_end":8780257,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8780262,"byte_end":8780269,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4884},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781866,"byte_end":8781869,"line_start":568,"line_end":568,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::StreamExt::all","value":"fn <F> (&mut self, f: F) -> AllFuture<'_, Self, F>","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if every element of the stream matches a predicate.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8780444,"byte_end":8780505,"line_start":521,"line_end":521,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8780510,"byte_end":8780513,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ `all()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8780518,"byte_end":8780588,"line_start":523,"line_end":523,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if they all return","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8780593,"byte_end":8780663,"line_start":524,"line_end":524,"column_start":5,"column_end":75}},{"value":"/ `true`, then so does `all`. If any of them return `false`, it","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8780668,"byte_end":8780733,"line_start":525,"line_end":525,"column_start":5,"column_end":70}},{"value":"/ returns `false`. An empty stream returns `true`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8780738,"byte_end":8780790,"line_start":526,"line_end":526,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8780795,"byte_end":8780798,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ `all()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8780803,"byte_end":8780875,"line_start":528,"line_end":528,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `false`, given that no matter what else happens,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8780880,"byte_end":8780954,"line_start":529,"line_end":529,"column_start":5,"column_end":79}},{"value":"/ the result will also be `false`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8780959,"byte_end":8780995,"line_start":530,"line_end":530,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781000,"byte_end":8781003,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `true`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781008,"byte_end":8781043,"line_start":532,"line_end":532,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781048,"byte_end":8781051,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781056,"byte_end":8781070,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781075,"byte_end":8781078,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781083,"byte_end":8781099,"line_start":536,"line_end":536,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781104,"byte_end":8781107,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781112,"byte_end":8781119,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781124,"byte_end":8781144,"line_start":539,"line_end":539,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781149,"byte_end":8781172,"line_start":540,"line_end":540,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781177,"byte_end":8781218,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781223,"byte_end":8781226,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781231,"byte_end":8781253,"line_start":543,"line_end":543,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781258,"byte_end":8781261,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).all(|&x| x > 0).await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781266,"byte_end":8781318,"line_start":545,"line_end":545,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781323,"byte_end":8781326,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).all(|&x| x > 2).await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781331,"byte_end":8781384,"line_start":547,"line_end":547,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781389,"byte_end":8781396,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781401,"byte_end":8781408,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781413,"byte_end":8781416,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `false`:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781421,"byte_end":8781455,"line_start":551,"line_end":551,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781460,"byte_end":8781463,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781468,"byte_end":8781475,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781480,"byte_end":8781500,"line_start":554,"line_end":554,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781505,"byte_end":8781528,"line_start":555,"line_end":555,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781533,"byte_end":8781574,"line_start":556,"line_end":556,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781579,"byte_end":8781582,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781587,"byte_end":8781609,"line_start":558,"line_end":558,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781614,"byte_end":8781617,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781622,"byte_end":8781658,"line_start":560,"line_end":560,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781663,"byte_end":8781666,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ assert!(!iter.all(|&x| x != 2).await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781671,"byte_end":8781713,"line_start":562,"line_end":562,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781718,"byte_end":8781721,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781726,"byte_end":8781785,"line_start":564,"line_end":564,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&3));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781790,"byte_end":8781834,"line_start":565,"line_end":565,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781839,"byte_end":8781846,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8781851,"byte_end":8781858,"line_start":567,"line_end":567,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4886},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783394,"byte_end":8783397,"line_start":621,"line_end":621,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::StreamExt::any","value":"fn <F> (&mut self, f: F) -> AnyFuture<'_, Self, F>","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if any element of the stream matches a predicate.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782034,"byte_end":8782093,"line_start":576,"line_end":576,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782098,"byte_end":8782101,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ `any()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782106,"byte_end":8782176,"line_start":578,"line_end":578,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if any of them return","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782181,"byte_end":8782254,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ `true`, then so does `any()`. If they all return `false`, it","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782259,"byte_end":8782323,"line_start":580,"line_end":580,"column_start":5,"column_end":69}},{"value":"/ returns `false`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782328,"byte_end":8782348,"line_start":581,"line_end":581,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782353,"byte_end":8782356,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ `any()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782361,"byte_end":8782433,"line_start":583,"line_end":583,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `true`, given that no matter what else happens,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782438,"byte_end":8782511,"line_start":584,"line_end":584,"column_start":5,"column_end":78}},{"value":"/ the result will also be `true`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782516,"byte_end":8782551,"line_start":585,"line_end":585,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782556,"byte_end":8782559,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `false`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782564,"byte_end":8782600,"line_start":587,"line_end":587,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782605,"byte_end":8782608,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782613,"byte_end":8782629,"line_start":589,"line_end":589,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782634,"byte_end":8782637,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782642,"byte_end":8782649,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782654,"byte_end":8782674,"line_start":592,"line_end":592,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782679,"byte_end":8782702,"line_start":593,"line_end":593,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782707,"byte_end":8782748,"line_start":594,"line_end":594,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782753,"byte_end":8782756,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782761,"byte_end":8782783,"line_start":596,"line_end":596,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782788,"byte_end":8782791,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).any(|&x| x > 0).await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782796,"byte_end":8782848,"line_start":598,"line_end":598,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782853,"byte_end":8782856,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).any(|&x| x > 5).await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782861,"byte_end":8782914,"line_start":600,"line_end":600,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782919,"byte_end":8782926,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782931,"byte_end":8782938,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782943,"byte_end":8782946,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `true`:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782951,"byte_end":8782984,"line_start":604,"line_end":604,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782989,"byte_end":8782992,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8782997,"byte_end":8783004,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783009,"byte_end":8783029,"line_start":607,"line_end":607,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783034,"byte_end":8783057,"line_start":608,"line_end":608,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783062,"byte_end":8783103,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783108,"byte_end":8783111,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783116,"byte_end":8783138,"line_start":611,"line_end":611,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783143,"byte_end":8783146,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783151,"byte_end":8783187,"line_start":613,"line_end":613,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783192,"byte_end":8783195,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert!(iter.any(|&x| x != 2).await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783200,"byte_end":8783241,"line_start":615,"line_end":615,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783246,"byte_end":8783249,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783254,"byte_end":8783313,"line_start":617,"line_end":617,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&2));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783318,"byte_end":8783362,"line_start":618,"line_end":618,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783367,"byte_end":8783374,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783379,"byte_end":8783386,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4888},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784540,"byte_end":8784545,"line_start":656,"line_end":656,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::StreamExt::chain","value":"fn <U> (self, other: U) -> Chain<Self, U>","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Combine two streams into one by first returning all values from the\n first stream then all values from the second stream.","sig":null,"attributes":[{"value":"/ Combine two streams into one by first returning all values from the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783562,"byte_end":8783633,"line_start":629,"line_end":629,"column_start":5,"column_end":76}},{"value":"/ first stream then all values from the second stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783638,"byte_end":8783694,"line_start":630,"line_end":630,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783699,"byte_end":8783702,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ As long as `self` still has values to emit, no values from `other` are","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783707,"byte_end":8783781,"line_start":632,"line_end":632,"column_start":5,"column_end":79}},{"value":"/ emitted, even if some are ready.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783786,"byte_end":8783822,"line_start":633,"line_end":633,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783827,"byte_end":8783830,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783835,"byte_end":8783849,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783854,"byte_end":8783857,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783862,"byte_end":8783869,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783874,"byte_end":8783915,"line_start":638,"line_end":638,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783920,"byte_end":8783923,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783928,"byte_end":8783946,"line_start":640,"line_end":640,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783951,"byte_end":8783972,"line_start":641,"line_end":641,"column_start":5,"column_end":26}},{"value":"/     let one = stream::iter(vec![1, 2, 3]);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8783977,"byte_end":8784023,"line_start":642,"line_end":642,"column_start":5,"column_end":51}},{"value":"/     let two = stream::iter(vec![4, 5, 6]);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784028,"byte_end":8784074,"line_start":643,"line_end":643,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784079,"byte_end":8784082,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/     let mut stream = one.chain(two);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784087,"byte_end":8784127,"line_start":645,"line_end":645,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784132,"byte_end":8784135,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784140,"byte_end":8784189,"line_start":647,"line_end":647,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784194,"byte_end":8784243,"line_start":648,"line_end":648,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784248,"byte_end":8784297,"line_start":649,"line_end":649,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784302,"byte_end":8784351,"line_start":650,"line_end":650,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784356,"byte_end":8784405,"line_start":651,"line_end":651,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784410,"byte_end":8784459,"line_start":652,"line_end":652,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784464,"byte_end":8784510,"line_start":653,"line_end":653,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784515,"byte_end":8784520,"line_start":654,"line_end":654,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784525,"byte_end":8784532,"line_start":655,"line_end":655,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4890},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8785138,"byte_end":8785142,"line_start":680,"line_end":680,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::StreamExt::fold","value":"fn <B, F> (self, init: B, f: F) -> FoldFuture<Self, B, F>","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" A combinator that applies a function to every element in a stream\n producing a single, final value.","sig":null,"attributes":[{"value":"/ A combinator that applies a function to every element in a stream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784701,"byte_end":8784770,"line_start":664,"line_end":664,"column_start":5,"column_end":74}},{"value":"/ producing a single, final value.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784775,"byte_end":8784811,"line_start":665,"line_end":665,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784816,"byte_end":8784819,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784824,"byte_end":8784838,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/ Basic usage:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784843,"byte_end":8784859,"line_start":668,"line_end":668,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784864,"byte_end":8784871,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784876,"byte_end":8784896,"line_start":670,"line_end":670,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784901,"byte_end":8784924,"line_start":671,"line_end":671,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, *};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784929,"byte_end":8784962,"line_start":672,"line_end":672,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784967,"byte_end":8784970,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ let s = stream::iter(vec![1u8, 2, 3]);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8784975,"byte_end":8785017,"line_start":674,"line_end":674,"column_start":5,"column_end":47}},{"value":"/ let sum = s.fold(0, |acc, x| acc + x).await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8785022,"byte_end":8785070,"line_start":675,"line_end":675,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8785075,"byte_end":8785078,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, 6);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8785083,"byte_end":8785106,"line_start":677,"line_end":677,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8785111,"byte_end":8785118,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8785123,"byte_end":8785130,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4893},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8787455,"byte_end":8787462,"line_start":752,"line_end":752,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::StreamExt::collect","value":"fn <T> (self) -> Collect<Self, T>","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Drain stream pushing all emitted values into a collection.","sig":null,"attributes":[{"value":"/ Drain stream pushing all emitted values into a collection.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8785321,"byte_end":8785383,"line_start":688,"line_end":688,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8785388,"byte_end":8785391,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ `collect` streams all values, awaiting as needed. Values are pushed into","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8785396,"byte_end":8785472,"line_start":690,"line_end":690,"column_start":5,"column_end":81}},{"value":"/ a collection. A number of different target collection types are","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8785477,"byte_end":8785544,"line_start":691,"line_end":691,"column_start":5,"column_end":72}},{"value":"/ supported, including [`Vec`](std::vec::Vec),","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8785549,"byte_end":8785597,"line_start":692,"line_end":692,"column_start":5,"column_end":53}},{"value":"/ [`String`](std::string::String), and [`Bytes`](bytes::Bytes).","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8785602,"byte_end":8785667,"line_start":693,"line_end":693,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8785672,"byte_end":8785675,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # `Result`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8785680,"byte_end":8785694,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8785699,"byte_end":8785702,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ `collect()` can also be used with streams of type `Result<T, E>` where","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8785707,"byte_end":8785781,"line_start":697,"line_end":697,"column_start":5,"column_end":79}},{"value":"/ `T: FromStream<_>`. In this case, `collect()` will stream as long as","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8785786,"byte_end":8785858,"line_start":698,"line_end":698,"column_start":5,"column_end":77}},{"value":"/ values yielded from the stream are `Ok(_)`. If `Err(_)` is encountered,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8785863,"byte_end":8785938,"line_start":699,"line_end":699,"column_start":5,"column_end":80}},{"value":"/ streaming is terminated and `collect()` returns the `Err`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8785943,"byte_end":8786005,"line_start":700,"line_end":700,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786010,"byte_end":8786013,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786018,"byte_end":8786029,"line_start":702,"line_end":702,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786034,"byte_end":8786037,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ `FromStream` is currently a sealed trait. Stabilization is pending","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786042,"byte_end":8786112,"line_start":704,"line_end":704,"column_start":5,"column_end":75}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786117,"byte_end":8786155,"line_start":705,"line_end":705,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786160,"byte_end":8786163,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786168,"byte_end":8786182,"line_start":707,"line_end":707,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786187,"byte_end":8786190,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786195,"byte_end":8786211,"line_start":709,"line_end":709,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786216,"byte_end":8786219,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786224,"byte_end":8786231,"line_start":711,"line_end":711,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786236,"byte_end":8786277,"line_start":712,"line_end":712,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786282,"byte_end":8786285,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786290,"byte_end":8786308,"line_start":714,"line_end":714,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786313,"byte_end":8786334,"line_start":715,"line_end":715,"column_start":5,"column_end":26}},{"value":"/     let doubled: Vec<i32> =","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786339,"byte_end":8786370,"line_start":716,"line_end":716,"column_start":5,"column_end":36}},{"value":"/         stream::iter(vec![1, 2, 3])","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786375,"byte_end":8786414,"line_start":717,"line_end":717,"column_start":5,"column_end":44}},{"value":"/             .map(|x| x * 2)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786419,"byte_end":8786450,"line_start":718,"line_end":718,"column_start":5,"column_end":36}},{"value":"/             .collect()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786455,"byte_end":8786481,"line_start":719,"line_end":719,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786486,"byte_end":8786509,"line_start":720,"line_end":720,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786514,"byte_end":8786517,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(vec![2, 4, 6], doubled);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786522,"byte_end":8786565,"line_start":722,"line_end":722,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786570,"byte_end":8786575,"line_start":723,"line_end":723,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786580,"byte_end":8786587,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786592,"byte_end":8786595,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ Collecting a stream of `Result` values","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786600,"byte_end":8786642,"line_start":726,"line_end":726,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786647,"byte_end":8786650,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786655,"byte_end":8786662,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786667,"byte_end":8786708,"line_start":729,"line_end":729,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786713,"byte_end":8786716,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786721,"byte_end":8786739,"line_start":731,"line_end":731,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786744,"byte_end":8786765,"line_start":732,"line_end":732,"column_start":5,"column_end":26}},{"value":"/     // A stream containing only `Ok` values will be collected","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786770,"byte_end":8786835,"line_start":733,"line_end":733,"column_start":5,"column_end":70}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786840,"byte_end":8786884,"line_start":734,"line_end":734,"column_start":5,"column_end":49}},{"value":"/         stream::iter(vec![Ok(1), Ok(2), Ok(3)])","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786889,"byte_end":8786940,"line_start":735,"line_end":735,"column_start":5,"column_end":56}},{"value":"/             .collect()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786945,"byte_end":8786971,"line_start":736,"line_end":736,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8786976,"byte_end":8786999,"line_start":737,"line_end":737,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8787004,"byte_end":8787007,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(vec![1, 2, 3]), values);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8787012,"byte_end":8787058,"line_start":739,"line_end":739,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8787063,"byte_end":8787066,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/     // A stream containing `Err` values will return the first error.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8787071,"byte_end":8787143,"line_start":741,"line_end":741,"column_start":5,"column_end":77}},{"value":"/     let results = vec![Ok(1), Err(\"no\"), Ok(2), Ok(3), Err(\"nein\")];","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8787148,"byte_end":8787220,"line_start":742,"line_end":742,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8787225,"byte_end":8787228,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8787233,"byte_end":8787277,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/         stream::iter(results)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8787282,"byte_end":8787315,"line_start":745,"line_end":745,"column_start":5,"column_end":38}},{"value":"/             .collect()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8787320,"byte_end":8787346,"line_start":746,"line_end":746,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8787351,"byte_end":8787374,"line_start":747,"line_end":747,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8787379,"byte_end":8787382,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Err(\"no\"), values);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8787387,"byte_end":8787425,"line_start":749,"line_end":749,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8787430,"byte_end":8787435,"line_start":750,"line_end":750,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8787440,"byte_end":8787447,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4895},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8790117,"byte_end":8790124,"line_start":816,"line_end":816,"column_start":8,"column_end":15},"name":"timeout","qualname":"::stream::StreamExt::timeout","value":"fn (self, duration: Duration) -> Timeout<Self>","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Applies a per-item timeout to the passed stream.","sig":null,"attributes":[{"value":"/ Applies a per-item timeout to the passed stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8787602,"byte_end":8787654,"line_start":760,"line_end":760,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8787659,"byte_end":8787662,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ `timeout()` takes a `Duration` that represents the maximum amount of","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8787667,"byte_end":8787739,"line_start":762,"line_end":762,"column_start":5,"column_end":77}},{"value":"/ time each element of the stream has to complete before timing out.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8787744,"byte_end":8787814,"line_start":763,"line_end":763,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8787819,"byte_end":8787822,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ If the wrapped stream yields a value before the deadline is reached, the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8787827,"byte_end":8787903,"line_start":765,"line_end":765,"column_start":5,"column_end":81}},{"value":"/ value is returned. Otherwise, an error is returned. The caller may decide","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8787908,"byte_end":8787985,"line_start":766,"line_end":766,"column_start":5,"column_end":82}},{"value":"/ to continue consuming the stream and will eventually get the next source","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8787990,"byte_end":8788066,"line_start":767,"line_end":767,"column_start":5,"column_end":81}},{"value":"/ stream value once it becomes available.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788071,"byte_end":8788114,"line_start":768,"line_end":768,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788119,"byte_end":8788122,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788127,"byte_end":8788138,"line_start":770,"line_end":770,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788143,"byte_end":8788146,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ This function consumes the stream passed into it and returns a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788151,"byte_end":8788217,"line_start":772,"line_end":772,"column_start":5,"column_end":71}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788222,"byte_end":8788248,"line_start":773,"line_end":773,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788253,"byte_end":8788256,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ Polling the returned stream will continue to poll the inner stream even","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788261,"byte_end":8788336,"line_start":775,"line_end":775,"column_start":5,"column_end":80}},{"value":"/ if one or more items time out.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788341,"byte_end":8788375,"line_start":776,"line_end":776,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788380,"byte_end":8788383,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788388,"byte_end":8788402,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788407,"byte_end":8788410,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Suppose we have a stream `int_stream` that yields 3 numbers (1, 2, 3):","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788415,"byte_end":8788489,"line_start":780,"line_end":780,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788494,"byte_end":8788497,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788502,"byte_end":8788509,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788514,"byte_end":8788534,"line_start":783,"line_end":783,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788539,"byte_end":8788562,"line_start":784,"line_end":784,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788567,"byte_end":8788608,"line_start":785,"line_end":785,"column_start":5,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788613,"byte_end":8788641,"line_start":786,"line_end":786,"column_start":5,"column_end":33}},{"value":"/ # let int_stream = stream::iter(1..=3);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788646,"byte_end":8788689,"line_start":787,"line_end":787,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788694,"byte_end":8788697,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ let mut int_stream = int_stream.timeout(Duration::from_secs(1));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788702,"byte_end":8788770,"line_start":789,"line_end":789,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788775,"byte_end":8788778,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ // When no items time out, we get the 3 elements in succession:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788783,"byte_end":8788850,"line_start":791,"line_end":791,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788855,"byte_end":8788912,"line_start":792,"line_end":792,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788917,"byte_end":8788974,"line_start":793,"line_end":793,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8788979,"byte_end":8789036,"line_start":794,"line_end":794,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8789041,"byte_end":8789095,"line_start":795,"line_end":795,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8789100,"byte_end":8789103,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ // If the second item times out, we get an error and continue polling the stream:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8789108,"byte_end":8789193,"line_start":797,"line_end":797,"column_start":5,"column_end":90}},{"value":"/ # let mut int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8789198,"byte_end":8789274,"line_start":798,"line_end":798,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8789279,"byte_end":8789336,"line_start":799,"line_end":799,"column_start":5,"column_end":62}},{"value":"/ assert!(int_stream.try_next().await.is_err());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8789341,"byte_end":8789391,"line_start":800,"line_end":800,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8789396,"byte_end":8789453,"line_start":801,"line_end":801,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8789458,"byte_end":8789515,"line_start":802,"line_end":802,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8789520,"byte_end":8789574,"line_start":803,"line_end":803,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8789579,"byte_end":8789582,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ // If we want to stop consuming the source stream the first time an","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8789587,"byte_end":8789658,"line_start":805,"line_end":805,"column_start":5,"column_end":76}},{"value":"/ // element times out, we can use the `take_while` operator:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8789663,"byte_end":8789726,"line_start":806,"line_end":806,"column_start":5,"column_end":68}},{"value":"/ # let int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8789731,"byte_end":8789803,"line_start":807,"line_end":807,"column_start":5,"column_end":77}},{"value":"/ let mut int_stream = int_stream.take_while(Result::is_ok);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8789808,"byte_end":8789870,"line_start":808,"line_end":808,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8789875,"byte_end":8789878,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8789883,"byte_end":8789940,"line_start":810,"line_end":810,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8789945,"byte_end":8789999,"line_start":811,"line_end":811,"column_start":5,"column_end":59}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8790004,"byte_end":8790011,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8790016,"byte_end":8790023,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"time\"))","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8790028,"byte_end":8790057,"line_start":814,"line_end":814,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":5393},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8955546,"byte_end":8955552,"line_start":72,"line_end":72,"column_start":10,"column_end":16},"name":"Permit","qualname":"::sync::mpsc::chan::Semaphore::Permit","value":"type Permit;","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5898},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":5900},{"krate":0,"index":5903},{"krate":0,"index":5907},{"krate":0,"index":5908},{"krate":0,"index":5914},{"krate":0,"index":5925},{"krate":0,"index":6003},{"krate":0,"index":6006},{"krate":0,"index":6067}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21559,"byte_end":21586,"line_start":247,"line_end":247,"column_start":13,"column_end":40}},{"value":"! Asynchronous green-threads.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9027834,"byte_end":9027865,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9027866,"byte_end":9027869,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! ## What are Tasks?","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9027870,"byte_end":9027892,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9027893,"byte_end":9027896,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9027897,"byte_end":9027978,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"! to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9027979,"byte_end":9028059,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9028060,"byte_end":9028140,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"! [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9028141,"byte_end":9028215,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"! coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9028216,"byte_end":9028291,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"! something similar.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9028292,"byte_end":9028314,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9028315,"byte_end":9028318,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! Key points about tasks include:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9028319,"byte_end":9028354,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9028355,"byte_end":9028358,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9028359,"byte_end":9028433,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"!   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9028434,"byte_end":9028513,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"!   between tasks does not require a context switch and has fairly low","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9028514,"byte_end":9028586,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"!   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9028587,"byte_end":9028662,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"!   quite cheap, especially compared to OS threads.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9028663,"byte_end":9028716,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9028717,"byte_end":9028720,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9028721,"byte_end":9028798,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"!   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9028799,"byte_end":9028872,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"!   operating system allows each thread to run for a period of time, and then","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9028873,"byte_end":9028952,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"!   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9028953,"byte_end":9029031,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"!   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9029032,"byte_end":9029104,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"!   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9029105,"byte_end":9029180,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"!   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9029181,"byte_end":9029255,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"!   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9029256,"byte_end":9029331,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"!   executing the next task.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9029332,"byte_end":9029362,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9029363,"byte_end":9029366,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9029367,"byte_end":9029445,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"!   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9029446,"byte_end":9029521,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"!   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9029522,"byte_end":9029599,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"!   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9029600,"byte_end":9029679,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"!   should generally not perform system calls or other operations that could","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9029680,"byte_end":9029758,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"!   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9029759,"byte_end":9029834,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"!   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9029835,"byte_end":9029910,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"!   running blocking operations in an asynchronous context.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9029911,"byte_end":9029972,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9029973,"byte_end":9029976,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! [rt]: crate::runtime","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9029977,"byte_end":9030001,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"! [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030002,"byte_end":9030066,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"! [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030067,"byte_end":9030127,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"! [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030128,"byte_end":9030217,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"! [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030218,"byte_end":9030306,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030307,"byte_end":9030310,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! ## Working with Tasks","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030311,"byte_end":9030336,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030337,"byte_end":9030340,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! This module provides the following APIs for working with tasks:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030341,"byte_end":9030408,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030409,"byte_end":9030412,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! ### Spawning","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030413,"byte_end":9030429,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030430,"byte_end":9030433,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030434,"byte_end":9030513,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"! function can be thought of as an async equivalent to the standard library's","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030514,"byte_end":9030593,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"! [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030594,"byte_end":9030673,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"! [future], and creates a new task to run that work concurrently:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030674,"byte_end":9030741,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030742,"byte_end":9030745,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030746,"byte_end":9030753,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030754,"byte_end":9030774,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030775,"byte_end":9030778,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! # async fn doc() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030779,"byte_end":9030801,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"! task::spawn(async {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030802,"byte_end":9030825,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"!     // perform some work here...","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030826,"byte_end":9030862,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"! });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030863,"byte_end":9030870,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"! # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030871,"byte_end":9030878,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030879,"byte_end":9030886,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030887,"byte_end":9030890,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030891,"byte_end":9030970,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"! A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9030971,"byte_end":9031049,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"! the spawned task. For example:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031050,"byte_end":9031084,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031085,"byte_end":9031088,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031089,"byte_end":9031096,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031097,"byte_end":9031117,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031118,"byte_end":9031121,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031122,"byte_end":9031202,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"! let join = task::spawn(async {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031203,"byte_end":9031237,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"!     // ...","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031238,"byte_end":9031252,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"!     \"hello world!\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031253,"byte_end":9031275,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"! });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031276,"byte_end":9031283,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031284,"byte_end":9031287,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! // ...","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031288,"byte_end":9031298,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031299,"byte_end":9031302,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! // Await the result of the spawned task.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031303,"byte_end":9031347,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"! let result = join.await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031348,"byte_end":9031377,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"! assert_eq!(result, \"hello world!\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031378,"byte_end":9031417,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"! # Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031418,"byte_end":9031430,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031431,"byte_end":9031438,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031439,"byte_end":9031446,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031447,"byte_end":9031450,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031451,"byte_end":9031531,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"! task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031532,"byte_end":9031608,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"! example:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031609,"byte_end":9031621,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031622,"byte_end":9031625,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031626,"byte_end":9031633,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031634,"byte_end":9031654,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031655,"byte_end":9031658,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031659,"byte_end":9031697,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"! let join = task::spawn(async {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031698,"byte_end":9031732,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"!     panic!(\"something bad happened!\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031733,"byte_end":9031774,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"! });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031775,"byte_end":9031782,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031783,"byte_end":9031786,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"! // The returned result indicates that the task failed.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031787,"byte_end":9031845,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"! assert!(join.await.is_err());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031846,"byte_end":9031879,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"! # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031880,"byte_end":9031887,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031888,"byte_end":9031895,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031896,"byte_end":9031899,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt-core\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031900,"byte_end":9031973,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"! feature flag is enabled.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9031974,"byte_end":9032002,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9032003,"byte_end":9032006,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! [`task::spawn`]: crate::task::spawn()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9032007,"byte_end":9032048,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"! [future]: std::future::Future","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9032049,"byte_end":9032082,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"! [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9032083,"byte_end":9032129,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"! [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9032130,"byte_end":9032173,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"! [thread_join]: std::thread::JoinHandle","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9032174,"byte_end":9032216,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"! [`JoinError`]: crate::task::JoinError","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9032217,"byte_end":9032258,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9032259,"byte_end":9032262,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! ### Blocking and Yielding","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9032263,"byte_end":9032292,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9032293,"byte_end":9032296,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9032297,"byte_end":9032377,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"! operations that can block. A blocking operation performed in a task running","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9032378,"byte_end":9032457,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"! on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9032458,"byte_end":9032537,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"! preventing other tasks from running.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9032538,"byte_end":9032578,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9032579,"byte_end":9032582,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9032583,"byte_end":9032657,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"! asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9032658,"byte_end":9032738,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9032739,"byte_end":9032742,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! #### spawn_blocking","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9032743,"byte_end":9032766,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9032767,"byte_end":9032770,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9032771,"byte_end":9032851,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"! discussed in the previous section, but rather than spawning an","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9032852,"byte_end":9032918,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"! _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9032919,"byte_end":9032986,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"! _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9032987,"byte_end":9033061,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"! example:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033062,"byte_end":9033074,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033075,"byte_end":9033078,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033079,"byte_end":9033086,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033087,"byte_end":9033107,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033108,"byte_end":9033111,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! # async fn docs() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033112,"byte_end":9033135,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"! task::spawn_blocking(|| {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033136,"byte_end":9033165,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033166,"byte_end":9033228,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"! });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033229,"byte_end":9033236,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"! # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033237,"byte_end":9033244,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033245,"byte_end":9033252,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033253,"byte_end":9033256,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033257,"byte_end":9033331,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"! which we can use to await the result of the blocking operation:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033332,"byte_end":9033399,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033400,"byte_end":9033403,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033404,"byte_end":9033415,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"! # use tokio::task;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033416,"byte_end":9033438,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"! # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033439,"byte_end":9033503,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"! let join = task::spawn_blocking(|| {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033504,"byte_end":9033544,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033545,"byte_end":9033607,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"!     \"blocking completed\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033608,"byte_end":9033636,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"! });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033637,"byte_end":9033644,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033645,"byte_end":9033648,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"! let result = join.await?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033649,"byte_end":9033678,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"! assert_eq!(result, \"blocking completed\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033679,"byte_end":9033724,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"! # Ok(())","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033725,"byte_end":9033737,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033738,"byte_end":9033745,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033746,"byte_end":9033753,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033754,"byte_end":9033757,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"! #### block_in_place","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033758,"byte_end":9033781,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033782,"byte_end":9033785,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"! When using the [threaded runtime][rt-threaded], the [`task::block_in_place`]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033786,"byte_end":9033866,"line_start":162,"line_end":162,"column_start":1,"column_end":81}},{"value":"! function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033867,"byte_end":9033941,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"! allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9033942,"byte_end":9034018,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"! `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034019,"byte_end":9034093,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"! _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034094,"byte_end":9034173,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"! that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034174,"byte_end":9034256,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"! context switches.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034257,"byte_end":9034278,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034279,"byte_end":9034282,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! For example:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034283,"byte_end":9034299,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034300,"byte_end":9034303,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034304,"byte_end":9034311,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034312,"byte_end":9034332,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034333,"byte_end":9034336,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"! # async fn docs() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034337,"byte_end":9034360,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"! let result = task::block_in_place(|| {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034361,"byte_end":9034403,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034404,"byte_end":9034466,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"!     \"blocking completed\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034467,"byte_end":9034495,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"! });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034496,"byte_end":9034503,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034504,"byte_end":9034507,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! assert_eq!(result, \"blocking completed\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034508,"byte_end":9034553,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"! # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034554,"byte_end":9034561,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034562,"byte_end":9034569,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034570,"byte_end":9034573,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"! #### yield_now","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034574,"byte_end":9034592,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034593,"byte_end":9034596,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"! In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034597,"byte_end":9034671,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"! that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034672,"byte_end":9034750,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"! and `await`ing this function will cause the current task to yield to the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034751,"byte_end":9034827,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"! Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034828,"byte_end":9034885,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"! scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034886,"byte_end":9034964,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"! to execute. For example:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034965,"byte_end":9034993,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034994,"byte_end":9034997,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9034998,"byte_end":9035009,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"! use tokio::task;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035010,"byte_end":9035030,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035031,"byte_end":9035034,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035035,"byte_end":9035073,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"! async {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035074,"byte_end":9035085,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"!     task::spawn(async {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035086,"byte_end":9035113,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"!         // ...","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035114,"byte_end":9035132,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"!         println!(\"spawned task done!\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035133,"byte_end":9035175,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"!     });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035176,"byte_end":9035187,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035188,"byte_end":9035191,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"!     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035192,"byte_end":9035259,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"!     task::yield_now().await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035260,"byte_end":9035292,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"!     println!(\"main task done!\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035293,"byte_end":9035329,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035330,"byte_end":9035335,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"! # .await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035336,"byte_end":9035349,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"! # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035350,"byte_end":9035357,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035358,"byte_end":9035365,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035366,"byte_end":9035369,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"! [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035370,"byte_end":9035427,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"! [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035428,"byte_end":9035485,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"! [rt-threaded]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035486,"byte_end":9035545,"line_start":214,"line_end":214,"column_start":1,"column_end":60}},{"value":"! [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035546,"byte_end":9035595,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"! [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9035596,"byte_end":9035645,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":5915},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/spawn.rs","byte_start":9039728,"byte_end":9039733,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"fn <T> (task: T) -> JoinHandle<T::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":5917},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/yield_now.rs","byte_start":9040806,"byte_end":9040815,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"fn () -> ()","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/yield_now.rs","byte_start":9040725,"byte_end":9040788,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6068},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9045213,"byte_end":9045221,"line_start":112,"line_end":112,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":6069},{"krate":0,"index":6070},{"krate":0,"index":6071}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22242,"byte_end":22269,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":6077},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9047233,"byte_end":9047244,"line_start":193,"line_end":193,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"fn <F> (future: F) -> JoinHandle<F::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22242,"byte_end":22269,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5958},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9048141,"byte_end":9048144,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"fn () -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9048096,"byte_end":9048129,"line_start":222,"line_end":222,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5959},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049849,"byte_end":9049860,"line_start":276,"line_end":276,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"fn <F> (&self, future: F) -> JoinHandle<F::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9048686,"byte_end":9048736,"line_start":240,"line_end":240,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9048741,"byte_end":9048744,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9048749,"byte_end":9048809,"line_start":242,"line_end":242,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9048814,"byte_end":9048817,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9048822,"byte_end":9048894,"line_start":244,"line_end":244,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9048899,"byte_end":9048969,"line_start":245,"line_end":245,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9048974,"byte_end":9048985,"line_start":246,"line_end":246,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9048990,"byte_end":9049010,"line_start":247,"line_end":247,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049015,"byte_end":9049018,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049023,"byte_end":9049041,"line_start":249,"line_end":249,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049046,"byte_end":9049067,"line_start":250,"line_end":250,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049072,"byte_end":9049114,"line_start":251,"line_end":251,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049119,"byte_end":9049122,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049127,"byte_end":9049199,"line_start":253,"line_end":253,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049204,"byte_end":9049257,"line_start":254,"line_end":254,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049262,"byte_end":9049295,"line_start":255,"line_end":255,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049300,"byte_end":9049317,"line_start":256,"line_end":256,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049322,"byte_end":9049333,"line_start":257,"line_end":257,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049338,"byte_end":9049341,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049346,"byte_end":9049380,"line_start":259,"line_end":259,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049385,"byte_end":9049421,"line_start":260,"line_end":260,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049426,"byte_end":9049444,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049449,"byte_end":9049466,"line_start":262,"line_end":262,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049471,"byte_end":9049474,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049479,"byte_end":9049550,"line_start":264,"line_end":264,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049555,"byte_end":9049605,"line_start":265,"line_end":265,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049610,"byte_end":9049643,"line_start":266,"line_end":266,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049648,"byte_end":9049665,"line_start":267,"line_end":267,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049670,"byte_end":9049681,"line_start":268,"line_end":268,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049686,"byte_end":9049689,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049694,"byte_end":9049730,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049735,"byte_end":9049753,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049758,"byte_end":9049775,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049780,"byte_end":9049785,"line_start":273,"line_end":273,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049790,"byte_end":9049797,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9049802,"byte_end":9049837,"line_start":275,"line_end":275,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5961},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9052595,"byte_end":9052603,"line_start":349,"line_end":349,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"fn <F> (&self, rt: &mut crate::runtime::Runtime, future: F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9050203,"byte_end":9050277,"line_start":287,"line_end":287,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9050282,"byte_end":9050341,"line_start":288,"line_end":288,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9050346,"byte_end":9050349,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9050354,"byte_end":9050421,"line_start":290,"line_end":290,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9050426,"byte_end":9050499,"line_start":291,"line_end":291,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9050504,"byte_end":9050580,"line_start":292,"line_end":292,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9050585,"byte_end":9050665,"line_start":293,"line_end":293,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9050670,"byte_end":9050689,"line_start":294,"line_end":294,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9050694,"byte_end":9050697,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9050702,"byte_end":9050768,"line_start":296,"line_end":296,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9050773,"byte_end":9050776,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9050781,"byte_end":9050793,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9050798,"byte_end":9050801,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9050806,"byte_end":9050878,"line_start":300,"line_end":300,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9050883,"byte_end":9050956,"line_start":301,"line_end":301,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9050961,"byte_end":9050964,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9050969,"byte_end":9050980,"line_start":303,"line_end":303,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9050985,"byte_end":9050988,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9050993,"byte_end":9051067,"line_start":305,"line_end":305,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051072,"byte_end":9051147,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051152,"byte_end":9051227,"line_start":307,"line_end":307,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051232,"byte_end":9051309,"line_start":308,"line_end":308,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051314,"byte_end":9051317,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051322,"byte_end":9051355,"line_start":310,"line_end":310,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051360,"byte_end":9051379,"line_start":311,"line_end":311,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051384,"byte_end":9051416,"line_start":312,"line_end":312,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051421,"byte_end":9051441,"line_start":313,"line_end":313,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051446,"byte_end":9051449,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051454,"byte_end":9051495,"line_start":315,"line_end":315,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051500,"byte_end":9051538,"line_start":316,"line_end":316,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051543,"byte_end":9051578,"line_start":317,"line_end":317,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051583,"byte_end":9051627,"line_start":318,"line_end":318,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051632,"byte_end":9051691,"line_start":319,"line_end":319,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051696,"byte_end":9051718,"line_start":320,"line_end":320,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051723,"byte_end":9051738,"line_start":321,"line_end":321,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051743,"byte_end":9051761,"line_start":322,"line_end":322,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051766,"byte_end":9051777,"line_start":323,"line_end":323,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051782,"byte_end":9051810,"line_start":324,"line_end":324,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051815,"byte_end":9051821,"line_start":325,"line_end":325,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051826,"byte_end":9051833,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051838,"byte_end":9051872,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051877,"byte_end":9051884,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051889,"byte_end":9051921,"line_start":329,"line_end":329,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051926,"byte_end":9051946,"line_start":330,"line_end":330,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051951,"byte_end":9051954,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9051959,"byte_end":9052000,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9052005,"byte_end":9052043,"line_start":333,"line_end":333,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9052048,"byte_end":9052083,"line_start":334,"line_end":334,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9052088,"byte_end":9052132,"line_start":335,"line_end":335,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9052137,"byte_end":9052196,"line_start":336,"line_end":336,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9052201,"byte_end":9052223,"line_start":337,"line_end":337,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9052228,"byte_end":9052249,"line_start":338,"line_end":338,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9052254,"byte_end":9052272,"line_start":339,"line_end":339,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9052277,"byte_end":9052288,"line_start":340,"line_end":340,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9052293,"byte_end":9052321,"line_start":341,"line_end":341,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9052326,"byte_end":9052332,"line_start":342,"line_end":342,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9052337,"byte_end":9052344,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9052349,"byte_end":9052352,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9052357,"byte_end":9052392,"line_start":345,"line_end":345,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9052397,"byte_end":9052464,"line_start":346,"line_end":346,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9052469,"byte_end":9052524,"line_start":347,"line_end":347,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9052529,"byte_end":9052583,"line_start":348,"line_end":348,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":5963},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053854,"byte_end":9053863,"line_start":384,"line_end":384,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"fn <F> (&self, future: F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Run a future to completion on the local set, returning its output.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9052762,"byte_end":9052832,"line_start":356,"line_end":356,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9052837,"byte_end":9052840,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9052845,"byte_end":9052915,"line_start":358,"line_end":358,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9052920,"byte_end":9052996,"line_start":359,"line_end":359,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053001,"byte_end":9053069,"line_start":360,"line_end":360,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053074,"byte_end":9053154,"line_start":361,"line_end":361,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053159,"byte_end":9053231,"line_start":362,"line_end":362,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053236,"byte_end":9053311,"line_start":363,"line_end":363,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053316,"byte_end":9053372,"line_start":364,"line_end":364,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053377,"byte_end":9053380,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053385,"byte_end":9053399,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053404,"byte_end":9053407,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053412,"byte_end":9053423,"line_start":368,"line_end":368,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053428,"byte_end":9053448,"line_start":369,"line_end":369,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053453,"byte_end":9053456,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053461,"byte_end":9053479,"line_start":371,"line_end":371,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053484,"byte_end":9053505,"line_start":372,"line_end":372,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053510,"byte_end":9053557,"line_start":373,"line_end":373,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053562,"byte_end":9053604,"line_start":374,"line_end":374,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053609,"byte_end":9053631,"line_start":375,"line_end":375,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053636,"byte_end":9053666,"line_start":376,"line_end":376,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053671,"byte_end":9053689,"line_start":377,"line_end":377,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053694,"byte_end":9053711,"line_start":378,"line_end":378,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053716,"byte_end":9053721,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053726,"byte_end":9053733,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053738,"byte_end":9053741,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053746,"byte_end":9053781,"line_start":382,"line_end":382,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9053786,"byte_end":9053836,"line_start":383,"line_end":383,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":6020},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062780,"byte_end":9062788,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":6022}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9061947,"byte_end":9061977,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9061978,"byte_end":9061981,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9061982,"byte_end":9062036,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062037,"byte_end":9062040,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062041,"byte_end":9062107,"line_start":66,"line_end":66,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062108,"byte_end":9062175,"line_start":67,"line_end":67,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062176,"byte_end":9062233,"line_start":68,"line_end":68,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062234,"byte_end":9062303,"line_start":69,"line_end":69,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062304,"byte_end":9062307,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062308,"byte_end":9062322,"line_start":71,"line_end":71,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062323,"byte_end":9062326,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062327,"byte_end":9062334,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062335,"byte_end":9062357,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062358,"byte_end":9062382,"line_start":75,"line_end":75,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062383,"byte_end":9062410,"line_start":76,"line_end":76,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062411,"byte_end":9062416,"line_start":77,"line_end":77,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062417,"byte_end":9062420,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062421,"byte_end":9062453,"line_start":79,"line_end":79,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062454,"byte_end":9062490,"line_start":80,"line_end":80,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062491,"byte_end":9062504,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062505,"byte_end":9062508,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062509,"byte_end":9062541,"line_start":83,"line_end":83,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062542,"byte_end":9062578,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062579,"byte_end":9062582,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062583,"byte_end":9062619,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062620,"byte_end":9062660,"line_start":87,"line_end":87,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062661,"byte_end":9062678,"line_start":88,"line_end":88,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062679,"byte_end":9062692,"line_start":89,"line_end":89,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062693,"byte_end":9062700,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062701,"byte_end":9062708,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: struct@std::thread::LocalKey","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062709,"byte_end":9062768,"line_start":92,"line_end":92,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6022},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062830,"byte_end":9062835,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":6020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6025},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9063363,"byte_end":9063368,"line_start":116,"line_end":116,"column_start":18,"column_end":23},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"fn <F> (&'static self, value: T, f: F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062913,"byte_end":9062977,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062982,"byte_end":9062985,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062990,"byte_end":9063051,"line_start":101,"line_end":101,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9063056,"byte_end":9063059,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9063064,"byte_end":9063080,"line_start":103,"line_end":103,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9063085,"byte_end":9063088,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9063093,"byte_end":9063100,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9063105,"byte_end":9063127,"line_start":106,"line_end":106,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9063132,"byte_end":9063156,"line_start":107,"line_end":107,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9063161,"byte_end":9063188,"line_start":108,"line_end":108,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9063193,"byte_end":9063198,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9063203,"byte_end":9063206,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9063211,"byte_end":9063243,"line_start":111,"line_end":111,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9063248,"byte_end":9063303,"line_start":112,"line_end":112,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9063308,"byte_end":9063321,"line_start":113,"line_end":113,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9063326,"byte_end":9063333,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9063338,"byte_end":9063345,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6029},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9063842,"byte_end":9063846,"line_start":134,"line_end":134,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"fn <F, R> (&'static self, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9063593,"byte_end":9063659,"line_start":128,"line_end":128,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9063664,"byte_end":9063667,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9063672,"byte_end":9063684,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9063689,"byte_end":9063692,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9063697,"byte_end":9063758,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9063763,"byte_end":9063830,"line_start":133,"line_end":133,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6032},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9064334,"byte_end":9064342,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"fn <F, R> (&'static self, f: F) -> Result<R, AccessError>","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9064087,"byte_end":9064153,"line_start":144,"line_end":144,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9064158,"byte_end":9064161,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the accociated key is not present, this","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9064166,"byte_end":9064232,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9064237,"byte_end":9064302,"line_start":147,"line_end":147,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9064307,"byte_end":9064322,"line_start":148,"line_end":148,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6038},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9064802,"byte_end":9064805,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"fn (&'static self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9064697,"byte_end":9064739,"line_start":164,"line_end":164,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9064744,"byte_end":9064790,"line_start":165,"line_end":165,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":6080},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9066294,"byte_end":9066305,"line_start":224,"line_end":224,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":6081}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9066169,"byte_end":9066244,"line_start":222,"line_end":222,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":6092},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","parent":null,"children":[{"krate":0,"index":6093},{"krate":0,"index":6094},{"krate":0,"index":6095},{"krate":0,"index":6171},{"krate":0,"index":6172},{"krate":0,"index":6192},{"krate":0,"index":6196},{"krate":0,"index":6373},{"krate":0,"index":6386},{"krate":0,"index":6387},{"krate":0,"index":6423},{"krate":0,"index":6424},{"krate":0,"index":6447},{"krate":0,"index":6451},{"krate":0,"index":6485},{"krate":0,"index":6725},{"krate":0,"index":6749},{"krate":0,"index":6490},{"krate":0,"index":6554},{"krate":0,"index":6555},{"krate":0,"index":6560}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23098,"byte_end":23122,"line_start":324,"line_end":324,"column_start":13,"column_end":37}},{"value":"! Utilities for tracking time.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9066678,"byte_end":9066710,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9066711,"byte_end":9066714,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module provides a number of types for executing code after a set period","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9066715,"byte_end":9066795,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"! of time.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9066796,"byte_end":9066808,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9066809,"byte_end":9066812,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! * `Delay` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9066813,"byte_end":9066894,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"!   in time.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9066895,"byte_end":9066909,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9066910,"byte_end":9066913,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9066914,"byte_end":9066984,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"!   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9066985,"byte_end":9067065,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"!   elapses.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067066,"byte_end":9067080,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067081,"byte_end":9067084,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067085,"byte_end":9067164,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"!   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067165,"byte_end":9067237,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"!   complete in time, then it is canceled and an error is returned.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067238,"byte_end":9067307,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067308,"byte_end":9067311,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! * `DelayQueue`: A queue where items are returned once the requested delay","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067312,"byte_end":9067389,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"!   has expired.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067390,"byte_end":9067408,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067409,"byte_end":9067412,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! These types are sufficient for handling a large number of scenarios","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067413,"byte_end":9067484,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"! involving time.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067485,"byte_end":9067504,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067505,"byte_end":9067508,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! These types must be used from within the context of the `Runtime`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067509,"byte_end":9067579,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067580,"byte_end":9067583,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067584,"byte_end":9067598,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067599,"byte_end":9067602,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067603,"byte_end":9067649,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067650,"byte_end":9067653,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067654,"byte_end":9067661,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"! use tokio::time::delay_for;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067662,"byte_end":9067693,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067694,"byte_end":9067697,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! use std::time::Duration;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067698,"byte_end":9067726,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067727,"byte_end":9067730,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067731,"byte_end":9067734,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067735,"byte_end":9067753,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067754,"byte_end":9067775,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"!     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067776,"byte_end":9067828,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"!     println!(\"100 ms have elapsed\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067829,"byte_end":9067869,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"! }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067870,"byte_end":9067875,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067876,"byte_end":9067883,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067884,"byte_end":9067887,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! Require that an operation takes no more than 300ms. Note that this uses the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067888,"byte_end":9067967,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"! `timeout` function on the `FutureExt` trait. This trait is included in the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9067968,"byte_end":9068046,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"! prelude.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068047,"byte_end":9068059,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068060,"byte_end":9068063,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068064,"byte_end":9068071,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"! use tokio::time::{timeout, Duration};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068072,"byte_end":9068113,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068114,"byte_end":9068117,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! async fn long_future() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068118,"byte_end":9068146,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"!     // do work here","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068147,"byte_end":9068170,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"! }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068171,"byte_end":9068176,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068177,"byte_end":9068180,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! # async fn dox() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068181,"byte_end":9068203,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"! let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068204,"byte_end":9068271,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068272,"byte_end":9068275,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! if res.is_err() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068276,"byte_end":9068297,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"!     println!(\"operation timed out\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068298,"byte_end":9068338,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"! }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068339,"byte_end":9068344,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"! # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068345,"byte_end":9068352,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068353,"byte_end":9068360,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068361,"byte_end":9068364,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068365,"byte_end":9068441,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068442,"byte_end":9068445,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! The difference between [`interval`] and [`delay_for`] is that an","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068446,"byte_end":9068514,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"! [`interval`] measures the time since the last tick, which means that","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068515,"byte_end":9068587,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"! `.tick().await` may wait for a shorter time than the duration specified","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068588,"byte_end":9068663,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"! for the interval if some time has passed between calls to `.tick().await`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068664,"byte_end":9068742,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068743,"byte_end":9068746,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068747,"byte_end":9068825,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"! would only be executed once every three seconds, and not every two","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068826,"byte_end":9068896,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"! seconds.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068897,"byte_end":9068909,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068910,"byte_end":9068913,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068914,"byte_end":9068921,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"! use tokio::time;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068922,"byte_end":9068942,"line_start":74,"line_end":74,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068943,"byte_end":9068946,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! async fn task_that_takes_a_second() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068947,"byte_end":9068988,"line_start":76,"line_end":76,"column_start":1,"column_end":42}},{"value":"!     println!(\"hello\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9068989,"byte_end":9069015,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"!     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069016,"byte_end":9069075,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"! }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069076,"byte_end":9069081,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069082,"byte_end":9069085,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069086,"byte_end":9069104,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069105,"byte_end":9069126,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"!     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069127,"byte_end":9069199,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"!     for _i in 0..5 {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069200,"byte_end":9069224,"line_start":84,"line_end":84,"column_start":1,"column_end":25}},{"value":"!         interval.tick().await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069225,"byte_end":9069259,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"!         task_that_takes_a_second().await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069260,"byte_end":9069305,"line_start":86,"line_end":86,"column_start":1,"column_end":46}},{"value":"!     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069306,"byte_end":9069315,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069316,"byte_end":9069321,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069322,"byte_end":9069329,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069330,"byte_end":9069333,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"! [`delay_for`]: crate::time::delay_for()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069334,"byte_end":9069377,"line_start":91,"line_end":91,"column_start":1,"column_end":44}},{"value":"! [`interval`]: crate::time::interval()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069378,"byte_end":9069419,"line_start":92,"line_end":92,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":6095},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay_queue","qualname":"::time::delay_queue","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","parent":null,"children":[{"krate":0,"index":6096},{"krate":0,"index":6099},{"krate":0,"index":6105},{"krate":0,"index":6106},{"krate":0,"index":6107},{"krate":0,"index":6108},{"krate":0,"index":6109},{"krate":0,"index":6110},{"krate":0,"index":6577},{"krate":0,"index":6585},{"krate":0,"index":6588},{"krate":0,"index":6593},{"krate":0,"index":6596},{"krate":0,"index":6600},{"krate":0,"index":6598},{"krate":0,"index":6602},{"krate":0,"index":6606},{"krate":0,"index":6609},{"krate":0,"index":6616},{"krate":0,"index":6113},{"krate":0,"index":6114},{"krate":0,"index":6141},{"krate":0,"index":6143},{"krate":0,"index":6146},{"krate":0,"index":6150},{"krate":0,"index":6160},{"krate":0,"index":6163},{"krate":0,"index":6165}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"! A queue of delayed elements.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9075570,"byte_end":9075602,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9075603,"byte_end":9075606,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! See [`DelayQueue`] for more details.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9075607,"byte_end":9075647,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9075648,"byte_end":9075651,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9075652,"byte_end":9075689,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":6577},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079948,"byte_end":9079958,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"DelayQueue","qualname":"::time::delay_queue::DelayQueue","value":"DelayQueue {  }","parent":null,"children":[{"krate":0,"index":6579},{"krate":0,"index":6580},{"krate":0,"index":6581},{"krate":0,"index":6582},{"krate":0,"index":6583},{"krate":0,"index":6584}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9075930,"byte_end":9075962,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9075963,"byte_end":9075966,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Once an element is inserted into the `DelayQueue`, it is yielded once the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9075967,"byte_end":9076044,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ specified deadline has been reached.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9076045,"byte_end":9076085,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9076086,"byte_end":9076089,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9076090,"byte_end":9076101,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9076102,"byte_end":9076105,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Elements are inserted into `DelayQueue` using the [`insert`] or","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9076106,"byte_end":9076173,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ [`insert_at`] methods. A deadline is provided with the item and a [`Key`] is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9076174,"byte_end":9076254,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ returned. The key is used to remove the entry or to change the deadline at","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9076255,"byte_end":9076333,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ which it should be yielded back.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9076334,"byte_end":9076370,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9076371,"byte_end":9076374,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Once delays have been configured, the `DelayQueue` is used via its","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9076375,"byte_end":9076445,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ [`Stream`] implementation. [`poll`] is called. If an entry has reached its","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9076446,"byte_end":9076524,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ deadline, it is returned. If not, `Poll::Pending` indicating that the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9076525,"byte_end":9076598,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ current task will be notified once the deadline has been reached.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9076599,"byte_end":9076668,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9076669,"byte_end":9076672,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # `Stream` implementation","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9076673,"byte_end":9076702,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9076703,"byte_end":9076706,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Items are retrieved from the queue via [`Stream::poll`]. If no delays have","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9076707,"byte_end":9076785,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ expired, no items are returned. In this case, `NotReady` is returned and the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9076786,"byte_end":9076866,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ current task is registered to be notified once the next item's delay has","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9076867,"byte_end":9076943,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ expired.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9076944,"byte_end":9076956,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9076957,"byte_end":9076960,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ If no items are in the queue, i.e. `is_empty()` returns `true`, then `poll`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9076961,"byte_end":9077040,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ returns `Ready(None)`. This indicates that the stream has reached an end.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9077041,"byte_end":9077118,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ However, if a new item is inserted *after*, `poll` will once again start","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9077119,"byte_end":9077195,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ returning items or `NotReady.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9077196,"byte_end":9077229,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9077230,"byte_end":9077233,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Items are returned ordered by their expirations. Items that are configured","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9077234,"byte_end":9077312,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ to expire first will be returned first. There are no ordering guarantees","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9077313,"byte_end":9077389,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ for items configured to expire the same instant. Also note that delays are","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9077390,"byte_end":9077468,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ rounded to the closest millisecond.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9077469,"byte_end":9077508,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9077509,"byte_end":9077512,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9077513,"byte_end":9077533,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9077534,"byte_end":9077537,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The [`DelayQueue`] is backed by a separate instance of the same timer wheel used internally by","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9077538,"byte_end":9077636,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"/ Tokio's standalone timer utilities such as [`delay_for`]. Because of this, it offers the same","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9077637,"byte_end":9077734,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ performance and scalability benefits.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9077735,"byte_end":9077776,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9077777,"byte_end":9077780,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ State associated with each entry is stored in a [`slab`]. This amortizes the cost of allocation,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9077781,"byte_end":9077881,"line_start":57,"line_end":57,"column_start":1,"column_end":101}},{"value":"/ and allows reuse of the memory allocated for expired entires.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9077882,"byte_end":9077947,"line_start":58,"line_end":58,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9077948,"byte_end":9077951,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Capacity can be checked using [`capacity`] and allocated preemptively by using","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9077952,"byte_end":9078034,"line_start":60,"line_end":60,"column_start":1,"column_end":83}},{"value":"/ the [`reserve`] method.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078035,"byte_end":9078062,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078063,"byte_end":9078066,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078067,"byte_end":9078078,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078079,"byte_end":9078082,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Using `DelayQueue` to manage cache entries.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078083,"byte_end":9078130,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078131,"byte_end":9078134,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078135,"byte_end":9078153,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/ use tokio::time::{delay_queue, DelayQueue, Error};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078154,"byte_end":9078208,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078209,"byte_end":9078212,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ use futures::ready;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078213,"byte_end":9078236,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078237,"byte_end":9078271,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078272,"byte_end":9078307,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078308,"byte_end":9078336,"line_start":73,"line_end":73,"column_start":1,"column_end":29}},{"value":"/ # type CacheKey = String;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078337,"byte_end":9078366,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/ # type Value = String;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078367,"byte_end":9078393,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078394,"byte_end":9078397,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Cache {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078398,"byte_end":9078416,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/     entries: HashMap<CacheKey, (Value, delay_queue::Key)>,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078417,"byte_end":9078479,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/     expirations: DelayQueue<CacheKey>,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078480,"byte_end":9078522,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078523,"byte_end":9078528,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078529,"byte_end":9078532,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ const TTL_SECS: u64 = 30;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078533,"byte_end":9078562,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078563,"byte_end":9078566,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ impl Cache {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078567,"byte_end":9078583,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/     fn insert(&mut self, key: CacheKey, value: Value) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078584,"byte_end":9078643,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/         let delay = self.expirations","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078644,"byte_end":9078684,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"/             .insert(key.clone(), Duration::from_secs(TTL_SECS));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078685,"byte_end":9078753,"line_start":87,"line_end":87,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078754,"byte_end":9078757,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/         self.entries.insert(key, (value, delay));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078758,"byte_end":9078811,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078812,"byte_end":9078821,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078822,"byte_end":9078825,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     fn get(&self, key: &CacheKey) -> Option<&Value> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078826,"byte_end":9078883,"line_start":92,"line_end":92,"column_start":1,"column_end":58}},{"value":"/         self.entries.get(key)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078884,"byte_end":9078917,"line_start":93,"line_end":93,"column_start":1,"column_end":34}},{"value":"/             .map(|&(ref v, _)| v)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078918,"byte_end":9078955,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078956,"byte_end":9078965,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078966,"byte_end":9078969,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn remove(&mut self, key: &CacheKey) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9078970,"byte_end":9079016,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/         if let Some((_, cache_key)) = self.entries.remove(key) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079017,"byte_end":9079085,"line_start":98,"line_end":98,"column_start":1,"column_end":69}},{"value":"/             self.expirations.remove(&cache_key);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079086,"byte_end":9079138,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079139,"byte_end":9079152,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079153,"byte_end":9079162,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079163,"byte_end":9079166,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/     fn poll_purge(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Error>> {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079167,"byte_end":9079250,"line_start":103,"line_end":103,"column_start":1,"column_end":84}},{"value":"/         while let Some(res) = ready!(self.expirations.poll_expired(cx)) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079251,"byte_end":9079328,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/             let entry = res?;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079329,"byte_end":9079362,"line_start":105,"line_end":105,"column_start":1,"column_end":34}},{"value":"/             self.entries.remove(entry.get_ref());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079363,"byte_end":9079416,"line_start":106,"line_end":106,"column_start":1,"column_end":54}},{"value":"/         }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079417,"byte_end":9079430,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079431,"byte_end":9079434,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079435,"byte_end":9079466,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079467,"byte_end":9079476,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079477,"byte_end":9079482,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079483,"byte_end":9079490,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079491,"byte_end":9079494,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`insert`]: method@Self::insert","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079495,"byte_end":9079530,"line_start":114,"line_end":114,"column_start":1,"column_end":36}},{"value":"/ [`insert_at`]: method@Self::insert_at","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079531,"byte_end":9079572,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079573,"byte_end":9079596,"line_start":116,"line_end":116,"column_start":1,"column_end":24}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079597,"byte_end":9079673,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079674,"byte_end":9079705,"line_start":118,"line_end":118,"column_start":1,"column_end":32}},{"value":"/ [`Stream::poll`]: method@Self::poll","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079706,"byte_end":9079745,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079746,"byte_end":9079783,"line_start":120,"line_end":120,"column_start":1,"column_end":38}},{"value":"/ [`delay_for`]: fn@super::delay_for","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079784,"byte_end":9079822,"line_start":121,"line_end":121,"column_start":1,"column_end":39}},{"value":"/ [`slab`]: slab","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079823,"byte_end":9079841,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/ [`capacity`]: method@Self::capacity","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079842,"byte_end":9079881,"line_start":123,"line_end":123,"column_start":1,"column_end":40}},{"value":"/ [`reserve`]: method@Self::reserve","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9079882,"byte_end":9079919,"line_start":124,"line_end":124,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":6588},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9080649,"byte_end":9080656,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"Expired","qualname":"::time::delay_queue::Expired","value":"Expired {  }","parent":null,"children":[{"krate":0,"index":6590},{"krate":0,"index":6591},{"krate":0,"index":6592}],"decl_id":null,"docs":" An entry in `DelayQueue` that has expired and removed.","sig":null,"attributes":[{"value":"/ An entry in `DelayQueue` that has expired and removed.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9080455,"byte_end":9080513,"line_start":147,"line_end":147,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9080514,"byte_end":9080517,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Values are returned by [`DelayQueue::poll`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9080518,"byte_end":9080566,"line_start":149,"line_end":149,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9080567,"byte_end":9080570,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue::poll`]: method@DelayQueue::poll","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9080571,"byte_end":9080620,"line_start":151,"line_end":151,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":6596},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9081124,"byte_end":9081127,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"Key","qualname":"::time::delay_queue::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":6597}],"decl_id":null,"docs":" Token to a value stored in a `DelayQueue`.","sig":null,"attributes":[{"value":"/ Token to a value stored in a `DelayQueue`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9080824,"byte_end":9080870,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9080871,"byte_end":9080874,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Instances of `Key` are returned by [`DelayQueue::insert`]. See [`DelayQueue`]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9080875,"byte_end":9080956,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/ documentation for more details.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9080957,"byte_end":9080992,"line_start":167,"line_end":167,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9080993,"byte_end":9080996,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9080997,"byte_end":9081034,"line_start":169,"line_end":169,"column_start":1,"column_end":38}},{"value":"/ [`DelayQueue::insert`]: method@DelayQueue::insert","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9081035,"byte_end":9081088,"line_start":170,"line_end":170,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6116},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082105,"byte_end":9082108,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayQueue<T>>::new","value":"fn () -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue`","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9081805,"byte_end":9081843,"line_start":206,"line_end":206,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9081848,"byte_end":9081851,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The queue will not allocate storage until items are inserted into it.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9081856,"byte_end":9081929,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9081934,"byte_end":9081937,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9081942,"byte_end":9081956,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9081961,"byte_end":9081964,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9081969,"byte_end":9081980,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9081985,"byte_end":9082019,"line_start":213,"line_end":213,"column_start":5,"column_end":39}},{"value":"/ let delay_queue: DelayQueue<u32> = DelayQueue::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082024,"byte_end":9082081,"line_start":214,"line_end":214,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082086,"byte_end":9082093,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6117},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9083026,"byte_end":9083039,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DelayQueue<T>>::with_capacity","value":"fn (capacity: usize) -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue` with the specified capacity.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082178,"byte_end":9082245,"line_start":220,"line_end":220,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082250,"byte_end":9082253,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The queue will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082258,"byte_end":9082329,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ reallocating. If `capacity` is 0, the queue will not allocate for","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082334,"byte_end":9082403,"line_start":223,"line_end":223,"column_start":5,"column_end":74}},{"value":"/ storage.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082408,"byte_end":9082420,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082425,"byte_end":9082428,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082433,"byte_end":9082447,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082452,"byte_end":9082455,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082460,"byte_end":9082471,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082476,"byte_end":9082510,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082515,"byte_end":9082545,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082550,"byte_end":9082553,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082558,"byte_end":9082578,"line_start":232,"line_end":232,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082583,"byte_end":9082606,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::with_capacity(10);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082611,"byte_end":9082671,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082676,"byte_end":9082679,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     // These insertions are done without further allocation","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082684,"byte_end":9082747,"line_start":236,"line_end":236,"column_start":5,"column_end":68}},{"value":"/     for i in 0..10 {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082752,"byte_end":9082776,"line_start":237,"line_end":237,"column_start":5,"column_end":29}},{"value":"/         delay_queue.insert(i, Duration::from_secs(i));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082781,"byte_end":9082839,"line_start":238,"line_end":238,"column_start":5,"column_end":63}},{"value":"/     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082844,"byte_end":9082853,"line_start":239,"line_end":239,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082858,"byte_end":9082861,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     // This will make the queue allocate additional storage","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082866,"byte_end":9082929,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/     delay_queue.insert(11, Duration::from_secs(11));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082934,"byte_end":9082990,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9082995,"byte_end":9083002,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9083007,"byte_end":9083014,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6118},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9085075,"byte_end":9085084,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"insert_at","qualname":"<DelayQueue<T>>::insert_at","value":"fn (&mut self, value: T, when: Instant) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire at a specific instant in\n time.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire at a specific instant in","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9083338,"byte_end":9083411,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/ time.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9083416,"byte_end":9083425,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9083430,"byte_end":9083433,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert`, but takes an `Instant` instead","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9083438,"byte_end":9083512,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/ of a `Duration`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9083517,"byte_end":9083537,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9083542,"byte_end":9083545,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9083550,"byte_end":9083625,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll`]. If `when` has already been","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9083630,"byte_end":9083700,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9083705,"byte_end":9083769,"line_start":264,"line_end":264,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9083774,"byte_end":9083777,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9083782,"byte_end":9083857,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9083862,"byte_end":9083937,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll`] after","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9083942,"byte_end":9084012,"line_start":268,"line_end":268,"column_start":5,"column_end":75}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084017,"byte_end":9084090,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084095,"byte_end":9084171,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084176,"byte_end":9084210,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084215,"byte_end":9084218,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084223,"byte_end":9084275,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084280,"byte_end":9084283,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084288,"byte_end":9084300,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084305,"byte_end":9084308,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084313,"byte_end":9084373,"line_start":277,"line_end":277,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084378,"byte_end":9084381,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084386,"byte_end":9084400,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084405,"byte_end":9084408,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084413,"byte_end":9084428,"line_start":281,"line_end":281,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084433,"byte_end":9084436,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084441,"byte_end":9084452,"line_start":283,"line_end":283,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084457,"byte_end":9084510,"line_start":284,"line_end":284,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084515,"byte_end":9084518,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084523,"byte_end":9084543,"line_start":286,"line_end":286,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084548,"byte_end":9084571,"line_start":287,"line_end":287,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084576,"byte_end":9084624,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert_at(","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084629,"byte_end":9084669,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/         \"foo\", Instant::now() + Duration::from_secs(5));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084674,"byte_end":9084734,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084739,"byte_end":9084742,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084747,"byte_end":9084774,"line_start":292,"line_end":292,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084779,"byte_end":9084823,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084828,"byte_end":9084871,"line_start":294,"line_end":294,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084876,"byte_end":9084883,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084888,"byte_end":9084895,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084900,"byte_end":9084903,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084908,"byte_end":9084939,"line_start":298,"line_end":298,"column_start":5,"column_end":36}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084944,"byte_end":9084979,"line_start":299,"line_end":299,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9084984,"byte_end":9085017,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9085022,"byte_end":9085045,"line_start":301,"line_end":301,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9085050,"byte_end":9085063,"line_start":302,"line_end":302,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":6119},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9086444,"byte_end":9086456,"line_start":343,"line_end":343,"column_start":12,"column_end":24},"name":"poll_expired","qualname":"<DelayQueue<T>>::poll_expired","value":"fn (&mut self, cx: &mut task::Context<'_>) -> Poll<Option<Result<Expired<T>, Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to pull out the next value of the delay queue, registering the\n current task for wakeup if the value is not yet available, and returning\n None if the queue is exhausted.\n","sig":null,"attributes":[{"value":"/ Attempts to pull out the next value of the delay queue, registering the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9086236,"byte_end":9086311,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9086316,"byte_end":9086392,"line_start":341,"line_end":341,"column_start":5,"column_end":81}},{"value":"/ None if the queue is exhausted.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9086397,"byte_end":9086432,"line_start":342,"line_end":342,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":6122},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088828,"byte_end":9088834,"line_start":411,"line_end":411,"column_start":12,"column_end":18},"name":"insert","qualname":"<DelayQueue<T>>::insert","value":"fn (&mut self, value: T, timeout: Duration) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire after the requested duration\n elapses.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire after the requested duration","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9087073,"byte_end":9087150,"line_start":363,"line_end":363,"column_start":5,"column_end":82}},{"value":"/ elapses.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9087155,"byte_end":9087167,"line_start":364,"line_end":364,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9087172,"byte_end":9087175,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert_at`, but takes a `Duration`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9087180,"byte_end":9087249,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/ instead of an `Instant`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9087254,"byte_end":9087282,"line_start":367,"line_end":367,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9087287,"byte_end":9087290,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9087295,"byte_end":9087370,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll`]. If `when` has already been","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9087375,"byte_end":9087445,"line_start":370,"line_end":370,"column_start":5,"column_end":75}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9087450,"byte_end":9087514,"line_start":371,"line_end":371,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9087519,"byte_end":9087522,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9087527,"byte_end":9087602,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9087607,"byte_end":9087682,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll`] after","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9087687,"byte_end":9087757,"line_start":375,"line_end":375,"column_start":5,"column_end":75}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9087762,"byte_end":9087835,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9087840,"byte_end":9087916,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9087921,"byte_end":9087955,"line_start":378,"line_end":378,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9087960,"byte_end":9087963,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9087968,"byte_end":9088020,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088025,"byte_end":9088028,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088033,"byte_end":9088045,"line_start":382,"line_end":382,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088050,"byte_end":9088053,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088058,"byte_end":9088133,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ duration.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088138,"byte_end":9088151,"line_start":385,"line_end":385,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088156,"byte_end":9088159,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088164,"byte_end":9088178,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088183,"byte_end":9088186,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088191,"byte_end":9088206,"line_start":389,"line_end":389,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088211,"byte_end":9088214,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088219,"byte_end":9088230,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088235,"byte_end":9088267,"line_start":392,"line_end":392,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088272,"byte_end":9088300,"line_start":393,"line_end":393,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088305,"byte_end":9088308,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088313,"byte_end":9088333,"line_start":395,"line_end":395,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088338,"byte_end":9088361,"line_start":396,"line_end":396,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088366,"byte_end":9088414,"line_start":397,"line_end":397,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088419,"byte_end":9088487,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088492,"byte_end":9088495,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088500,"byte_end":9088527,"line_start":400,"line_end":400,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088532,"byte_end":9088576,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088581,"byte_end":9088624,"line_start":402,"line_end":402,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088629,"byte_end":9088636,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088641,"byte_end":9088648,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088653,"byte_end":9088656,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088661,"byte_end":9088692,"line_start":406,"line_end":406,"column_start":5,"column_end":36}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088697,"byte_end":9088732,"line_start":407,"line_end":407,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088737,"byte_end":9088770,"line_start":408,"line_end":408,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088775,"byte_end":9088798,"line_start":409,"line_end":409,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9088803,"byte_end":9088816,"line_start":410,"line_end":410,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":6127},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9090379,"byte_end":9090385,"line_start":458,"line_end":458,"column_start":12,"column_end":18},"name":"remove","qualname":"<DelayQueue<T>>::remove","value":"fn (&mut self, key: &Key) -> Expired<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the item associated with `key` from the queue.","sig":null,"attributes":[{"value":"/ Removes the item associated with `key` from the queue.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9089525,"byte_end":9089583,"line_start":430,"line_end":430,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9089588,"byte_end":9089591,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ There must be an item associated with `key`. The function returns the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9089596,"byte_end":9089669,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/ removed item as well as the `Instant` at which it will the delay will","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9089674,"byte_end":9089747,"line_start":433,"line_end":433,"column_start":5,"column_end":78}},{"value":"/ have expired.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9089752,"byte_end":9089769,"line_start":434,"line_end":434,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9089774,"byte_end":9089777,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9089782,"byte_end":9089794,"line_start":436,"line_end":436,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9089799,"byte_end":9089802,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The function panics if `key` is not contained by the queue.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9089807,"byte_end":9089870,"line_start":438,"line_end":438,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9089875,"byte_end":9089878,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9089883,"byte_end":9089897,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9089902,"byte_end":9089905,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9089910,"byte_end":9089925,"line_start":442,"line_end":442,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9089930,"byte_end":9089933,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9089938,"byte_end":9089949,"line_start":444,"line_end":444,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9089954,"byte_end":9089986,"line_start":445,"line_end":445,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9089991,"byte_end":9090019,"line_start":446,"line_end":446,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9090024,"byte_end":9090027,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9090032,"byte_end":9090052,"line_start":448,"line_end":448,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9090057,"byte_end":9090080,"line_start":449,"line_end":449,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9090085,"byte_end":9090133,"line_start":450,"line_end":450,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9090138,"byte_end":9090206,"line_start":451,"line_end":451,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9090211,"byte_end":9090214,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9090219,"byte_end":9090246,"line_start":453,"line_end":453,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9090251,"byte_end":9090295,"line_start":454,"line_end":454,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9090300,"byte_end":9090343,"line_start":455,"line_end":455,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9090348,"byte_end":9090355,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9090360,"byte_end":9090367,"line_start":457,"line_end":457,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6129},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9092037,"byte_end":9092045,"line_start":510,"line_end":510,"column_start":12,"column_end":20},"name":"reset_at","qualname":"<DelayQueue<T>>::reset_at","value":"fn (&mut self, key: &Key, when: Instant) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire at `when`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire at `when`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9090923,"byte_end":9090996,"line_start":477,"line_end":477,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091001,"byte_end":9091004,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset` but takes an `Instant` instead of","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091009,"byte_end":9091084,"line_start":479,"line_end":479,"column_start":5,"column_end":80}},{"value":"/ a `Duration`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091089,"byte_end":9091106,"line_start":480,"line_end":480,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091111,"byte_end":9091114,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire at `when`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091119,"byte_end":9091194,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/ If `when` is in the past, then the item is immediately made available to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091199,"byte_end":9091275,"line_start":483,"line_end":483,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091280,"byte_end":9091295,"line_start":484,"line_end":484,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091300,"byte_end":9091303,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091308,"byte_end":9091320,"line_start":486,"line_end":486,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091325,"byte_end":9091328,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future or if `key` is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091333,"byte_end":9091407,"line_start":488,"line_end":488,"column_start":5,"column_end":79}},{"value":"/ not contained by the queue.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091412,"byte_end":9091443,"line_start":489,"line_end":489,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091448,"byte_end":9091451,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091456,"byte_end":9091470,"line_start":491,"line_end":491,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091475,"byte_end":9091478,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091483,"byte_end":9091498,"line_start":493,"line_end":493,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091503,"byte_end":9091506,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091511,"byte_end":9091522,"line_start":495,"line_end":495,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091527,"byte_end":9091580,"line_start":496,"line_end":496,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091585,"byte_end":9091588,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091593,"byte_end":9091613,"line_start":498,"line_end":498,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091618,"byte_end":9091641,"line_start":499,"line_end":499,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091646,"byte_end":9091694,"line_start":500,"line_end":500,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091699,"byte_end":9091767,"line_start":501,"line_end":501,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091772,"byte_end":9091775,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091780,"byte_end":9091837,"line_start":503,"line_end":503,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091842,"byte_end":9091845,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset_at(&key, Instant::now() + Duration::from_secs(10));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091850,"byte_end":9091927,"line_start":505,"line_end":505,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091932,"byte_end":9091935,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9091940,"byte_end":9092001,"line_start":507,"line_end":507,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9092006,"byte_end":9092013,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9092018,"byte_end":9092025,"line_start":509,"line_end":509,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6132},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093938,"byte_end":9093943,"line_start":567,"line_end":567,"column_start":12,"column_end":17},"name":"reset","qualname":"<DelayQueue<T>>::reset","value":"fn (&mut self, key: &Key, timeout: Duration) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire after\n `timeout`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire after","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9092788,"byte_end":9092856,"line_start":532,"line_end":532,"column_start":5,"column_end":73}},{"value":"/ `timeout`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9092861,"byte_end":9092875,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9092880,"byte_end":9092883,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset_at` but takes a `Duration` instead","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9092888,"byte_end":9092963,"line_start":535,"line_end":535,"column_start":5,"column_end":80}},{"value":"/ of an `Instant`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9092968,"byte_end":9092988,"line_start":536,"line_end":536,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9092993,"byte_end":9092996,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire after","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093001,"byte_end":9093071,"line_start":538,"line_end":538,"column_start":5,"column_end":75}},{"value":"/ `timeout`. If `timeout` is zero, then the item is immediately made","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093076,"byte_end":9093146,"line_start":539,"line_end":539,"column_start":5,"column_end":75}},{"value":"/ available to the caller.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093151,"byte_end":9093179,"line_start":540,"line_end":540,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093184,"byte_end":9093187,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093192,"byte_end":9093204,"line_start":542,"line_end":542,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093209,"byte_end":9093212,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093217,"byte_end":9093292,"line_start":544,"line_end":544,"column_start":5,"column_end":80}},{"value":"/ duration or if `key` is not contained by the queue.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093297,"byte_end":9093352,"line_start":545,"line_end":545,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093357,"byte_end":9093360,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093365,"byte_end":9093379,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093384,"byte_end":9093387,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093392,"byte_end":9093407,"line_start":549,"line_end":549,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093412,"byte_end":9093415,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093420,"byte_end":9093431,"line_start":551,"line_end":551,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093436,"byte_end":9093468,"line_start":552,"line_end":552,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093473,"byte_end":9093501,"line_start":553,"line_end":553,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093506,"byte_end":9093509,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093514,"byte_end":9093534,"line_start":555,"line_end":555,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093539,"byte_end":9093562,"line_start":556,"line_end":556,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093567,"byte_end":9093615,"line_start":557,"line_end":557,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093620,"byte_end":9093688,"line_start":558,"line_end":558,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093693,"byte_end":9093696,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093701,"byte_end":9093758,"line_start":560,"line_end":560,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093763,"byte_end":9093766,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset(&key, Duration::from_secs(10));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093771,"byte_end":9093828,"line_start":562,"line_end":562,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093833,"byte_end":9093836,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093841,"byte_end":9093902,"line_start":564,"line_end":564,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093907,"byte_end":9093914,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9093919,"byte_end":9093926,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6133},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094785,"byte_end":9094790,"line_start":598,"line_end":598,"column_start":12,"column_end":17},"name":"clear","qualname":"<DelayQueue<T>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the queue, removing all items.","sig":null,"attributes":[{"value":"/ Clears the queue, removing all items.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094052,"byte_end":9094093,"line_start":571,"line_end":571,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094098,"byte_end":9094101,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ After calling `clear`, [`poll`] will return `Ok(Ready(None))`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094106,"byte_end":9094172,"line_start":573,"line_end":573,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094177,"byte_end":9094180,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094185,"byte_end":9094251,"line_start":575,"line_end":575,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094256,"byte_end":9094259,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094264,"byte_end":9094295,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094300,"byte_end":9094303,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094308,"byte_end":9094322,"line_start":579,"line_end":579,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094327,"byte_end":9094330,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094335,"byte_end":9094346,"line_start":581,"line_end":581,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094351,"byte_end":9094383,"line_start":582,"line_end":582,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094388,"byte_end":9094416,"line_start":583,"line_end":583,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094421,"byte_end":9094424,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094429,"byte_end":9094449,"line_start":585,"line_end":585,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094454,"byte_end":9094477,"line_start":586,"line_end":586,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094482,"byte_end":9094530,"line_start":587,"line_end":587,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094535,"byte_end":9094538,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094543,"byte_end":9094601,"line_start":589,"line_end":589,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094606,"byte_end":9094609,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094614,"byte_end":9094655,"line_start":591,"line_end":591,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094660,"byte_end":9094663,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/     delay_queue.clear();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094668,"byte_end":9094696,"line_start":593,"line_end":593,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094701,"byte_end":9094704,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094709,"byte_end":9094749,"line_start":595,"line_end":595,"column_start":5,"column_end":45}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094754,"byte_end":9094761,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094766,"byte_end":9094773,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6134},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095262,"byte_end":9095270,"line_start":615,"line_end":615,"column_start":12,"column_end":20},"name":"capacity","qualname":"<DelayQueue<T>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the queue can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the queue can hold without reallocating.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9094945,"byte_end":9095020,"line_start":605,"line_end":605,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095025,"byte_end":9095028,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095033,"byte_end":9095047,"line_start":607,"line_end":607,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095052,"byte_end":9095055,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095060,"byte_end":9095071,"line_start":609,"line_end":609,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095076,"byte_end":9095108,"line_start":610,"line_end":610,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095113,"byte_end":9095116,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095121,"byte_end":9095190,"line_start":612,"line_end":612,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(delay_queue.capacity(), 10);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095195,"byte_end":9095238,"line_start":613,"line_end":613,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095243,"byte_end":9095250,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6135},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095838,"byte_end":9095841,"line_start":635,"line_end":635,"column_start":12,"column_end":15},"name":"len","qualname":"<DelayQueue<T>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements currently in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of elements currently in the queue.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095329,"byte_end":9095387,"line_start":619,"line_end":619,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095392,"byte_end":9095395,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095400,"byte_end":9095414,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095419,"byte_end":9095422,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095427,"byte_end":9095438,"line_start":623,"line_end":623,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095443,"byte_end":9095475,"line_start":624,"line_end":624,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095480,"byte_end":9095508,"line_start":625,"line_end":625,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095513,"byte_end":9095516,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095521,"byte_end":9095541,"line_start":627,"line_end":627,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095546,"byte_end":9095569,"line_start":628,"line_end":628,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095574,"byte_end":9095651,"line_start":629,"line_end":629,"column_start":5,"column_end":82}},{"value":"/     assert_eq!(delay_queue.len(), 0);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095656,"byte_end":9095697,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/     delay_queue.insert(3, Duration::from_secs(5));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095702,"byte_end":9095756,"line_start":631,"line_end":631,"column_start":5,"column_end":59}},{"value":"/     assert_eq!(delay_queue.len(), 1);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095761,"byte_end":9095802,"line_start":632,"line_end":632,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095807,"byte_end":9095814,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095819,"byte_end":9095826,"line_start":634,"line_end":634,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6136},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9097050,"byte_end":9097057,"line_start":672,"line_end":672,"column_start":12,"column_end":19},"name":"reserve","qualname":"<DelayQueue<T>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more items to be queued\n without allocating.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more items to be queued","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095895,"byte_end":9095966,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ without allocating.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095971,"byte_end":9095994,"line_start":640,"line_end":640,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9095999,"byte_end":9096002,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ `reserve` does nothing if the queue already has sufficient capacity for","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096007,"byte_end":9096082,"line_start":642,"line_end":642,"column_start":5,"column_end":80}},{"value":"/ `additional` more values. If more capacity is required, a new segment of","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096087,"byte_end":9096163,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ memory will be allocated and all existing values will be copied into it.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096168,"byte_end":9096244,"line_start":644,"line_end":644,"column_start":5,"column_end":81}},{"value":"/ As such, if the queue is already very large, a call to `reserve` can end","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096249,"byte_end":9096325,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ up being expensive.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096330,"byte_end":9096353,"line_start":646,"line_end":646,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096358,"byte_end":9096361,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ The queue may reserve more than `additional` extra space in order to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096366,"byte_end":9096438,"line_start":648,"line_end":648,"column_start":5,"column_end":77}},{"value":"/ avoid frequent reallocations.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096443,"byte_end":9096476,"line_start":649,"line_end":649,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096481,"byte_end":9096484,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096489,"byte_end":9096501,"line_start":651,"line_end":651,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096506,"byte_end":9096509,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds the maximum number of entries the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096514,"byte_end":9096586,"line_start":653,"line_end":653,"column_start":5,"column_end":77}},{"value":"/ queue can contain.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096591,"byte_end":9096613,"line_start":654,"line_end":654,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096618,"byte_end":9096621,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096626,"byte_end":9096640,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096645,"byte_end":9096648,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096653,"byte_end":9096660,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096665,"byte_end":9096697,"line_start":659,"line_end":659,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096702,"byte_end":9096730,"line_start":660,"line_end":660,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096735,"byte_end":9096738,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096743,"byte_end":9096763,"line_start":662,"line_end":662,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096768,"byte_end":9096791,"line_start":663,"line_end":663,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096796,"byte_end":9096844,"line_start":664,"line_end":664,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096849,"byte_end":9096852,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(10));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096857,"byte_end":9096918,"line_start":666,"line_end":666,"column_start":5,"column_end":66}},{"value":"/     delay_queue.reserve(10);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096923,"byte_end":9096955,"line_start":667,"line_end":667,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096960,"byte_end":9096963,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.capacity() >= 11);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9096968,"byte_end":9097014,"line_start":669,"line_end":669,"column_start":5,"column_end":51}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9097019,"byte_end":9097026,"line_start":670,"line_end":670,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9097031,"byte_end":9097038,"line_start":671,"line_end":671,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6137},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9097773,"byte_end":9097781,"line_start":696,"line_end":696,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DelayQueue<T>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no items in the queue.","sig":null,"attributes":[{"value":"/ Returns `true` if there are no items in the queue.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9097140,"byte_end":9097194,"line_start":676,"line_end":676,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9097199,"byte_end":9097202,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ Note that this function returns `false` even if all items have not yet","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9097207,"byte_end":9097281,"line_start":678,"line_end":678,"column_start":5,"column_end":79}},{"value":"/ expired and a call to `poll` will return `NotReady`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9097286,"byte_end":9097342,"line_start":679,"line_end":679,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9097347,"byte_end":9097350,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9097355,"byte_end":9097369,"line_start":681,"line_end":681,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9097374,"byte_end":9097377,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9097382,"byte_end":9097389,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9097394,"byte_end":9097426,"line_start":684,"line_end":684,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9097431,"byte_end":9097459,"line_start":685,"line_end":685,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9097464,"byte_end":9097467,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9097472,"byte_end":9097492,"line_start":687,"line_end":687,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9097497,"byte_end":9097520,"line_start":688,"line_end":688,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9097525,"byte_end":9097573,"line_start":689,"line_end":689,"column_start":5,"column_end":53}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9097578,"byte_end":9097618,"line_start":690,"line_end":690,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9097623,"byte_end":9097626,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(5));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9097631,"byte_end":9097691,"line_start":692,"line_end":692,"column_start":5,"column_end":65}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9097696,"byte_end":9097737,"line_start":693,"line_end":693,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9097742,"byte_end":9097749,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9097754,"byte_end":9097761,"line_start":695,"line_end":695,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6167},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9102444,"byte_end":9102451,"line_start":869,"line_end":869,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Expired<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9102389,"byte_end":9102432,"line_start":868,"line_end":868,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":6168},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9102560,"byte_end":9102567,"line_start":874,"line_end":874,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Expired<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9102497,"byte_end":9102548,"line_start":873,"line_end":873,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6169},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9102685,"byte_end":9102695,"line_start":879,"line_end":879,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Expired<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner value.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner value.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9102625,"byte_end":9102673,"line_start":878,"line_end":878,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":6170},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9102806,"byte_end":9102814,"line_start":884,"line_end":884,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Expired<T>>::deadline","value":"fn (&self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline that the expiration was set to.\n","sig":null,"attributes":[{"value":"/ Returns the deadline that the expiration was set to.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9102738,"byte_end":9102794,"line_start":883,"line_end":883,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":6182},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103392,"byte_end":9103403,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"delay_until","qualname":"::time::delay::delay_until","value":"fn (deadline: Instant) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103018,"byte_end":9103056,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103057,"byte_end":9103060,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103061,"byte_end":9103136,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103137,"byte_end":9103214,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103215,"byte_end":9103250,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103251,"byte_end":9103254,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103255,"byte_end":9103273,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103274,"byte_end":9103277,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103278,"byte_end":9103354,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103355,"byte_end":9103384,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":6183},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9104469,"byte_end":9104478,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"delay_for","qualname":"::time::delay::delay_for","value":"fn (duration: Duration) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103542,"byte_end":9103581,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103582,"byte_end":9103585,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `delay_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103586,"byte_end":9103661,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103662,"byte_end":9103697,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103698,"byte_end":9103701,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103702,"byte_end":9103777,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103778,"byte_end":9103855,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103856,"byte_end":9103891,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103892,"byte_end":9103895,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103896,"byte_end":9103959,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103960,"byte_end":9103963,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103964,"byte_end":9103982,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103983,"byte_end":9103986,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9103987,"byte_end":9104063,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9104064,"byte_end":9104093,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9104094,"byte_end":9104097,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9104098,"byte_end":9104112,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9104113,"byte_end":9104116,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9104117,"byte_end":9104164,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9104165,"byte_end":9104168,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9104169,"byte_end":9104176,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9104177,"byte_end":9104220,"line_start":44,"line_end":44,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9104221,"byte_end":9104224,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9104225,"byte_end":9104243,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9104244,"byte_end":9104265,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9104266,"byte_end":9104318,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9104319,"byte_end":9104359,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9104360,"byte_end":9104365,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9104366,"byte_end":9104373,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9104374,"byte_end":9104377,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9104378,"byte_end":9104419,"line_start":53,"line_end":53,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":6619},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9104738,"byte_end":9104743,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"Delay","qualname":"::time::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":6620}],"decl_id":null,"docs":" Future returned by [`delay_until`](delay_until) and\n [`delay_for`](delay_for).\n","sig":null,"attributes":[{"value":"/ Future returned by [`delay_until`](delay_until) and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9104556,"byte_end":9104611,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/ [`delay_for`](delay_for).","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9104612,"byte_end":9104641,"line_start":60,"line_end":60,"column_start":1,"column_end":30}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9104659,"byte_end":9104726,"line_start":62,"line_end":62,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6186},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9105183,"byte_end":9105191,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Delay>::deadline","value":"fn (&self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9105113,"byte_end":9105171,"line_start":76,"line_end":76,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6187},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9105395,"byte_end":9105405,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Delay>::is_elapsed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Delay` has elapsed","sig":null,"attributes":[{"value":"/ Returns `true` if the `Delay` has elapsed","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9105260,"byte_end":9105305,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9105310,"byte_end":9105313,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ A `Delay` is elapsed when the requested duration has elapsed.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9105318,"byte_end":9105383,"line_start":83,"line_end":83,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6188},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9105794,"byte_end":9105799,"line_start":95,"line_end":95,"column_start":12,"column_end":17},"name":"reset","qualname":"<Delay>::reset","value":"fn (&mut self, deadline: Instant) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Delay` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Delay` instance to a new deadline.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9105473,"byte_end":9105523,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9105528,"byte_end":9105531,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Delay`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9105536,"byte_end":9105610,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9105615,"byte_end":9105682,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9105687,"byte_end":9105690,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9105695,"byte_end":9105763,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9105768,"byte_end":9105782,"line_start":94,"line_end":94,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":6676},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9139269,"byte_end":9139274,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9138156,"byte_end":9138207,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9138208,"byte_end":9138211,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9138212,"byte_end":9138273,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9138274,"byte_end":9138277,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9138278,"byte_end":9138352,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9138353,"byte_end":9138432,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9138433,"byte_end":9138508,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9138509,"byte_end":9138584,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9138585,"byte_end":9138613,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9138614,"byte_end":9138617,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9138618,"byte_end":9138695,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding delays.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9138696,"byte_end":9138774,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9138775,"byte_end":9138851,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9138852,"byte_end":9138932,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9138933,"byte_end":9139010,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9139011,"byte_end":9139092,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9139093,"byte_end":9139175,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9139176,"byte_end":9139179,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9139180,"byte_end":9139240,"line_start":23,"line_end":23,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":6378},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9139425,"byte_end":9139433,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"fn () -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9139362,"byte_end":9139413,"line_start":34,"line_end":34,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6379},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9139565,"byte_end":9139576,"line_start":40,"line_end":40,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9139482,"byte_end":9139553,"line_start":39,"line_end":39,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":6380},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9139764,"byte_end":9139775,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"fn () -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9139698,"byte_end":9139752,"line_start":47,"line_end":47,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6381},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9139912,"byte_end":9139926,"line_start":53,"line_end":53,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9139826,"byte_end":9139900,"line_start":52,"line_end":52,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":6688},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9140766,"byte_end":9140773,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":6689}],"decl_id":null,"docs":" A measurement of the system clock, useful for talking to\n external entities like the file system or other processes.\n","sig":null,"attributes":[{"value":"/ A measurement of the system clock, useful for talking to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9140570,"byte_end":9140630,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/ external entities like the file system or other processes.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9140631,"byte_end":9140693,"line_start":8,"line_end":8,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6392},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9141020,"byte_end":9141023,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"fn () -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9140827,"byte_end":9140873,"line_start":15,"line_end":15,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9140878,"byte_end":9140881,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9140886,"byte_end":9140900,"line_start":17,"line_end":17,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9140905,"byte_end":9140908,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9140913,"byte_end":9140920,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9140925,"byte_end":9140954,"line_start":20,"line_end":20,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9140959,"byte_end":9140962,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9140967,"byte_end":9140996,"line_start":22,"line_end":22,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9141001,"byte_end":9141008,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6393},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9141149,"byte_end":9141157,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"fn (std: std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9141073,"byte_end":9141137,"line_start":28,"line_end":28,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":6394},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9141293,"byte_end":9141301,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"fn (self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9141231,"byte_end":9141281,"line_start":33,"line_end":33,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6395},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9141545,"byte_end":9141559,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"fn (&self, earlier: Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9141360,"byte_end":9141432,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9141437,"byte_end":9141440,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9141445,"byte_end":9141457,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9141462,"byte_end":9141465,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9141470,"byte_end":9141533,"line_start":42,"line_end":42,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6396},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9142250,"byte_end":9142272,"line_start":64,"line_end":64,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"fn (&self, earlier: Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9141655,"byte_end":9141730,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9141735,"byte_end":9141783,"line_start":48,"line_end":48,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9141788,"byte_end":9141791,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9141796,"byte_end":9141810,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9141815,"byte_end":9141818,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9141823,"byte_end":9141830,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9141835,"byte_end":9141887,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9141892,"byte_end":9141895,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9141900,"byte_end":9141918,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9141923,"byte_end":9141944,"line_start":56,"line_end":56,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9141949,"byte_end":9141982,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9141987,"byte_end":9142032,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9142037,"byte_end":9142074,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9142079,"byte_end":9142141,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9142146,"byte_end":9142216,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9142221,"byte_end":9142226,"line_start":62,"line_end":62,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9142231,"byte_end":9142238,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6397},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9142995,"byte_end":9143020,"line_start":85,"line_end":85,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"fn (&self, earlier: Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9142384,"byte_end":9142459,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9142464,"byte_end":9142523,"line_start":69,"line_end":69,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9142528,"byte_end":9142531,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9142536,"byte_end":9142550,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9142555,"byte_end":9142558,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9142563,"byte_end":9142570,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9142575,"byte_end":9142627,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9142632,"byte_end":9142635,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9142640,"byte_end":9142658,"line_start":76,"line_end":76,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9142663,"byte_end":9142684,"line_start":77,"line_end":77,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9142689,"byte_end":9142722,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9142727,"byte_end":9142772,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9142777,"byte_end":9142814,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9142819,"byte_end":9142884,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9142889,"byte_end":9142961,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9142966,"byte_end":9142971,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9142976,"byte_end":9142983,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6398},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9143791,"byte_end":9143798,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"fn (&self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9143127,"byte_end":9143197,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9143202,"byte_end":9143205,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9143210,"byte_end":9143222,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9143227,"byte_end":9143230,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9143235,"byte_end":9143303,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9143308,"byte_end":9143374,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9143379,"byte_end":9143406,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9143411,"byte_end":9143414,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9143419,"byte_end":9143433,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9143438,"byte_end":9143441,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9143446,"byte_end":9143453,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9143458,"byte_end":9143510,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9143515,"byte_end":9143518,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9143523,"byte_end":9143541,"line_start":102,"line_end":102,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9143546,"byte_end":9143567,"line_start":103,"line_end":103,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9143572,"byte_end":9143609,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9143614,"byte_end":9143662,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/     delay_for(three_secs).await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9143667,"byte_end":9143703,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9143708,"byte_end":9143757,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9143762,"byte_end":9143767,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9143772,"byte_end":9143779,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6399},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9144079,"byte_end":9144090,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"fn (&self, duration: Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9143862,"byte_end":9143937,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9143942,"byte_end":9144013,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9144018,"byte_end":9144067,"line_start":116,"line_end":116,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6400},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9144429,"byte_end":9144440,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"fn (&self, duration: Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9144212,"byte_end":9144287,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9144292,"byte_end":9144363,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9144368,"byte_end":9144417,"line_start":123,"line_end":123,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":6436},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147904,"byte_end":9147912,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"fn (period: Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146162,"byte_end":9146239,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146240,"byte_end":9146271,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146272,"byte_end":9146275,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146276,"byte_end":9146356,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146357,"byte_end":9146396,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146397,"byte_end":9146400,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146401,"byte_end":9146474,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146475,"byte_end":9146478,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146479,"byte_end":9146491,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146492,"byte_end":9146495,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146496,"byte_end":9146541,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146542,"byte_end":9146545,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146546,"byte_end":9146560,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146561,"byte_end":9146564,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146565,"byte_end":9146572,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146573,"byte_end":9146611,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146612,"byte_end":9146615,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146616,"byte_end":9146634,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146635,"byte_end":9146656,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146657,"byte_end":9146726,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146727,"byte_end":9146730,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146731,"byte_end":9146761,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146762,"byte_end":9146792,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146793,"byte_end":9146823,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146824,"byte_end":9146827,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146828,"byte_end":9146871,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146872,"byte_end":9146877,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146878,"byte_end":9146885,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146886,"byte_end":9146889,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146890,"byte_end":9146964,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146965,"byte_end":9146968,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`delay_for`] is that an `interval`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9146969,"byte_end":9147046,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147047,"byte_end":9147122,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147123,"byte_end":9147199,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147200,"byte_end":9147261,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147262,"byte_end":9147265,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147266,"byte_end":9147344,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147345,"byte_end":9147415,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147416,"byte_end":9147428,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147429,"byte_end":9147432,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147433,"byte_end":9147440,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147441,"byte_end":9147461,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147462,"byte_end":9147465,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147466,"byte_end":9147507,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147508,"byte_end":9147534,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147535,"byte_end":9147594,"line_start":53,"line_end":53,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147595,"byte_end":9147600,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147601,"byte_end":9147604,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147605,"byte_end":9147623,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147624,"byte_end":9147645,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147646,"byte_end":9147718,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147719,"byte_end":9147743,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147744,"byte_end":9147778,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147779,"byte_end":9147824,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147825,"byte_end":9147834,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147835,"byte_end":9147840,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147841,"byte_end":9147848,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147849,"byte_end":9147852,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`delay_for`]: crate::time::delay_for()","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9147853,"byte_end":9147896,"line_start":66,"line_end":66,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":6437},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148798,"byte_end":9148809,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"fn (start: Instant, period: Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `at`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148062,"byte_end":9148135,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `at`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148136,"byte_end":9148170,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148171,"byte_end":9148174,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148175,"byte_end":9148255,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148256,"byte_end":9148295,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148296,"byte_end":9148299,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148300,"byte_end":9148312,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148313,"byte_end":9148316,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148317,"byte_end":9148362,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148363,"byte_end":9148366,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148367,"byte_end":9148381,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148382,"byte_end":9148385,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148386,"byte_end":9148393,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148394,"byte_end":9148448,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148449,"byte_end":9148452,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148453,"byte_end":9148471,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148472,"byte_end":9148493,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148494,"byte_end":9148557,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148558,"byte_end":9148631,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148632,"byte_end":9148635,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148636,"byte_end":9148666,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148667,"byte_end":9148697,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148698,"byte_end":9148728,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148729,"byte_end":9148732,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148733,"byte_end":9148776,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148777,"byte_end":9148782,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9148783,"byte_end":9148790,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6711},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9149115,"byte_end":9149123,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":6712},{"krate":0,"index":6713}],"decl_id":null,"docs":" Stream returned by [`interval`](interval) and [`interval_at`](interval_at).\n","sig":null,"attributes":[{"value":"/ Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9149007,"byte_end":9149086,"line_start":109,"line_end":109,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":6439},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9149368,"byte_end":9149377,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6440},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9150469,"byte_end":9150473,"line_start":158,"line_end":158,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"fn (&mut self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9149864,"byte_end":9149933,"line_start":137,"line_end":137,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9149938,"byte_end":9149941,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9149946,"byte_end":9149960,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9149965,"byte_end":9149968,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9149973,"byte_end":9149980,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9149985,"byte_end":9150005,"line_start":142,"line_end":142,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9150010,"byte_end":9150013,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9150018,"byte_end":9150046,"line_start":144,"line_end":144,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9150051,"byte_end":9150054,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9150059,"byte_end":9150077,"line_start":146,"line_end":146,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9150082,"byte_end":9150103,"line_start":147,"line_end":147,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9150108,"byte_end":9150177,"line_start":148,"line_end":148,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9150182,"byte_end":9150185,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9150190,"byte_end":9150220,"line_start":150,"line_end":150,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9150225,"byte_end":9150255,"line_start":151,"line_end":151,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9150260,"byte_end":9150290,"line_start":152,"line_end":152,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9150295,"byte_end":9150298,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9150303,"byte_end":9150346,"line_start":154,"line_end":154,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9150351,"byte_end":9150356,"line_start":155,"line_end":155,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9150361,"byte_end":9150368,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9150373,"byte_end":9150413,"line_start":157,"line_end":157,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":6464},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152155,"byte_end":9152162,"line_start":49,"line_end":49,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"fn <T> (duration: Duration, future: T) -> Timeout<T>","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151140,"byte_end":9151217,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151218,"byte_end":9151221,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151222,"byte_end":9151301,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151302,"byte_end":9151374,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151375,"byte_end":9151388,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151389,"byte_end":9151392,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151393,"byte_end":9151410,"line_start":21,"line_end":21,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151411,"byte_end":9151414,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151415,"byte_end":9151493,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151494,"byte_end":9151524,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151525,"byte_end":9151528,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151529,"byte_end":9151609,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151610,"byte_end":9151637,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151638,"byte_end":9151641,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151642,"byte_end":9151656,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151657,"byte_end":9151660,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151661,"byte_end":9151721,"line_start":31,"line_end":31,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151722,"byte_end":9151725,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151726,"byte_end":9151737,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151738,"byte_end":9151767,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151768,"byte_end":9151797,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151798,"byte_end":9151801,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151802,"byte_end":9151830,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151831,"byte_end":9151834,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151835,"byte_end":9151857,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151858,"byte_end":9151896,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151897,"byte_end":9151924,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151925,"byte_end":9151928,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9151929,"byte_end":9152002,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152003,"byte_end":9152069,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152070,"byte_end":9152125,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152126,"byte_end":9152131,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152132,"byte_end":9152139,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152140,"byte_end":9152147,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6466},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9153384,"byte_end":9153394,"line_start":91,"line_end":91,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"fn <T> (deadline: Instant, future: T) -> Timeout<T>","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152353,"byte_end":9152425,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152426,"byte_end":9152429,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152430,"byte_end":9152507,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152508,"byte_end":9152563,"line_start":60,"line_end":60,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152564,"byte_end":9152567,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152568,"byte_end":9152585,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152586,"byte_end":9152589,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152590,"byte_end":9152668,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152669,"byte_end":9152699,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152700,"byte_end":9152703,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152704,"byte_end":9152784,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152785,"byte_end":9152812,"line_start":68,"line_end":68,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152813,"byte_end":9152816,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152817,"byte_end":9152831,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152832,"byte_end":9152835,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152836,"byte_end":9152896,"line_start":72,"line_end":72,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152897,"byte_end":9152900,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152901,"byte_end":9152912,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152913,"byte_end":9152956,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152957,"byte_end":9152986,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152987,"byte_end":9152990,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9152991,"byte_end":9153019,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9153020,"byte_end":9153023,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9153024,"byte_end":9153046,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9153047,"byte_end":9153085,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9153086,"byte_end":9153113,"line_start":82,"line_end":82,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9153114,"byte_end":9153117,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9153118,"byte_end":9153196,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9153197,"byte_end":9153211,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9153212,"byte_end":9153298,"line_start":86,"line_end":86,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9153299,"byte_end":9153354,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9153355,"byte_end":9153360,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9153361,"byte_end":9153368,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9153369,"byte_end":9153376,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7117},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9153769,"byte_end":9153776,"line_start":107,"line_end":107,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":7119},{"krate":0,"index":7120}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8156368,"byte_end":8156377,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6716},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9153933,"byte_end":9153940,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::timeout::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9153861,"byte_end":9153893,"line_start":115,"line_end":115,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":6473},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9154291,"byte_end":9154298,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9154218,"byte_end":9154279,"line_start":132,"line_end":132,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6474},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9154426,"byte_end":9154433,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9154345,"byte_end":9154414,"line_start":137,"line_end":137,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6475},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9154562,"byte_end":9154572,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9154492,"byte_end":9154550,"line_start":142,"line_end":142,"column_start":5,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":6738},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9172705,"byte_end":9172713,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"throttle","qualname":"::time::throttle::throttle","value":"fn <T> (duration: Duration, stream: T) -> Throttle<T>","parent":null,"children":[],"decl_id":null,"docs":" Slows down a stream by enforcing a delay between items.\n They will be produced not more often than the specified interval.","sig":null,"attributes":[{"value":"/ Slows down a stream by enforcing a delay between items.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9172131,"byte_end":9172190,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ They will be produced not more often than the specified interval.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9172191,"byte_end":9172260,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9172261,"byte_end":9172264,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9172265,"byte_end":9172278,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9172279,"byte_end":9172282,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Create a throttled stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9172283,"byte_end":9172313,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9172314,"byte_end":9172332,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9172333,"byte_end":9172361,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9172362,"byte_end":9172395,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ use tokio::time::throttle;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9172396,"byte_end":9172426,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9172427,"byte_end":9172430,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9172431,"byte_end":9172453,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/ let mut item_stream = throttle(Duration::from_secs(2), futures::stream::repeat(\"one\"));","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9172454,"byte_end":9172545,"line_start":25,"line_end":25,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9172546,"byte_end":9172549,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9172550,"byte_end":9172560,"line_start":27,"line_end":27,"column_start":1,"column_end":11}},{"value":"/     // The string will be produced at most every 2 seconds","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9172561,"byte_end":9172623,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/     println!(\"{:?}\", item_stream.next().await);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9172624,"byte_end":9172675,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9172676,"byte_end":9172681,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9172682,"byte_end":9172689,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9172690,"byte_end":9172697,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7071},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9173208,"byte_end":9173216,"line_start":55,"line_end":55,"column_start":16,"column_end":24},"name":"Throttle","qualname":"::time::throttle::Throttle","value":"Throttle {  }","parent":null,"children":[{"krate":0,"index":7073},{"krate":0,"index":7074},{"krate":0,"index":7075},{"krate":0,"index":7076}],"decl_id":null,"docs":" Stream for the [`throttle`](throttle) function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8156368,"byte_end":8156377,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6742},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9173683,"byte_end":9173690,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Throttle<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9173576,"byte_end":9173649,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9173654,"byte_end":9173671,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":6743},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9173999,"byte_end":9174006,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Throttle<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this combinator\n is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this combinator","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9173738,"byte_end":9173816,"line_start":77,"line_end":77,"column_start":5,"column_end":83}},{"value":"/ is pulling from.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9173821,"byte_end":9173841,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9173846,"byte_end":9173849,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the stream","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9173854,"byte_end":9173934,"line_start":80,"line_end":80,"column_start":5,"column_end":85}},{"value":"/ which may otherwise confuse this combinator.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9173939,"byte_end":9173987,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":6744},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9174301,"byte_end":9174311,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Throttle<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9174066,"byte_end":9174128,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9174133,"byte_end":9174136,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so care","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9174141,"byte_end":9174218,"line_start":88,"line_end":88,"column_start":5,"column_end":82}},{"value":"/ should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9174223,"byte_end":9174289,"line_start":89,"line_end":89,"column_start":5,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":6522},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9171264,"byte_end":9171269,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Owned","qualname":"::time::wheel::stack::Stack::Owned","value":"type Owned: Borrow<Self::Borrowed>;","parent":{"krate":0,"index":6521},"children":[],"decl_id":null,"docs":" Type of the item stored in the stack\n","sig":null,"attributes":[{"value":"/ Type of the item stored in the stack","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9171214,"byte_end":9171254,"line_start":5,"line_end":5,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":6523},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9171327,"byte_end":9171335,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Borrowed","qualname":"::time::wheel::stack::Stack::Borrowed","value":"type Borrowed;","parent":{"krate":0,"index":6521},"children":[],"decl_id":null,"docs":" Borrowed item\n","sig":null,"attributes":[{"value":"/ Borrowed item","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9171300,"byte_end":9171317,"line_start":8,"line_end":8,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":6524},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9171424,"byte_end":9171429,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Store","qualname":"::time::wheel::stack::Stack::Store","value":"type Store;","parent":{"krate":0,"index":6521},"children":[],"decl_id":null,"docs":" Item storage, this allows a slab to be used instead of just the heap\n","sig":null,"attributes":[{"value":"/ Item storage, this allows a slab to be used instead of just the heap","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9171342,"byte_end":9171414,"line_start":11,"line_end":11,"column_start":5,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":769},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181032,"byte_end":181038,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":768},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180941,"byte_end":180970,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180975,"byte_end":180978,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180983,"byte_end":181022,"line_start":39,"line_end":39,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":770},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181068,"byte_end":181074,"line_start":43,"line_end":43,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":768},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181045,"byte_end":181058,"line_start":42,"line_end":42,"column_start":5,"column_end":18}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":29721,"byte_end":29730,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":29746,"byte_end":29755,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":30105,"byte_end":30110,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31866,"byte_end":31875,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32038,"byte_end":32047,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":33234,"byte_end":33243,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":33997,"byte_end":34003,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34217,"byte_end":34223,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34365,"byte_end":34371,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34902,"byte_end":34907,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34934,"byte_end":34939,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/try_join.rs","byte_start":36136,"byte_end":36144,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49833,"byte_end":49836,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49996,"byte_end":49999,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":50628,"byte_end":50634,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":56598,"byte_end":56601,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":56744,"byte_end":56747,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":57543,"byte_end":57549,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59975,"byte_end":59978,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":60121,"byte_end":60124,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":60578,"byte_end":60584,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":68489,"byte_end":68492,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":68640,"byte_end":68643,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":69212,"byte_end":69215,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":69723,"byte_end":69729,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":70242,"byte_end":70248,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":70764,"byte_end":70770,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":71281,"byte_end":71287,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8346175,"byte_end":8346186,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":993},{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8346945,"byte_end":8346956,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8347163,"byte_end":8347174,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8349796,"byte_end":8349807,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8335544,"byte_end":8335550,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8338411,"byte_end":8338417,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8338785,"byte_end":8338791,"line_start":186,"line_end":186,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8338927,"byte_end":8338933,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8340076,"byte_end":8340082,"line_start":225,"line_end":225,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8340160,"byte_end":8340166,"line_start":231,"line_end":231,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8340301,"byte_end":8340306,"line_start":239,"line_end":239,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8341850,"byte_end":8341859,"line_start":293,"line_end":293,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8356365,"byte_end":8356376,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8364167,"byte_end":8364178,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8364671,"byte_end":8364682,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8365763,"byte_end":8365774,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8365947,"byte_end":8365958,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8368106,"byte_end":8368118,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":1133},{"krate":0,"index":1135},{"krate":0,"index":1137},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1142},{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8378988,"byte_end":8379000,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8379025,"byte_end":8379037,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8379056,"byte_end":8379068,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8380850,"byte_end":8380858,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1217},{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8381775,"byte_end":8381784,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8382034,"byte_end":8382042,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8382597,"byte_end":8382606,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8383555,"byte_end":8383560,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8383953,"byte_end":8383958,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8384211,"byte_end":8384216,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8384339,"byte_end":8384347,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8384384,"byte_end":8384393,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8384430,"byte_end":8384438,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8384475,"byte_end":8384484,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8384527,"byte_end":8384535,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8384703,"byte_end":8384712,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":8385402,"byte_end":8385406,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1275},{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8397356,"byte_end":8397357,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8436642,"byte_end":8436643,"line_start":1112,"line_end":1112,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8438401,"byte_end":8438402,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8473679,"byte_end":8473680,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8475096,"byte_end":8475105,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8477284,"byte_end":8477293,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1466},{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8478269,"byte_end":8478278,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1470},{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8479109,"byte_end":8479118,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1477},{"krate":0,"index":1478}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8479834,"byte_end":8479843,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8481350,"byte_end":8481359,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8483196,"byte_end":8483205,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8483347,"byte_end":8483356,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1511}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8484068,"byte_end":8484077,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8484607,"byte_end":8484616,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1519},{"krate":0,"index":1520}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8485095,"byte_end":8485104,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1523},{"krate":0,"index":1524}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8487058,"byte_end":8487067,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8489345,"byte_end":8489354,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8490244,"byte_end":8490253,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1559},{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8490735,"byte_end":8490744,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1563},{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8491031,"byte_end":8491040,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8492209,"byte_end":8492214,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8493354,"byte_end":8493359,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1593}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8493638,"byte_end":8493643,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1597},{"krate":0,"index":1598}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8494466,"byte_end":8494471,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1602},{"krate":0,"index":1603}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":8497514,"byte_end":8497518,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1617},{"krate":0,"index":1618}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8500628,"byte_end":8500633,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1633},{"krate":0,"index":1634}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8500962,"byte_end":8500967,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1636},{"krate":0,"index":1637}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8501200,"byte_end":8501205,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1639}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/flush.rs","byte_start":8502026,"byte_end":8502031,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1655},{"krate":0,"index":1656}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8503211,"byte_end":8503216,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1671},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8504468,"byte_end":8504473,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1681}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8505220,"byte_end":8505225,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1684},{"krate":0,"index":1685}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read.rs","byte_start":8506623,"byte_end":8506627,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1701},{"krate":0,"index":1702}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_buf.rs","byte_start":8507688,"byte_end":8507695,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1719},{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_exact.rs","byte_start":8509060,"byte_end":8509069,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1736},{"krate":0,"index":1737}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_line.rs","byte_start":8516604,"byte_end":8516612,"line_start":85,"line_end":85,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1770},{"krate":0,"index":1771}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8517838,"byte_end":8517843,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1789}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8519519,"byte_end":8519528,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1794},{"krate":0,"index":1795}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_string.rs","byte_start":8521592,"byte_end":8521604,"line_start":58,"line_end":58,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1814},{"krate":0,"index":1815}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","byte_start":8524256,"byte_end":8524265,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1832},{"krate":0,"index":1833}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/repeat.rs","byte_start":8526099,"byte_end":8526105,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1842},{"krate":0,"index":1843}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/shutdown.rs","byte_start":8527227,"byte_end":8527235,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1859},{"krate":0,"index":1860}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8529068,"byte_end":8529072,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8529582,"byte_end":8529586,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1874}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8530551,"byte_end":8530556,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1892}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8531295,"byte_end":8531300,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8532079,"byte_end":8532084,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1902},{"krate":0,"index":1903}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8545623,"byte_end":8545635,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2391},{"krate":0,"index":2392}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8546140,"byte_end":8546152,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2399}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8547691,"byte_end":8547703,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2403},{"krate":0,"index":2404}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8533252,"byte_end":8533256,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1926},{"krate":0,"index":1927}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8534884,"byte_end":8534888,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1930},{"krate":0,"index":1931}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8535545,"byte_end":8535549,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1934},{"krate":0,"index":1935}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write.rs","byte_start":8537106,"byte_end":8537111,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1950},{"krate":0,"index":1951}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_all.rs","byte_start":8537904,"byte_end":8537912,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1966},{"krate":0,"index":1967}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_buf.rs","byte_start":8539420,"byte_end":8539428,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1984},{"krate":0,"index":1985}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74388,"byte_end":74398,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74438,"byte_end":74448,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74729,"byte_end":74741,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74781,"byte_end":74793,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":75053,"byte_end":75065,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":75105,"byte_end":75117,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8551624,"byte_end":8551635,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2600},{"krate":0,"index":2605},{"krate":0,"index":2606},{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2613},{"krate":0,"index":2614},{"krate":0,"index":2615},{"krate":0,"index":2616},{"krate":0,"index":2617}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8562339,"byte_end":8562350,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2619},{"krate":0,"index":2620}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8562665,"byte_end":8562676,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2622},{"krate":0,"index":2623}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8563116,"byte_end":8563127,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2625},{"krate":0,"index":2626}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8563453,"byte_end":8563464,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2628}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8563680,"byte_end":8563691,"line_start":447,"line_end":447,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2633}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8564523,"byte_end":8564531,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2645},{"krate":0,"index":2646}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8565169,"byte_end":8565177,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2648},{"krate":0,"index":2649}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8567327,"byte_end":8567335,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2667},{"krate":0,"index":2668}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8569790,"byte_end":8569798,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2673},{"krate":0,"index":2674}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8570118,"byte_end":8570127,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2679},{"krate":0,"index":2680}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8570940,"byte_end":8570948,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2682}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8571042,"byte_end":8571051,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2684}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8574114,"byte_end":8574126,"line_start":91,"line_end":91,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2709}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8574329,"byte_end":8574341,"line_start":100,"line_end":100,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8574351,"byte_end":8574364,"line_start":102,"line_end":102,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2714}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8577198,"byte_end":8577211,"line_start":189,"line_end":189,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2719},{"krate":0,"index":2720}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8577516,"byte_end":8577530,"line_start":203,"line_end":203,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2722},{"krate":0,"index":2723}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8578082,"byte_end":8578096,"line_start":220,"line_end":220,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2725}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8578256,"byte_end":8578270,"line_start":228,"line_end":228,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2730},{"krate":0,"index":2731}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8579091,"byte_end":8579104,"line_start":257,"line_end":257,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2733}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8579200,"byte_end":8579214,"line_start":263,"line_end":263,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2735}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8581349,"byte_end":8581358,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2774},{"krate":0,"index":2779},{"krate":0,"index":2783},{"krate":0,"index":2784},{"krate":0,"index":2785},{"krate":0,"index":2789},{"krate":0,"index":2790},{"krate":0,"index":2791},{"krate":0,"index":2792},{"krate":0,"index":2793},{"krate":0,"index":2797},{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2801},{"krate":0,"index":2802},{"krate":0,"index":2803},{"krate":0,"index":2804},{"krate":0,"index":2805},{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2808},{"krate":0,"index":2809},{"krate":0,"index":2810},{"krate":0,"index":2811},{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2814}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8606164,"byte_end":8606173,"line_start":834,"line_end":834,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2822},{"krate":0,"index":2823}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8606609,"byte_end":8606618,"line_start":848,"line_end":848,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2825},{"krate":0,"index":2826}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8606971,"byte_end":8606980,"line_start":862,"line_end":862,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2828},{"krate":0,"index":2829}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8607294,"byte_end":8607303,"line_start":876,"line_end":876,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2834},{"krate":0,"index":2835}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8608047,"byte_end":8608056,"line_start":905,"line_end":905,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2837}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8608270,"byte_end":8608279,"line_start":916,"line_end":916,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2842}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8609285,"byte_end":8609294,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2906},{"krate":0,"index":2911},{"krate":0,"index":2912},{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":2915},{"krate":0,"index":2916},{"krate":0,"index":2921},{"krate":0,"index":2925},{"krate":0,"index":2926},{"krate":0,"index":2930},{"krate":0,"index":2931},{"krate":0,"index":2936},{"krate":0,"index":2937},{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2943},{"krate":0,"index":2944},{"krate":0,"index":2945},{"krate":0,"index":2946},{"krate":0,"index":2947},{"krate":0,"index":2948},{"krate":0,"index":2949},{"krate":0,"index":2950},{"krate":0,"index":2951},{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":2955}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8622850,"byte_end":8622859,"line_start":369,"line_end":369,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2957},{"krate":0,"index":2958}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8623295,"byte_end":8623304,"line_start":383,"line_end":383,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2960},{"krate":0,"index":2961}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8623624,"byte_end":8623633,"line_start":395,"line_end":395,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2963}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8623852,"byte_end":8623861,"line_start":406,"line_end":406,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2968}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8625942,"byte_end":8625954,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2980}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8626157,"byte_end":8626169,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8626696,"byte_end":8626704,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2984},{"krate":0,"index":2985},{"krate":0,"index":2989}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8628336,"byte_end":8628344,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2999}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8629664,"byte_end":8629672,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3004}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8629763,"byte_end":8629771,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3006}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8630587,"byte_end":8630599,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3049},{"krate":0,"index":3051},{"krate":0,"index":3052},{"krate":0,"index":3053},{"krate":0,"index":3054},{"krate":0,"index":3055},{"krate":0,"index":3057},{"krate":0,"index":3061},{"krate":0,"index":3062},{"krate":0,"index":3066},{"krate":0,"index":3067},{"krate":0,"index":3072},{"krate":0,"index":3073},{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3081}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8637222,"byte_end":8637234,"line_start":206,"line_end":206,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3083},{"krate":0,"index":3084}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8637676,"byte_end":8637688,"line_start":220,"line_end":220,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3086},{"krate":0,"index":3087}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8638017,"byte_end":8638029,"line_start":232,"line_end":232,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3089}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8638154,"byte_end":8638166,"line_start":238,"line_end":238,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3091}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8638524,"byte_end":8638532,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3102},{"krate":0,"index":3103}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8639264,"byte_end":8639272,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3105},{"krate":0,"index":3106}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8641399,"byte_end":8641411,"line_start":54,"line_end":54,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3129},{"krate":0,"index":3131},{"krate":0,"index":3132},{"krate":0,"index":3133},{"krate":0,"index":3134},{"krate":0,"index":3138},{"krate":0,"index":3139},{"krate":0,"index":3140}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645915,"byte_end":8645927,"line_start":180,"line_end":180,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3142},{"krate":0,"index":3143}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8646243,"byte_end":8646255,"line_start":192,"line_end":192,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3145},{"krate":0,"index":3146}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8646697,"byte_end":8646709,"line_start":206,"line_end":206,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3148},{"krate":0,"index":3149}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8647029,"byte_end":8647041,"line_start":218,"line_end":218,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3151}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8647166,"byte_end":8647178,"line_start":224,"line_end":224,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3153}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8648170,"byte_end":8648178,"line_start":32,"line_end":32,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3169},{"krate":0,"index":3170}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8648498,"byte_end":8648507,"line_start":46,"line_end":46,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3172},{"krate":0,"index":3173},{"krate":0,"index":3174}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8648991,"byte_end":8648999,"line_start":64,"line_end":64,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3176}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8649095,"byte_end":8649104,"line_start":70,"line_end":70,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3178}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8650042,"byte_end":8650052,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3215},{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3222},{"krate":0,"index":3223},{"krate":0,"index":3224},{"krate":0,"index":3225},{"krate":0,"index":3226},{"krate":0,"index":3227},{"krate":0,"index":3228}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8653385,"byte_end":8653395,"line_start":119,"line_end":119,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3230},{"krate":0,"index":3231}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8653833,"byte_end":8653843,"line_start":133,"line_end":133,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3233},{"krate":0,"index":3234}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8654156,"byte_end":8654166,"line_start":145,"line_end":145,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3236},{"krate":0,"index":3237}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8654480,"byte_end":8654490,"line_start":159,"line_end":159,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3239},{"krate":0,"index":3240},{"krate":0,"index":3241}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8654977,"byte_end":8654987,"line_start":178,"line_end":178,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3243},{"krate":0,"index":3244}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8656504,"byte_end":8656514,"line_start":223,"line_end":223,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3246}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8656639,"byte_end":8656649,"line_start":229,"line_end":229,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3248}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84289,"byte_end":84298,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84472,"byte_end":84481,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84630,"byte_end":84639,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":84983,"byte_end":84992,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85017,"byte_end":85026,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85036,"byte_end":85045,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85531,"byte_end":85540,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85825,"byte_end":85834,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86175,"byte_end":86184,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86209,"byte_end":86218,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86228,"byte_end":86237,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86416,"byte_end":86425,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86710,"byte_end":86719,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88834,"byte_end":88842,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88867,"byte_end":88875,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88885,"byte_end":88893,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":89068,"byte_end":89076,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":89360,"byte_end":89368,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89708,"byte_end":89719,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89744,"byte_end":89755,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89765,"byte_end":89776,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90459,"byte_end":90470,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90760,"byte_end":90771,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90935,"byte_end":90946,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/unsafe_cell.rs","byte_start":91134,"byte_end":91144,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":8661006,"byte_end":8661012,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3335},{"krate":0,"index":3336},{"krate":0,"index":3337},{"krate":0,"index":3338},{"krate":0,"index":3339}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":8661818,"byte_end":8661824,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3343}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":8662038,"byte_end":8662044,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3347}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96248,"byte_end":96258,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96523,"byte_end":96533,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96992,"byte_end":96997,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":101722,"byte_end":101732,"line_start":193,"line_end":193,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":101841,"byte_end":101853,"line_start":201,"line_end":201,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":102240,"byte_end":102256,"line_start":220,"line_end":220,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3377},{"krate":0,"index":3378},{"krate":0,"index":3380}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103103,"byte_end":103119,"line_start":245,"line_end":245,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":3388},{"krate":0,"index":3389},{"krate":0,"index":3391}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103660,"byte_end":103672,"line_start":265,"line_end":265,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3394}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103884,"byte_end":103889,"line_start":274,"line_end":274,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3396},{"krate":0,"index":3397}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":95350,"byte_end":95353,"line_start":108,"line_end":108,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":95442,"byte_end":95445,"line_start":114,"line_end":114,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/context.rs","byte_start":126539,"byte_end":126548,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8664170,"byte_end":8664184,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3468},{"krate":0,"index":3469},{"krate":0,"index":3470},{"krate":0,"index":3472}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8667723,"byte_end":8667728,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3490}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8668415,"byte_end":8668429,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3494}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8669316,"byte_end":8669330,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3498}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8669496,"byte_end":8669503,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3500},{"krate":0,"index":3502}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8669961,"byte_end":8669968,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3504}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8670136,"byte_end":8670139,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3506},{"krate":0,"index":3508},{"krate":0,"index":3511}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8671237,"byte_end":8671243,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3514},{"krate":0,"index":3515}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8678926,"byte_end":8678932,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8678957,"byte_end":8678963,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8679322,"byte_end":8679326,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3571}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8680104,"byte_end":8680108,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3575},{"krate":0,"index":3577},{"krate":0,"index":3579},{"krate":0,"index":3581},{"krate":0,"index":3583},{"krate":0,"index":3585},{"krate":0,"index":3588},{"krate":0,"index":3590},{"krate":0,"index":3592}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8686490,"byte_end":8686499,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3609},{"krate":0,"index":3610},{"krate":0,"index":3611},{"krate":0,"index":3612},{"krate":0,"index":3613},{"krate":0,"index":3614},{"krate":0,"index":3615},{"krate":0,"index":3616}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8689578,"byte_end":8689587,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3618}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8689830,"byte_end":8689839,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3620}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8690116,"byte_end":8690125,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8690159,"byte_end":8690164,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3623}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":8690842,"byte_end":8690849,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3651},{"krate":0,"index":3652},{"krate":0,"index":3653},{"krate":0,"index":3654}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":8691326,"byte_end":8691333,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3658},{"krate":0,"index":3669},{"krate":0,"index":3673},{"krate":0,"index":3676},{"krate":0,"index":3679},{"krate":0,"index":3680},{"krate":0,"index":3681},{"krate":0,"index":3682},{"krate":0,"index":3683},{"krate":0,"index":3684},{"krate":0,"index":3686},{"krate":0,"index":3687},{"krate":0,"index":3688},{"krate":0,"index":3690}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":8693504,"byte_end":8693509,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3668}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8705813,"byte_end":8705823,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8705860,"byte_end":8705870,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8705886,"byte_end":8705896,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3707}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8706072,"byte_end":8706082,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8706109,"byte_end":8706119,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3712},{"krate":0,"index":3713}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8707345,"byte_end":8707355,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3716}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8707621,"byte_end":8707631,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3719}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":8708878,"byte_end":8708885,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3745},{"krate":0,"index":3748},{"krate":0,"index":3749},{"krate":0,"index":3750},{"krate":0,"index":3751},{"krate":0,"index":3752},{"krate":0,"index":3753},{"krate":0,"index":3754}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":8710416,"byte_end":8710423,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3756}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":8710513,"byte_end":8710520,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8713202,"byte_end":8713207,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3798},{"krate":0,"index":3799},{"krate":0,"index":3800},{"krate":0,"index":3802},{"krate":0,"index":3804},{"krate":0,"index":3806},{"krate":0,"index":3808},{"krate":0,"index":3809},{"krate":0,"index":3811},{"krate":0,"index":3815},{"krate":0,"index":3817},{"krate":0,"index":3819},{"krate":0,"index":3821},{"krate":0,"index":3824},{"krate":0,"index":3825}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8722063,"byte_end":8722071,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3828},{"krate":0,"index":3829},{"krate":0,"index":3830},{"krate":0,"index":3831},{"krate":0,"index":3832},{"krate":0,"index":3833},{"krate":0,"index":3834},{"krate":0,"index":3835},{"krate":0,"index":3836},{"krate":0,"index":3837},{"krate":0,"index":3838},{"krate":0,"index":3839},{"krate":0,"index":3840},{"krate":0,"index":3841},{"krate":0,"index":3842},{"krate":0,"index":3843},{"krate":0,"index":3844},{"krate":0,"index":3845},{"krate":0,"index":3846}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8723948,"byte_end":8723953,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3848}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8724112,"byte_end":8724120,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3850}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/waker.rs","byte_start":8725938,"byte_end":8725946,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3876},{"krate":0,"index":3877}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8672256,"byte_end":8672260,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8672291,"byte_end":8672295,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8672432,"byte_end":8672440,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8672481,"byte_end":8672489,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8674413,"byte_end":8674417,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3928},{"krate":0,"index":3929}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8675309,"byte_end":8675313,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3932}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8675482,"byte_end":8675490,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3935},{"krate":0,"index":3936}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8675776,"byte_end":8675780,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3939}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8676020,"byte_end":8676024,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3942}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8676176,"byte_end":8676184,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3945}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8676400,"byte_end":8676404,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3948},{"krate":0,"index":3949},{"krate":0,"index":3950},{"krate":0,"index":3951},{"krate":0,"index":3952}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/mod.rs","byte_start":127778,"byte_end":127790,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3983},{"krate":0,"index":3984}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":129965,"byte_end":129972,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":137892,"byte_end":137899,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4001}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138448,"byte_end":138455,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4003}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138975,"byte_end":138982,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4005},{"krate":0,"index":4006}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":142878,"byte_end":142885,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":142964,"byte_end":142971,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":143766,"byte_end":143778,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":146656,"byte_end":146677,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4030}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":147507,"byte_end":147512,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4033}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":149620,"byte_end":149625,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":149755,"byte_end":149760,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150818,"byte_end":150824,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153920,"byte_end":153926,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4054},{"krate":0,"index":4056}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163286,"byte_end":163301,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163449,"byte_end":163464,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163622,"byte_end":163637,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/shell.rs","byte_start":165926,"byte_end":165931,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/shell.rs","byte_start":166537,"byte_end":166543,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/spawner.rs","byte_start":167159,"byte_end":167166,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4083}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115508,"byte_end":115515,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":171769,"byte_end":171775,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":173316,"byte_end":173326,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":174173,"byte_end":174189,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4120}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":174321,"byte_end":174337,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4122}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":176077,"byte_end":176083,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4127},{"krate":0,"index":4128}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8731544,"byte_end":8731547,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4157},{"krate":0,"index":4158}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8732269,"byte_end":8732277,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4165}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8732367,"byte_end":8732375,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4168},{"krate":0,"index":4170},{"krate":0,"index":4171}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8734528,"byte_end":8734535,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4178},{"krate":0,"index":4179}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8734643,"byte_end":8734650,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4181},{"krate":0,"index":4182},{"krate":0,"index":4183},{"krate":0,"index":4184}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8740722,"byte_end":8740731,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4222}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8740845,"byte_end":8740854,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4225},{"krate":0,"index":4227}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8741242,"byte_end":8741253,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4232}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8741539,"byte_end":8741549,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4234},{"krate":0,"index":4235},{"krate":0,"index":4236},{"krate":0,"index":4237},{"krate":0,"index":4238},{"krate":0,"index":4239},{"krate":0,"index":4240},{"krate":0,"index":4241},{"krate":0,"index":4242},{"krate":0,"index":4243},{"krate":0,"index":4244},{"krate":0,"index":4245},{"krate":0,"index":4246}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8745345,"byte_end":8745355,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4252}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8747704,"byte_end":8747710,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4259}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8747995,"byte_end":8748001,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4261},{"krate":0,"index":4262}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754190,"byte_end":8754196,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4266},{"krate":0,"index":4271}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8756054,"byte_end":8756060,"line_start":487,"line_end":487,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4309},{"krate":0,"index":4310}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8791052,"byte_end":8791061,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4323}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8791207,"byte_end":8791216,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8791255,"byte_end":8791264,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4330},{"krate":0,"index":4331}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8792215,"byte_end":8792224,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4344}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8792370,"byte_end":8792379,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8792418,"byte_end":8792427,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4351},{"krate":0,"index":4352}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":8793350,"byte_end":8793355,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4366}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":8793535,"byte_end":8793540,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4370},{"krate":0,"index":4371},{"krate":0,"index":4373}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8795118,"byte_end":8795125,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4394}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8795409,"byte_end":8795416,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4398},{"krate":0,"index":4399}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8796392,"byte_end":8796398,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8796453,"byte_end":8796459,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4411},{"krate":0,"index":4412},{"krate":0,"index":4413},{"krate":0,"index":4414}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8796848,"byte_end":8796851,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8796897,"byte_end":8796900,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4419},{"krate":0,"index":4420},{"krate":0,"index":4421},{"krate":0,"index":4422}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8797283,"byte_end":8797286,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8797334,"byte_end":8797337,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4427},{"krate":0,"index":4428},{"krate":0,"index":4429},{"krate":0,"index":4430}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8797852,"byte_end":8797858,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8797947,"byte_end":8797953,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4439},{"krate":0,"index":4440},{"krate":0,"index":4441},{"krate":0,"index":4442}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8799031,"byte_end":8799036,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8799084,"byte_end":8799089,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4447},{"krate":0,"index":4448},{"krate":0,"index":4449},{"krate":0,"index":4450}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8799489,"byte_end":8799497,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8799545,"byte_end":8799553,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4455},{"krate":0,"index":4456},{"krate":0,"index":4457},{"krate":0,"index":4458}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8800824,"byte_end":8800829,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8800860,"byte_end":8800865,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8800896,"byte_end":8800901,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8801444,"byte_end":8801449,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4485},{"krate":0,"index":4486},{"krate":0,"index":4487}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":8802063,"byte_end":8802069,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4502}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":8802287,"byte_end":8802293,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4506}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":8802412,"byte_end":8802418,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4510},{"krate":0,"index":4511},{"krate":0,"index":4512}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":8803504,"byte_end":8803513,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4525}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":8803734,"byte_end":8803743,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4529}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":8803865,"byte_end":8803874,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4534},{"krate":0,"index":4535},{"krate":0,"index":4536}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":8804946,"byte_end":8804956,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4550}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":8805152,"byte_end":8805162,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4555},{"krate":0,"index":4556}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":8806061,"byte_end":8806065,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4567}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":8806225,"byte_end":8806229,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4570},{"krate":0,"index":4571},{"krate":0,"index":4572}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807172,"byte_end":8807176,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807838,"byte_end":8807842,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4586},{"krate":0,"index":4587},{"krate":0,"index":4588}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":8808588,"byte_end":8808591,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4603}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":8808780,"byte_end":8808783,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4607}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":8808904,"byte_end":8808907,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4612},{"krate":0,"index":4613},{"krate":0,"index":4616}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":8809752,"byte_end":8809757,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4630}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":8810011,"byte_end":8810016,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4634},{"krate":0,"index":4635},{"krate":0,"index":4636}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8811528,"byte_end":8811532,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8811566,"byte_end":8811570,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4654}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8811711,"byte_end":8811715,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4657},{"krate":0,"index":4658}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812211,"byte_end":8812215,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812842,"byte_end":8812846,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4676},{"krate":0,"index":4677},{"krate":0,"index":4678}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813393,"byte_end":8813400,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813431,"byte_end":8813438,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813469,"byte_end":8813476,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8814169,"byte_end":8814176,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4699},{"krate":0,"index":4700},{"krate":0,"index":4701}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819841,"byte_end":8819850,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4716},{"krate":0,"index":4717},{"krate":0,"index":4718},{"krate":0,"index":4721},{"krate":0,"index":4724},{"krate":0,"index":4727},{"krate":0,"index":4728},{"krate":0,"index":4729},{"krate":0,"index":4730},{"krate":0,"index":4731},{"krate":0,"index":4732},{"krate":0,"index":4734}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8826851,"byte_end":8826860,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4739}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8828399,"byte_end":8828408,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4744},{"krate":0,"index":4745},{"krate":0,"index":4746}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":8829624,"byte_end":8829628,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4758}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":8829838,"byte_end":8829842,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4761}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":8829975,"byte_end":8829979,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4764},{"krate":0,"index":4765},{"krate":0,"index":4766}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":8831205,"byte_end":8831214,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4780}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":8831435,"byte_end":8831444,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4784}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":8831629,"byte_end":8831638,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4788},{"krate":0,"index":4789},{"krate":0,"index":4790}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8832987,"byte_end":8832994,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8833028,"byte_end":8833035,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4806}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8833242,"byte_end":8833249,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":4811},{"krate":0,"index":4812}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":8833859,"byte_end":8833863,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4825}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":8834073,"byte_end":8834077,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4828}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":8834210,"byte_end":8834214,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4831},{"krate":0,"index":4832},{"krate":0,"index":4834}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":8835733,"byte_end":8835742,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4847}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":8836002,"byte_end":8836011,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4851}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":8836204,"byte_end":8836213,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4855},{"krate":0,"index":4856},{"krate":0,"index":4859}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":8867438,"byte_end":8867445,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4992}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":8867800,"byte_end":8867807,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4995},{"krate":0,"index":4996},{"krate":0,"index":4997}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8790282,"byte_end":8790284,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":8913860,"byte_end":8913871,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5139},{"krate":0,"index":5140},{"krate":0,"index":5141},{"krate":0,"index":5142},{"krate":0,"index":5146},{"krate":0,"index":5147}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":8919798,"byte_end":8919809,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5150}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":8919895,"byte_end":8919906,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5152}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":8920039,"byte_end":8920050,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":8920075,"byte_end":8920086,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":8920182,"byte_end":8920187,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5159},{"krate":0,"index":5160}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8886514,"byte_end":8886523,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5023}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8886685,"byte_end":8886694,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8886763,"byte_end":8886775,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5026}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8887074,"byte_end":8887086,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8888897,"byte_end":8888903,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5039},{"krate":0,"index":5042},{"krate":0,"index":5044},{"krate":0,"index":5049}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8895204,"byte_end":8895210,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5052}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8895349,"byte_end":8895357,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5055},{"krate":0,"index":5056}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8899748,"byte_end":8899756,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5059}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8899903,"byte_end":8899911,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5062},{"krate":0,"index":5063}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8900374,"byte_end":8900379,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5066},{"krate":0,"index":5067},{"krate":0,"index":5069},{"krate":0,"index":5070},{"krate":0,"index":5072},{"krate":0,"index":5076},{"krate":0,"index":5080},{"krate":0,"index":5082},{"krate":0,"index":5084},{"krate":0,"index":5086}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8904751,"byte_end":8904756,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8904793,"byte_end":8904798,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8904823,"byte_end":8904828,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5094}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8905197,"byte_end":8905202,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5098}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8905597,"byte_end":8905602,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5105},{"krate":0,"index":5106},{"krate":0,"index":5107},{"krate":0,"index":5108},{"krate":0,"index":5109},{"krate":0,"index":5110},{"krate":0,"index":5111},{"krate":0,"index":5112},{"krate":0,"index":5113},{"krate":0,"index":5114},{"krate":0,"index":5115},{"krate":0,"index":5116},{"krate":0,"index":5117}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8907315,"byte_end":8907320,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5119}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":8926716,"byte_end":8926721,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5256},{"krate":0,"index":5257},{"krate":0,"index":5258},{"krate":0,"index":5259},{"krate":0,"index":5261},{"krate":0,"index":5263},{"krate":0,"index":5264},{"krate":0,"index":5265},{"krate":0,"index":5267},{"krate":0,"index":5268},{"krate":0,"index":5269},{"krate":0,"index":5271},{"krate":0,"index":5272},{"krate":0,"index":5273}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":8936703,"byte_end":8936709,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5278}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":8937191,"byte_end":8937197,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5281},{"krate":0,"index":5282}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8937835,"byte_end":8937841,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5300}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8937973,"byte_end":8937979,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5303}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8938386,"byte_end":8938394,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5309}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8940166,"byte_end":8940174,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5315},{"krate":0,"index":5316},{"krate":0,"index":5321},{"krate":0,"index":5322},{"krate":0,"index":5323}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8942602,"byte_end":8942610,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8942670,"byte_end":8942678,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5780},{"krate":0,"index":5781}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8942866,"byte_end":8942872,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5328},{"krate":0,"index":5329},{"krate":0,"index":5334},{"krate":0,"index":5335},{"krate":0,"index":5340},{"krate":0,"index":5342}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8954262,"byte_end":8954264,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5377}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8954665,"byte_end":8954667,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5385}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8954974,"byte_end":8954983,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5388}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8955245,"byte_end":8955257,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5391}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8956952,"byte_end":8956956,"line_start":120,"line_end":120,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5413}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8957589,"byte_end":8957597,"line_start":144,"line_end":144,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5420}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8957863,"byte_end":8957867,"line_start":153,"line_end":153,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8957916,"byte_end":8957920,"line_start":154,"line_end":154,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8958399,"byte_end":8958401,"line_start":178,"line_end":178,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5433},{"krate":0,"index":5434},{"krate":0,"index":5435},{"krate":0,"index":5436}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8959099,"byte_end":8959101,"line_start":204,"line_end":204,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5439}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8959249,"byte_end":8959251,"line_start":210,"line_end":210,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5442}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8959429,"byte_end":8959431,"line_start":216,"line_end":216,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5446}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8959831,"byte_end":8959833,"line_start":232,"line_end":232,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5450}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8960242,"byte_end":8960244,"line_start":253,"line_end":253,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5454},{"krate":0,"index":5455},{"krate":0,"index":5457},{"krate":0,"index":5461}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8963364,"byte_end":8963366,"line_start":344,"line_end":344,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5467}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8963802,"byte_end":8963806,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5473}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8964270,"byte_end":8964274,"line_start":387,"line_end":387,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5477}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8964823,"byte_end":8964835,"line_start":404,"line_end":404,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5482}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8966435,"byte_end":8966446,"line_start":475,"line_end":475,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5501},{"krate":0,"index":5502},{"krate":0,"index":5503},{"krate":0,"index":5504},{"krate":0,"index":5505},{"krate":0,"index":5506},{"krate":0,"index":5508},{"krate":0,"index":5509},{"krate":0,"index":5510}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":8969163,"byte_end":8969165,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5540},{"krate":0,"index":5541},{"krate":0,"index":5542},{"krate":0,"index":5544}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":8974869,"byte_end":8974871,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5547}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":8975148,"byte_end":8975150,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5550},{"krate":0,"index":5551},{"krate":0,"index":5552},{"krate":0,"index":5553}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":8978549,"byte_end":8978551,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5556}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":8979225,"byte_end":8979240,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5572}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":8979381,"byte_end":8979396,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5575}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":8979854,"byte_end":8979871,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5581}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":8980849,"byte_end":8980866,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5587},{"krate":0,"index":5588},{"krate":0,"index":5589},{"krate":0,"index":5594},{"krate":0,"index":5595}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":8983338,"byte_end":8983355,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5598},{"krate":0,"index":5599}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":8983521,"byte_end":8983536,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5602},{"krate":0,"index":5603}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8984646,"byte_end":8984655,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5613}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8984815,"byte_end":8984824,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8985310,"byte_end":8985322,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8985355,"byte_end":8985367,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5620}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8985707,"byte_end":8985719,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5623}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8985948,"byte_end":8985957,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5625}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8986087,"byte_end":8986096,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8986582,"byte_end":8986594,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5628}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8986900,"byte_end":8986912,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8987069,"byte_end":8987080,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5631}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8987179,"byte_end":8987190,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5633}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8987320,"byte_end":8987331,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8987835,"byte_end":8987851,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8987888,"byte_end":8987904,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5837}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8992721,"byte_end":8992730,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5677},{"krate":0,"index":5678},{"krate":0,"index":5679},{"krate":0,"index":5682},{"krate":0,"index":5684},{"krate":0,"index":5688},{"krate":0,"index":5689},{"krate":0,"index":5690},{"krate":0,"index":5691},{"krate":0,"index":5696},{"krate":0,"index":5697},{"krate":0,"index":5698},{"krate":0,"index":5699}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9008924,"byte_end":9008933,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5701}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9009012,"byte_end":9009021,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5703}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9009399,"byte_end":9009408,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9009433,"byte_end":9009442,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9009480,"byte_end":9009486,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5708},{"krate":0,"index":5710},{"krate":0,"index":5711},{"krate":0,"index":5715},{"krate":0,"index":5717},{"krate":0,"index":5718}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9015892,"byte_end":9015898,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5721}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9015971,"byte_end":9015977,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5723}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9016399,"byte_end":9016411,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5725}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9016591,"byte_end":9016603,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5728}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9016747,"byte_end":9016759,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9016806,"byte_end":9016821,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5731},{"krate":0,"index":5732}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9017351,"byte_end":9017366,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5734}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9017652,"byte_end":9017667,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9017705,"byte_end":9017711,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5737},{"krate":0,"index":5738},{"krate":0,"index":5739},{"krate":0,"index":5740},{"krate":0,"index":5741},{"krate":0,"index":5742},{"krate":0,"index":5743},{"krate":0,"index":5744},{"krate":0,"index":5745}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9023124,"byte_end":9023132,"line_start":1034,"line_end":1034,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5747},{"krate":0,"index":5748},{"krate":0,"index":5749},{"krate":0,"index":5750},{"krate":0,"index":5751},{"krate":0,"index":5752},{"krate":0,"index":5753},{"krate":0,"index":5754},{"krate":0,"index":5755},{"krate":0,"index":5756},{"krate":0,"index":5757},{"krate":0,"index":5758},{"krate":0,"index":5759},{"krate":0,"index":5760},{"krate":0,"index":5761},{"krate":0,"index":5762}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9026795,"byte_end":9026803,"line_start":1172,"line_end":1172,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5764}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9027156,"byte_end":9027167,"line_start":1188,"line_end":1188,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5766},{"krate":0,"index":5767},{"krate":0,"index":5768},{"krate":0,"index":5769},{"krate":0,"index":5770},{"krate":0,"index":5771},{"krate":0,"index":5772},{"krate":0,"index":5773}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/yield_now.rs","byte_start":9040941,"byte_end":9040949,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5923},{"krate":0,"index":5924}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9048081,"byte_end":9048089,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5958},{"krate":0,"index":5959},{"krate":0,"index":5961},{"krate":0,"index":5963},{"krate":0,"index":5967},{"krate":0,"index":5969},{"krate":0,"index":5972}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9055931,"byte_end":9055939,"line_start":446,"line_end":446,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5976}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9056078,"byte_end":9056086,"line_start":452,"line_end":452,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5978},{"krate":0,"index":5979}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9057051,"byte_end":9057059,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5982}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9057140,"byte_end":9057148,"line_start":482,"line_end":482,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5984}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9058015,"byte_end":9058023,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5988},{"krate":0,"index":5989}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9058908,"byte_end":9058914,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5993},{"krate":0,"index":5995}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9059477,"byte_end":9059480,"line_start":562,"line_end":562,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5997},{"krate":0,"index":5999},{"krate":0,"index":6002}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062895,"byte_end":9062903,"line_start":98,"line_end":98,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6025},{"krate":0,"index":6029},{"krate":0,"index":6032}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9064679,"byte_end":9064687,"line_start":163,"line_end":163,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6038}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9064895,"byte_end":9064903,"line_start":171,"line_end":171,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6042}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9065224,"byte_end":9065239,"line_start":186,"line_end":186,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6046},{"krate":0,"index":6047}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9065540,"byte_end":9065545,"line_start":196,"line_end":196,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6056}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9066163,"byte_end":9066164,"line_start":220,"line_end":220,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9066349,"byte_end":9066360,"line_start":228,"line_end":228,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6063}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9066504,"byte_end":9066515,"line_start":234,"line_end":234,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6065}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9066662,"byte_end":9066673,"line_start":240,"line_end":240,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/clock.rs","byte_start":9071258,"byte_end":9071263,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6568},{"krate":0,"index":6569},{"krate":0,"index":6570},{"krate":0,"index":6571}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9081785,"byte_end":9081795,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6116},{"krate":0,"index":6117},{"krate":0,"index":6118},{"krate":0,"index":6119},{"krate":0,"index":6122},{"krate":0,"index":6123},{"krate":0,"index":6127},{"krate":0,"index":6129},{"krate":0,"index":6130},{"krate":0,"index":6132},{"krate":0,"index":6133},{"krate":0,"index":6134},{"krate":0,"index":6135},{"krate":0,"index":6136},{"krate":0,"index":6137},{"krate":0,"index":6138},{"krate":0,"index":6140}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9099438,"byte_end":9099448,"line_start":751,"line_end":751,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9099476,"byte_end":9099486,"line_start":753,"line_end":753,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6145}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9099623,"byte_end":9099633,"line_start":760,"line_end":760,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6148},{"krate":0,"index":6149}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9100015,"byte_end":9100020,"line_start":770,"line_end":770,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6152},{"krate":0,"index":6153},{"krate":0,"index":6154},{"krate":0,"index":6155},{"krate":0,"index":6156},{"krate":0,"index":6157},{"krate":0,"index":6158},{"krate":0,"index":6159}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9102147,"byte_end":9102152,"line_start":852,"line_end":852,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6162}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9102282,"byte_end":9102285,"line_start":861,"line_end":861,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":6164}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9102372,"byte_end":9102379,"line_start":867,"line_end":867,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6167},{"krate":0,"index":6168},{"krate":0,"index":6169},{"krate":0,"index":6170}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9104917,"byte_end":9104922,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6185},{"krate":0,"index":6186},{"krate":0,"index":6187},{"krate":0,"index":6188}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9105900,"byte_end":9105905,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6190},{"krate":0,"index":6191}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":9119229,"byte_end":9119240,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6206},{"krate":0,"index":6207},{"krate":0,"index":6208},{"krate":0,"index":6209}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":9121218,"byte_end":9121236,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6211},{"krate":0,"index":6212}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":9121808,"byte_end":9121826,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6214}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9125799,"byte_end":9125804,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6240},{"krate":0,"index":6241},{"krate":0,"index":6242},{"krate":0,"index":6243},{"krate":0,"index":6244},{"krate":0,"index":6245},{"krate":0,"index":6246},{"krate":0,"index":6247},{"krate":0,"index":6248},{"krate":0,"index":6249},{"krate":0,"index":6250},{"krate":0,"index":6251},{"krate":0,"index":6252},{"krate":0,"index":6253}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9132032,"byte_end":9132037,"line_start":329,"line_end":329,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6256}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9132245,"byte_end":9132250,"line_start":340,"line_end":340,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9132275,"byte_end":9132280,"line_start":341,"line_end":341,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/handle.rs","byte_start":9132657,"byte_end":9132663,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6268},{"krate":0,"index":6269},{"krate":0,"index":6270}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/handle.rs","byte_start":9133308,"byte_end":9133314,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6272}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/registration.rs","byte_start":9133759,"byte_end":9133771,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6287},{"krate":0,"index":6288},{"krate":0,"index":6289},{"krate":0,"index":6290},{"krate":0,"index":6291}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/registration.rs","byte_start":9134681,"byte_end":9134693,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6294}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/stack.rs","byte_start":9134977,"byte_end":9134982,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6302}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/stack.rs","byte_start":9135073,"byte_end":9135078,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6304},{"krate":0,"index":6305},{"krate":0,"index":6306},{"krate":0,"index":6307},{"krate":0,"index":6308},{"krate":0,"index":6309},{"krate":0,"index":6310},{"krate":0,"index":6311}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9110795,"byte_end":9110801,"line_start":122,"line_end":122,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6345},{"krate":0,"index":6346},{"krate":0,"index":6347},{"krate":0,"index":6348},{"krate":0,"index":6349},{"krate":0,"index":6350},{"krate":0,"index":6351}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9114450,"byte_end":9114456,"line_start":234,"line_end":234,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6355},{"krate":0,"index":6356},{"krate":0,"index":6357},{"krate":0,"index":6358},{"krate":0,"index":6359}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9116445,"byte_end":9116451,"line_start":308,"line_end":308,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6362}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9116928,"byte_end":9116933,"line_start":327,"line_end":327,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6365},{"krate":0,"index":6366},{"krate":0,"index":6367},{"krate":0,"index":6368},{"krate":0,"index":6369},{"krate":0,"index":6370}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9118550,"byte_end":9118555,"line_start":389,"line_end":389,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6372}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9139350,"byte_end":9139355,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6378},{"krate":0,"index":6379},{"krate":0,"index":6380},{"krate":0,"index":6381}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9140070,"byte_end":9140075,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9140102,"byte_end":9140107,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6384}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9140813,"byte_end":9140820,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6392},{"krate":0,"index":6393},{"krate":0,"index":6394},{"krate":0,"index":6395},{"krate":0,"index":6396},{"krate":0,"index":6397},{"krate":0,"index":6398},{"krate":0,"index":6399},{"krate":0,"index":6400}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9144594,"byte_end":9144601,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6402}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9144730,"byte_end":9144737,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6404}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9144852,"byte_end":9144859,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6406},{"krate":0,"index":6407}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9145024,"byte_end":9145031,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6409}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9145136,"byte_end":9145143,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6411},{"krate":0,"index":6412}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9145284,"byte_end":9145291,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6414},{"krate":0,"index":6415}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9145452,"byte_end":9145459,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6417}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9145566,"byte_end":9145573,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6419}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9149309,"byte_end":9149317,"line_start":119,"line_end":119,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6439},{"krate":0,"index":6440}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9150612,"byte_end":9150620,"line_start":164,"line_end":164,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6445},{"krate":0,"index":6446}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9153952,"byte_end":9153959,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6469}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9154088,"byte_end":9154095,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6472},{"krate":0,"index":6473},{"krate":0,"index":6474},{"krate":0,"index":6475}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9154633,"byte_end":9154640,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6478},{"krate":0,"index":6479}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9155218,"byte_end":9155225,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6481}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9155369,"byte_end":9155376,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9155413,"byte_end":9155418,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6484}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9173558,"byte_end":9173566,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6742},{"krate":0,"index":6743},{"krate":0,"index":6744}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9174381,"byte_end":9174389,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6747},{"krate":0,"index":6748}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/level.rs","byte_start":9165322,"byte_end":9165327,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6503},{"krate":0,"index":6505},{"krate":0,"index":6506},{"krate":0,"index":6507},{"krate":0,"index":6508},{"krate":0,"index":6509}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/level.rs","byte_start":9170079,"byte_end":9170084,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6512}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/mod.rs","byte_start":9157143,"byte_end":9157148,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6537},{"krate":0,"index":6538},{"krate":0,"index":6539},{"krate":0,"index":6540},{"krate":0,"index":6541},{"krate":0,"index":6543},{"krate":0,"index":6545},{"krate":0,"index":6546},{"krate":0,"index":6547},{"krate":0,"index":6548},{"krate":0,"index":6549},{"krate":0,"index":6550}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/mod.rs","byte_start":9162856,"byte_end":9162860,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6553}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/bit.rs","byte_start":9175222,"byte_end":9175226,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6783},{"krate":0,"index":6784},{"krate":0,"index":6785},{"krate":0,"index":6786},{"krate":0,"index":6787},{"krate":0,"index":6788},{"krate":0,"index":6789}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/bit.rs","byte_start":9176700,"byte_end":9176704,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6791}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/addr.rs","byte_start":9183923,"byte_end":9183930,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6810},{"krate":0,"index":6811},{"krate":0,"index":6812},{"krate":0,"index":6813},{"krate":0,"index":6814},{"krate":0,"index":6815},{"krate":0,"index":6816},{"krate":0,"index":6817}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/generation.rs","byte_start":9186959,"byte_end":9186969,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6829},{"krate":0,"index":6830},{"krate":0,"index":6831},{"krate":0,"index":6832},{"krate":0,"index":6833}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9188108,"byte_end":9188113,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6854},{"krate":0,"index":6855},{"krate":0,"index":6857}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9188455,"byte_end":9188461,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6861},{"krate":0,"index":6862},{"krate":0,"index":6864},{"krate":0,"index":6867},{"krate":0,"index":6870},{"krate":0,"index":6873}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9192413,"byte_end":9192418,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6878}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9192724,"byte_end":9192730,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6882}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/shard.rs","byte_start":9194873,"byte_end":9194878,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6896},{"krate":0,"index":6899},{"krate":0,"index":6900},{"krate":0,"index":6901},{"krate":0,"index":6902},{"krate":0,"index":6903}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/shard.rs","byte_start":9196557,"byte_end":9196562,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6906}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/slot.rs","byte_start":9196939,"byte_end":9196943,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6919},{"krate":0,"index":6920},{"krate":0,"index":6921},{"krate":0,"index":6922},{"krate":0,"index":6923},{"krate":0,"index":6925}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/stack.rs","byte_start":9197914,"byte_end":9197927,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6937},{"krate":0,"index":6938},{"krate":0,"index":6939}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/stack.rs","byte_start":9198755,"byte_end":9198768,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6942}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9178302,"byte_end":9178306,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9178343,"byte_end":9178347,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9178370,"byte_end":9178374,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6959},{"krate":0,"index":6960},{"krate":0,"index":6961},{"krate":0,"index":6962}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9179889,"byte_end":9179893,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6965}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180390,"byte_end":180400,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180459,"byte_end":180469,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181758,"byte_end":181766,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181803,"byte_end":181811,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181865,"byte_end":181875,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":184879,"byte_end":184889,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":186227,"byte_end":186235,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":186434,"byte_end":186442,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/rand.rs","byte_start":196514,"byte_end":196522,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/wake.rs","byte_start":198384,"byte_end":198392,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202358,"byte_end":202366,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202616,"byte_end":202624,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202729,"byte_end":202737,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":203046,"byte_end":203056,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14158,"byte_end":14164,"line_start":347,"line_end":347,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/mod.rs","byte_start":16275,"byte_end":16282,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":79}},{"kind":"Mod","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14219,"byte_end":14225,"line_start":354,"line_end":354,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":83}},{"kind":"Mod","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14236,"byte_end":14238,"line_start":356,"line_end":356,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":177}},{"kind":"Mod","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14248,"byte_end":14251,"line_start":357,"line_end":357,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":308}},{"kind":"Mod","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72787,"byte_end":72790,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2582}},{"kind":"Mod","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72894,"byte_end":72897,"line_start":40,"line_end":40,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2885}},{"kind":"Mod","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72961,"byte_end":72965,"line_start":45,"line_end":45,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":3030}},{"kind":"Mod","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14283,"byte_end":14290,"line_start":362,"line_end":362,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":556}},{"kind":"Mod","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14340,"byte_end":14347,"line_start":368,"line_end":368,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":562}},{"kind":"Mod","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14398,"byte_end":14404,"line_start":373,"line_end":373,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":4129}},{"kind":"Mod","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8728714,"byte_end":8728718,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4190}},{"kind":"Mod","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14435,"byte_end":14441,"line_start":377,"line_end":377,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":4311}},{"kind":"Mod","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14538,"byte_end":14542,"line_start":388,"line_end":388,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5898}},{"kind":"Mod","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14596,"byte_end":14600,"line_start":393,"line_end":393,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6092}},{"kind":"Mod","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9069547,"byte_end":9069558,"line_start":99,"line_end":99,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":6095}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":29721,"byte_end":29730,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":57},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":29746,"byte_end":29755,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":57},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":30105,"byte_end":30110,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":68},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31866,"byte_end":31875,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":874},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32038,"byte_end":32047,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":33234,"byte_end":33243,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":874},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":33997,"byte_end":34003,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34217,"byte_end":34223,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34365,"byte_end":34371,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34902,"byte_end":34907,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":887},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34934,"byte_end":34939,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":887},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/try_join.rs","byte_start":36136,"byte_end":36144,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":894},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47374,"byte_end":47383,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":215},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49833,"byte_end":49836,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49996,"byte_end":49999,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":2,"index":30012},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":50628,"byte_end":50634,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":6658},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":56598,"byte_end":56601,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":56744,"byte_end":56747,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"kind":{"Impl":{"id":16}},"from":{"krate":2,"index":30012},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":57543,"byte_end":57549,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":6658},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59975,"byte_end":59978,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":246}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":60121,"byte_end":60124,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":2,"index":30012},"to":{"krate":0,"index":246}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":60578,"byte_end":60584,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":6658},"to":{"krate":0,"index":246}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":68489,"byte_end":68492,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":68640,"byte_end":68643,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":2,"index":30012},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":69212,"byte_end":69215,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":69723,"byte_end":69729,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":1,"index":6658},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":70242,"byte_end":70248,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":6658},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":70764,"byte_end":70770,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":6658},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":71281,"byte_end":71287,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":1,"index":6658},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8346175,"byte_end":8346186,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1153},"to":{"krate":0,"index":6821}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8346945,"byte_end":8346956,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1153},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8347163,"byte_end":8347174,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8349796,"byte_end":8349807,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1153},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8335544,"byte_end":8335550,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8338411,"byte_end":8338417,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1021},"to":{"krate":0,"index":544}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8338785,"byte_end":8338791,"line_start":186,"line_end":186,"column_start":21,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8338927,"byte_end":8338933,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8340076,"byte_end":8340082,"line_start":225,"line_end":225,"column_start":17,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1159},"to":{"krate":0,"index":550}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8340160,"byte_end":8340166,"line_start":231,"line_end":231,"column_start":21,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1159},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8340301,"byte_end":8340306,"line_start":239,"line_end":239,"column_start":6,"column_end":11},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8341850,"byte_end":8341859,"line_start":293,"line_end":293,"column_start":6,"column_end":15},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8356365,"byte_end":8356376,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8364167,"byte_end":8364178,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1179},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8364671,"byte_end":8364682,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1179},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8365763,"byte_end":8365774,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1179},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8365947,"byte_end":8365958,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1179},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8368106,"byte_end":8368118,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8378988,"byte_end":8379000,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1183},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8379025,"byte_end":8379037,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1183},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8379056,"byte_end":8379068,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1183},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8380850,"byte_end":8380858,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8381775,"byte_end":8381784,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8382034,"byte_end":8382042,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1302},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8382597,"byte_end":8382606,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1305},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8383555,"byte_end":8383560,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8383953,"byte_end":8383958,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8384211,"byte_end":8384216,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1211},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8384339,"byte_end":8384347,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1302},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8384384,"byte_end":8384393,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8384430,"byte_end":8384438,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1302},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8384475,"byte_end":8384484,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8384527,"byte_end":8384535,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1302},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8384703,"byte_end":8384712,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":8385402,"byte_end":8385406,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1310},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8388323,"byte_end":8388335,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":186},"to":{"krate":0,"index":2000}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8397356,"byte_end":8397357,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1334},"to":{"krate":0,"index":2000}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8399384,"byte_end":8399393,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":215},"to":{"krate":0,"index":2008}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8436642,"byte_end":8436643,"line_start":1112,"line_end":1112,"column_start":46,"column_end":47},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1381},"to":{"krate":0,"index":2008}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8437522,"byte_end":8437531,"line_start":35,"line_end":35,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":246},"to":{"krate":0,"index":1389}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8438401,"byte_end":8438402,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1392},"to":{"krate":0,"index":1389}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8440459,"byte_end":8440469,"line_start":68,"line_end":68,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":271},"to":{"krate":0,"index":2060}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8473679,"byte_end":8473680,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1433},"to":{"krate":0,"index":2060}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8475096,"byte_end":8475105,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":9726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8477284,"byte_end":8477293,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":9726},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8478269,"byte_end":8478278,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":9726},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8479109,"byte_end":8479118,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":9726},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8479834,"byte_end":8479843,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":9726},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8481350,"byte_end":8481359,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":9712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8483196,"byte_end":8483205,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":9712},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8483347,"byte_end":8483356,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":9712},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8484068,"byte_end":8484077,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":9712},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8484607,"byte_end":8484616,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":9712},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8485095,"byte_end":8485104,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":9712},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8487058,"byte_end":8487067,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":9649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8489345,"byte_end":8489354,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":9649},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8490244,"byte_end":8490253,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":9649},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8490735,"byte_end":8490744,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":9649},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8491031,"byte_end":8491040,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":9649},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8492209,"byte_end":8492214,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":9600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8493354,"byte_end":8493359,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":9600},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8493638,"byte_end":8493643,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":9600},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8494466,"byte_end":8494471,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":9600},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":8497514,"byte_end":8497518,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2110},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8500628,"byte_end":8500633,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2126},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8500962,"byte_end":8500967,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2126},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8501200,"byte_end":8501205,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2126},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/flush.rs","byte_start":8502026,"byte_end":8502031,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2129},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8503211,"byte_end":8503216,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":9577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8504468,"byte_end":8504473,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":9577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8505220,"byte_end":8505225,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":9577},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read.rs","byte_start":8506623,"byte_end":8506627,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_buf.rs","byte_start":8507688,"byte_end":8507695,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2146},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_exact.rs","byte_start":8509060,"byte_end":8509069,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2157},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_line.rs","byte_start":8516604,"byte_end":8516612,"line_start":85,"line_end":85,"column_start":51,"column_end":59},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2311},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8517838,"byte_end":8517843,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1784},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8519519,"byte_end":8519528,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2322},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_string.rs","byte_start":8521592,"byte_end":8521604,"line_start":58,"line_end":58,"column_start":20,"column_end":32},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2332},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","byte_start":8524256,"byte_end":8524265,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2343},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/repeat.rs","byte_start":8526099,"byte_end":8526105,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2355},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/shutdown.rs","byte_start":8527227,"byte_end":8527235,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2359},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8529068,"byte_end":8529072,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2367},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8529582,"byte_end":8529586,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2367},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8530551,"byte_end":8530556,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":8743},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8531295,"byte_end":8531300,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":8743},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8532079,"byte_end":8532084,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":8743},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8545623,"byte_end":8545635,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":8697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8546140,"byte_end":8546152,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":8697},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8547691,"byte_end":8547703,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":8697},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8533252,"byte_end":8533256,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":8652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8534884,"byte_end":8534888,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":8652},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8535545,"byte_end":8535549,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":8652},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write.rs","byte_start":8537106,"byte_end":8537111,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2408},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_all.rs","byte_start":8537904,"byte_end":8537912,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2417},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_buf.rs","byte_start":8539420,"byte_end":8539428,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2426},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73921,"byte_end":73938,"line_start":22,"line_end":22,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":368},"to":{"krate":0,"index":319}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74388,"byte_end":74398,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"kind":{"Impl":{"id":119}},"from":{"krate":1,"index":6812},"to":{"krate":0,"index":319}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74438,"byte_end":74448,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"kind":{"Impl":{"id":120}},"from":{"krate":1,"index":6812},"to":{"krate":0,"index":368}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74729,"byte_end":74741,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"kind":{"Impl":{"id":121}},"from":{"krate":1,"index":6842},"to":{"krate":0,"index":319}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74781,"byte_end":74793,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"kind":{"Impl":{"id":122}},"from":{"krate":1,"index":6842},"to":{"krate":0,"index":368}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":75053,"byte_end":75065,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"kind":{"Impl":{"id":123}},"from":{"krate":1,"index":6845},"to":{"krate":0,"index":319}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":75105,"byte_end":75117,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"kind":{"Impl":{"id":124}},"from":{"krate":1,"index":6845},"to":{"krate":0,"index":368}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8551624,"byte_end":8551635,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8562339,"byte_end":8562350,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2846},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8562665,"byte_end":8562676,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"kind":{"Impl":{"id":127}},"from":{"krate":18,"index":1044},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8563116,"byte_end":8563127,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2846},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8563453,"byte_end":8563464,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2846},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8563680,"byte_end":8563691,"line_start":447,"line_end":447,"column_start":22,"column_end":33},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2846},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8564523,"byte_end":8564531,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8565169,"byte_end":8565177,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2848},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8567327,"byte_end":8567335,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2854},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8569790,"byte_end":8569798,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2854},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8570118,"byte_end":8570127,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2861},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8570940,"byte_end":8570948,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2854},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8571042,"byte_end":8571051,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2861},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8574114,"byte_end":8574126,"line_start":91,"line_end":91,"column_start":23,"column_end":35},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2877},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8574329,"byte_end":8574341,"line_start":100,"line_end":100,"column_start":16,"column_end":28},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2877},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8574351,"byte_end":8574364,"line_start":102,"line_end":102,"column_start":6,"column_end":19},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8577198,"byte_end":8577211,"line_start":189,"line_end":189,"column_start":20,"column_end":33},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2868},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8577516,"byte_end":8577530,"line_start":203,"line_end":203,"column_start":6,"column_end":20},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8578082,"byte_end":8578096,"line_start":220,"line_end":220,"column_start":15,"column_end":29},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2872},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8578256,"byte_end":8578270,"line_start":228,"line_end":228,"column_start":21,"column_end":35},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2872},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8579091,"byte_end":8579104,"line_start":257,"line_end":257,"column_start":27,"column_end":40},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2868},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8579200,"byte_end":8579214,"line_start":263,"line_end":263,"column_start":27,"column_end":41},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2872},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8581349,"byte_end":8581358,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2883},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8606164,"byte_end":8606173,"line_start":834,"line_end":834,"column_start":39,"column_end":48},"kind":{"Impl":{"id":148}},"from":{"krate":18,"index":988},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8606609,"byte_end":8606618,"line_start":848,"line_end":848,"column_start":34,"column_end":43},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2883},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8606971,"byte_end":8606980,"line_start":862,"line_end":862,"column_start":20,"column_end":29},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2883},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8607294,"byte_end":8607303,"line_start":876,"line_end":876,"column_start":21,"column_end":30},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2883},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8608047,"byte_end":8608056,"line_start":905,"line_end":905,"column_start":21,"column_end":30},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2883},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8608270,"byte_end":8608279,"line_start":916,"line_end":916,"column_start":22,"column_end":31},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2883},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8609285,"byte_end":8609294,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8622850,"byte_end":8622859,"line_start":369,"line_end":369,"column_start":39,"column_end":48},"kind":{"Impl":{"id":155}},"from":{"krate":18,"index":1102},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8623295,"byte_end":8623304,"line_start":383,"line_end":383,"column_start":34,"column_end":43},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3012},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8623624,"byte_end":8623633,"line_start":395,"line_end":395,"column_start":21,"column_end":30},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3012},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8623852,"byte_end":8623861,"line_start":406,"line_end":406,"column_start":22,"column_end":31},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3012},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8625942,"byte_end":8625954,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3024},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8626157,"byte_end":8626169,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3024},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8626696,"byte_end":8626704,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8628336,"byte_end":8628344,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8629664,"byte_end":8629672,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3014},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8629763,"byte_end":8629771,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3019},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8630587,"byte_end":8630599,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8637222,"byte_end":8637234,"line_start":206,"line_end":206,"column_start":41,"column_end":53},"kind":{"Impl":{"id":166}},"from":{"krate":26,"index":181},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8637676,"byte_end":8637688,"line_start":220,"line_end":220,"column_start":37,"column_end":49},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3266},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8638017,"byte_end":8638029,"line_start":232,"line_end":232,"column_start":21,"column_end":33},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3266},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8638154,"byte_end":8638166,"line_start":238,"line_end":238,"column_start":18,"column_end":30},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3266},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8638524,"byte_end":8638532,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8639264,"byte_end":8639272,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3268},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8641399,"byte_end":8641411,"line_start":54,"line_end":54,"column_start":6,"column_end":18},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8645915,"byte_end":8645927,"line_start":180,"line_end":180,"column_start":32,"column_end":44},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3274},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8646243,"byte_end":8646255,"line_start":192,"line_end":192,"column_start":41,"column_end":53},"kind":{"Impl":{"id":174}},"from":{"krate":26,"index":185},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8646697,"byte_end":8646709,"line_start":206,"line_end":206,"column_start":37,"column_end":49},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3274},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8647029,"byte_end":8647041,"line_start":218,"line_end":218,"column_start":21,"column_end":33},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3274},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8647166,"byte_end":8647178,"line_start":224,"line_end":224,"column_start":18,"column_end":30},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3274},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8648170,"byte_end":8648178,"line_start":32,"line_end":32,"column_start":20,"column_end":28},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3276},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8648498,"byte_end":8648507,"line_start":46,"line_end":46,"column_start":21,"column_end":30},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3283},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8648991,"byte_end":8648999,"line_start":64,"line_end":64,"column_start":28,"column_end":36},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3276},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8649095,"byte_end":8649104,"line_start":70,"line_end":70,"column_start":28,"column_end":37},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3283},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8650042,"byte_end":8650052,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8653385,"byte_end":8653395,"line_start":119,"line_end":119,"column_start":39,"column_end":49},"kind":{"Impl":{"id":183}},"from":{"krate":26,"index":189},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8653833,"byte_end":8653843,"line_start":133,"line_end":133,"column_start":35,"column_end":45},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3290},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8654156,"byte_end":8654166,"line_start":145,"line_end":145,"column_start":20,"column_end":30},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3290},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8654480,"byte_end":8654490,"line_start":159,"line_end":159,"column_start":21,"column_end":31},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3290},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8654977,"byte_end":8654987,"line_start":178,"line_end":178,"column_start":6,"column_end":16},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8656504,"byte_end":8656514,"line_start":223,"line_end":223,"column_start":21,"column_end":31},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3290},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8656639,"byte_end":8656649,"line_start":229,"line_end":229,"column_start":18,"column_end":28},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3290},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84289,"byte_end":84298,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84472,"byte_end":84481,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84630,"byte_end":84639,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":84983,"byte_end":84992,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85017,"byte_end":85026,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85036,"byte_end":85045,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85531,"byte_end":85540,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85825,"byte_end":85834,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86175,"byte_end":86184,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86209,"byte_end":86218,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86228,"byte_end":86237,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86416,"byte_end":86425,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86710,"byte_end":86719,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88834,"byte_end":88842,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88867,"byte_end":88875,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88885,"byte_end":88893,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":89068,"byte_end":89076,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":89360,"byte_end":89368,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89708,"byte_end":89719,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89744,"byte_end":89755,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89765,"byte_end":89776,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90459,"byte_end":90470,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90760,"byte_end":90771,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2087}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90935,"byte_end":90946,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/unsafe_cell.rs","byte_start":91134,"byte_end":91144,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":8661006,"byte_end":8661012,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3323},"to":{"krate":0,"index":544}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":8661818,"byte_end":8661824,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3323},"to":{"krate":0,"index":550}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":8662038,"byte_end":8662044,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3323},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96248,"byte_end":96258,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96523,"byte_end":96533,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3349},"to":{"krate":0,"index":544}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96992,"byte_end":96997,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":101722,"byte_end":101732,"line_start":193,"line_end":193,"column_start":18,"column_end":28},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3349},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":101841,"byte_end":101853,"line_start":201,"line_end":201,"column_start":17,"column_end":29},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3353},"to":{"krate":0,"index":550}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":102240,"byte_end":102256,"line_start":220,"line_end":220,"column_start":10,"column_end":26},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103103,"byte_end":103119,"line_start":245,"line_end":245,"column_start":19,"column_end":35},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3403},"to":{"krate":0,"index":544}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103660,"byte_end":103672,"line_start":265,"line_end":265,"column_start":10,"column_end":22},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103884,"byte_end":103889,"line_start":274,"line_end":274,"column_start":10,"column_end":15},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":94870,"byte_end":94874,"line_start":94,"line_end":94,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1915},"to":{"krate":0,"index":550}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":94877,"byte_end":94881,"line_start":94,"line_end":94,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1903},"to":{"krate":0,"index":550}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":95350,"byte_end":95353,"line_start":108,"line_end":108,"column_start":17,"column_end":20},"kind":{"Impl":{"id":227}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":550}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":95442,"byte_end":95445,"line_start":114,"line_end":114,"column_start":17,"column_end":20},"kind":{"Impl":{"id":228}},"from":{"krate":5,"index":3880},"to":{"krate":0,"index":550}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/context.rs","byte_start":126539,"byte_end":126548,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":571},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8664170,"byte_end":8664184,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8667723,"byte_end":8667728,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3483},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8668415,"byte_end":8668429,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3448},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8669316,"byte_end":8669330,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3448},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8669496,"byte_end":8669503,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8669961,"byte_end":8669968,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3954},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8670136,"byte_end":8670139,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"kind":{"Impl":{"id":236}},"from":{"krate":5,"index":3880},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8671237,"byte_end":8671243,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3457},"to":{"krate":0,"index":815}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8678926,"byte_end":8678932,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3548},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8678957,"byte_end":8678963,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3548},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8679322,"byte_end":8679326,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8680104,"byte_end":8680108,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8686490,"byte_end":8686499,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8689578,"byte_end":8689587,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3963},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8689830,"byte_end":8689839,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3963},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8690116,"byte_end":8690125,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3963},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8690159,"byte_end":8690164,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"kind":{"Impl":{"id":246}},"from":{"krate":1,"index":2532},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":8690842,"byte_end":8690849,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":8691326,"byte_end":8691333,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":8693504,"byte_end":8693509,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3660},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8705813,"byte_end":8705823,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3965},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8705860,"byte_end":8705870,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3965},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8705886,"byte_end":8705896,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8706072,"byte_end":8706082,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3965},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8706109,"byte_end":8706119,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3965},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8707345,"byte_end":8707355,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3965},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8707621,"byte_end":8707631,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3965},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":8708878,"byte_end":8708885,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":8710416,"byte_end":8710423,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3733},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":8710513,"byte_end":8710520,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3733},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8713202,"byte_end":8713207,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8722063,"byte_end":8722071,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8723948,"byte_end":8723953,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3782},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8724112,"byte_end":8724120,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3969},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/waker.rs","byte_start":8725938,"byte_end":8725946,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3866},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8672256,"byte_end":8672260,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3900},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8672291,"byte_end":8672295,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3900},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8672432,"byte_end":8672440,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3908},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8672481,"byte_end":8672489,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3908},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8672614,"byte_end":8672618,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1915},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8672621,"byte_end":8672626,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8674413,"byte_end":8674417,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8675309,"byte_end":8675313,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8675482,"byte_end":8675490,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8675776,"byte_end":8675780,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3900},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8676020,"byte_end":8676024,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3900},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8676176,"byte_end":8676184,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3908},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8676400,"byte_end":8676404,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3900},"to":{"krate":0,"index":768}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/mod.rs","byte_start":127778,"byte_end":127790,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":129965,"byte_end":129972,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":137892,"byte_end":137899,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138448,"byte_end":138455,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138975,"byte_end":138982,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":142878,"byte_end":142885,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":142964,"byte_end":142971,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":143766,"byte_end":143778,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":4010},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":146656,"byte_end":146677,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":4026},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":147507,"byte_end":147512,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":149620,"byte_end":149625,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":633},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":149755,"byte_end":149760,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":633},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150818,"byte_end":150824,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":4043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153920,"byte_end":153926,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":4043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163286,"byte_end":163301,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":660},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163449,"byte_end":163464,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":660},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163622,"byte_end":163637,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":660},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/shell.rs","byte_start":165926,"byte_end":165931,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/shell.rs","byte_start":166537,"byte_end":166543,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4064},"to":{"krate":0,"index":815}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/spawner.rs","byte_start":167159,"byte_end":167166,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115508,"byte_end":115515,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":171769,"byte_end":171775,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":173316,"byte_end":173326,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":747},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":174173,"byte_end":174189,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":174321,"byte_end":174337,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4116},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":176077,"byte_end":176083,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8731544,"byte_end":8731547,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"kind":{"Impl":{"id":302}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":4151}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8732269,"byte_end":8732277,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8732367,"byte_end":8732375,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8734528,"byte_end":8734535,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4174},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8734643,"byte_end":8734650,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8740722,"byte_end":8740731,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4219},"to":{"krate":0,"index":4161}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8740845,"byte_end":8740854,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4219},"to":{"krate":0,"index":4151}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8741242,"byte_end":8741253,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4286},"to":{"krate":0,"index":4161}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8741539,"byte_end":8741549,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8745345,"byte_end":8745355,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4247},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8747704,"byte_end":8747710,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8747995,"byte_end":8748001,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8754190,"byte_end":8754196,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8756054,"byte_end":8756060,"line_start":487,"line_end":487,"column_start":36,"column_end":42},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4303},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8791052,"byte_end":8791061,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4899},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8791207,"byte_end":8791216,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4899},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8791255,"byte_end":8791264,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4899},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8792215,"byte_end":8792224,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4910},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8792370,"byte_end":8792379,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4910},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8792418,"byte_end":8792427,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4910},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":8793350,"byte_end":8793355,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":7779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":8793535,"byte_end":8793540,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":7779},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8795085,"byte_end":8795099,"line_start":36,"line_end":36,"column_start":34,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":4460},"to":{"krate":0,"index":4389}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8795118,"byte_end":8795125,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":7758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8795409,"byte_end":8795416,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":7758},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8796392,"byte_end":8796398,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"kind":{"Impl":{"id":326}},"from":{"krate":5,"index":4900},"to":{"krate":0,"index":4389}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8796453,"byte_end":8796459,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"kind":{"Impl":{"id":327}},"from":{"krate":5,"index":4900},"to":{"krate":0,"index":4460}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8796848,"byte_end":8796851,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"kind":{"Impl":{"id":328}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":4389}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8796897,"byte_end":8796900,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"kind":{"Impl":{"id":329}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":4460}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8797283,"byte_end":8797286,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"kind":{"Impl":{"id":330}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":4389}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8797334,"byte_end":8797337,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"kind":{"Impl":{"id":331}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":4460}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8797852,"byte_end":8797858,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"kind":{"Impl":{"id":332}},"from":{"krate":2,"index":30026},"to":{"krate":0,"index":4389}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8797947,"byte_end":8797953,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"kind":{"Impl":{"id":333}},"from":{"krate":2,"index":30026},"to":{"krate":0,"index":4460}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8799031,"byte_end":8799036,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"kind":{"Impl":{"id":334}},"from":{"krate":16,"index":341},"to":{"krate":0,"index":4389}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8799084,"byte_end":8799089,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"kind":{"Impl":{"id":335}},"from":{"krate":16,"index":341},"to":{"krate":0,"index":4460}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8799489,"byte_end":8799497,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"kind":{"Impl":{"id":336}},"from":{"krate":16,"index":535},"to":{"krate":0,"index":4389}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8799545,"byte_end":8799553,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"kind":{"Impl":{"id":337}},"from":{"krate":16,"index":535},"to":{"krate":0,"index":4460}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8800824,"byte_end":8800829,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8800860,"byte_end":8800865,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8800896,"byte_end":8800901,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8801444,"byte_end":8801449,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4921},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":8802063,"byte_end":8802069,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":7685},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":8802287,"byte_end":8802293,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":7685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":8802412,"byte_end":8802418,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":7685},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":8803504,"byte_end":8803513,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":7640},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":8803734,"byte_end":8803743,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":7640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":8803865,"byte_end":8803874,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":7640},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":8804946,"byte_end":8804956,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":7612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":8805152,"byte_end":8805162,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":7612},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":8806061,"byte_end":8806065,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":7564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":8806225,"byte_end":8806229,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":7564},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807172,"byte_end":8807176,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":4928},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8807838,"byte_end":8807842,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":4928},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":8808588,"byte_end":8808591,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":7497},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":8808780,"byte_end":8808783,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":7497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":8808904,"byte_end":8808907,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":7497},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":8809752,"byte_end":8809757,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":7448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":8810011,"byte_end":8810016,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":7448},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8811528,"byte_end":8811532,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":4934},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8811566,"byte_end":8811570,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":4934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8811711,"byte_end":8811715,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":4934},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812211,"byte_end":8812215,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":4942},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8812842,"byte_end":8812846,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":4942},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813393,"byte_end":8813400,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":4948},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813431,"byte_end":8813438,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":4948},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8813469,"byte_end":8813476,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":4948},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8814169,"byte_end":8814176,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":4948},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8819841,"byte_end":8819850,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":4955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8826851,"byte_end":8826860,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":4955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8828399,"byte_end":8828408,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":4955},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":8829624,"byte_end":8829628,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":7411},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":8829838,"byte_end":8829842,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":7411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":8829975,"byte_end":8829979,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":7411},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":8831205,"byte_end":8831214,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":7366},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":8831435,"byte_end":8831444,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":7366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":8831629,"byte_end":8831638,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":7366},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8832987,"byte_end":8832994,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":4967},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8833028,"byte_end":8833035,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":4967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8833242,"byte_end":8833249,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":4967},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":8833859,"byte_end":8833863,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":7329},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":8834073,"byte_end":8834077,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":7329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":8834210,"byte_end":8834214,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":7329},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":8835733,"byte_end":8835742,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":7280},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":8836002,"byte_end":8836011,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":7280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":8836204,"byte_end":8836213,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":7280},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":8867438,"byte_end":8867445,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":7257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":8867800,"byte_end":8867807,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":7257},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8766294,"byte_end":8766300,"line_start":81,"line_end":81,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":17,"index":68},"to":{"krate":0,"index":4862}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8790282,"byte_end":8790284,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":4897},"to":{"krate":0,"index":4862}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":8913860,"byte_end":8913871,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":5132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":8919798,"byte_end":8919809,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":5132},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":8919895,"byte_end":8919906,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":5132},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":8920039,"byte_end":8920050,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":5132},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":8920075,"byte_end":8920086,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":5132},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":8920182,"byte_end":8920187,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"kind":{"Impl":{"id":394}},"from":{"krate":2,"index":8443},"to":{"krate":0,"index":5155}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8886514,"byte_end":8886523,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":5178},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8886685,"byte_end":8886694,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":5178},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8886763,"byte_end":8886775,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":5190},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8887074,"byte_end":8887086,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":5190},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8888897,"byte_end":8888903,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":5166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8895204,"byte_end":8895210,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":5166},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8895349,"byte_end":8895357,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":5172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8899748,"byte_end":8899756,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":5172},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8899903,"byte_end":8899911,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":5172},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8900374,"byte_end":8900379,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":5029},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8904751,"byte_end":8904756,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":5029},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8904793,"byte_end":8904798,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":5029},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8904823,"byte_end":8904828,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":5029},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8905197,"byte_end":8905202,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":5029},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8905597,"byte_end":8905602,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":5203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8907315,"byte_end":8907320,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":5203},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":8926716,"byte_end":8926721,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":5227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":8936703,"byte_end":8936709,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":5241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":8937191,"byte_end":8937197,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":5241},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8937835,"byte_end":8937841,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":5295},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8937973,"byte_end":8937979,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5295},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8938386,"byte_end":8938394,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":5304},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8940166,"byte_end":8940174,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8942602,"byte_end":8942610,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":5304},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8942670,"byte_end":8942678,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":5304},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8942866,"byte_end":8942872,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":5295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8954262,"byte_end":8954264,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":5369},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8954665,"byte_end":8954667,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":5378},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8954974,"byte_end":8954983,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":5795},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8955245,"byte_end":8955257,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":5802},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8956952,"byte_end":8956956,"line_start":120,"line_end":120,"column_start":27,"column_end":31},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":5402},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8957589,"byte_end":8957597,"line_start":144,"line_end":144,"column_start":24,"column_end":32},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":5414},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8957863,"byte_end":8957867,"line_start":153,"line_end":153,"column_start":40,"column_end":44},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":5402},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8957916,"byte_end":8957920,"line_start":154,"line_end":154,"column_start":40,"column_end":44},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":5402},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8958399,"byte_end":8958401,"line_start":178,"line_end":178,"column_start":12,"column_end":14},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8959099,"byte_end":8959101,"line_start":204,"line_end":204,"column_start":9,"column_end":11},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8959249,"byte_end":8959251,"line_start":210,"line_end":210,"column_start":9,"column_end":11},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8959429,"byte_end":8959431,"line_start":216,"line_end":216,"column_start":22,"column_end":24},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":5369},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8959831,"byte_end":8959833,"line_start":232,"line_end":232,"column_start":21,"column_end":23},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":5369},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8960242,"byte_end":8960244,"line_start":253,"line_end":253,"column_start":12,"column_end":14},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":5378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8963364,"byte_end":8963366,"line_start":344,"line_end":344,"column_start":21,"column_end":23},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":5378},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8963802,"byte_end":8963806,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":5402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8964270,"byte_end":8964274,"line_start":387,"line_end":387,"column_start":21,"column_end":25},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":5402},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8964823,"byte_end":8964835,"line_start":404,"line_end":404,"column_start":32,"column_end":44},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":5782},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8966435,"byte_end":8966446,"line_start":475,"line_end":475,"column_start":20,"column_end":31},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":445},"to":{"krate":0,"index":5392}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":8969163,"byte_end":8969165,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":5527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":8974869,"byte_end":8974871,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":5527},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":8975148,"byte_end":8975150,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":5531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":8978549,"byte_end":8978551,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":5531},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":8979225,"byte_end":8979240,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":5567},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":8979381,"byte_end":8979396,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":5567},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":8979854,"byte_end":8979871,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":5576},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":8980849,"byte_end":8980866,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":5576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":8983338,"byte_end":8983355,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":5576},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":8983521,"byte_end":8983536,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":5567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8984646,"byte_end":8984655,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":5795},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8984815,"byte_end":8984824,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":5795},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8985310,"byte_end":8985322,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":5802},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8985355,"byte_end":8985367,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":5802},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8985707,"byte_end":8985719,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":5802},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8985948,"byte_end":8985957,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":5813},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8986087,"byte_end":8986096,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":5813},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8986582,"byte_end":8986594,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":5818},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8986900,"byte_end":8986912,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":5818},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8987069,"byte_end":8987080,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":5828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8987179,"byte_end":8987190,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":5828},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8987320,"byte_end":8987331,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":5828},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8987835,"byte_end":8987851,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":5838},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8987888,"byte_end":8987904,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":5838},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8992721,"byte_end":8992730,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":5661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9008924,"byte_end":9008933,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":5661},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9009012,"byte_end":9009021,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":5661},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9009399,"byte_end":9009408,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":5661},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9009433,"byte_end":9009442,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":5661},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9009480,"byte_end":9009486,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":5849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9015892,"byte_end":9015898,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":5849},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9015971,"byte_end":9015977,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":5849},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9016399,"byte_end":9016411,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":5854},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9016591,"byte_end":9016603,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":5854},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9016747,"byte_end":9016759,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":5854},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9016806,"byte_end":9016821,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":5859},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9017351,"byte_end":9017366,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":5859},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9017652,"byte_end":9017667,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":5859},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9017705,"byte_end":9017711,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":5866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9023124,"byte_end":9023132,"line_start":1034,"line_end":1034,"column_start":6,"column_end":14},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":5872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9026795,"byte_end":9026803,"line_start":1172,"line_end":1172,"column_start":21,"column_end":29},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":5872},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9027156,"byte_end":9027167,"line_start":1188,"line_end":1188,"column_start":6,"column_end":17},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":5890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/yield_now.rs","byte_start":9040941,"byte_end":9040949,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":5920},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9048081,"byte_end":9048089,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":6068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9055931,"byte_end":9055939,"line_start":446,"line_end":446,"column_start":21,"column_end":29},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":6068},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9056078,"byte_end":9056086,"line_start":452,"line_end":452,"column_start":17,"column_end":25},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":6068},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9057051,"byte_end":9057059,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":6068},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9057140,"byte_end":9057148,"line_start":482,"line_end":482,"column_start":15,"column_end":23},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":6068},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9058015,"byte_end":9058023,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":7211},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9058908,"byte_end":9058914,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":5951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9059477,"byte_end":9059480,"line_start":562,"line_end":562,"column_start":25,"column_end":28},"kind":{"Impl":{"id":490}},"from":{"krate":5,"index":3880},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9062895,"byte_end":9062903,"line_start":98,"line_end":98,"column_start":18,"column_end":26},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":6020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9064679,"byte_end":9064687,"line_start":163,"line_end":163,"column_start":25,"column_end":33},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":6020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9064895,"byte_end":9064903,"line_start":171,"line_end":171,"column_start":33,"column_end":41},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":6020},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9065224,"byte_end":9065239,"line_start":186,"line_end":186,"column_start":40,"column_end":55},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":7134},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9065540,"byte_end":9065545,"line_start":196,"line_end":196,"column_start":26,"column_end":31},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":6048},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9066163,"byte_end":9066164,"line_start":220,"line_end":220,"column_start":37,"column_end":38},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":6061},"to":{"krate":0,"index":6059}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9066349,"byte_end":9066360,"line_start":228,"line_end":228,"column_start":21,"column_end":32},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":6080},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9066504,"byte_end":9066515,"line_start":234,"line_end":234,"column_start":23,"column_end":34},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":6080},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9066662,"byte_end":9066673,"line_start":240,"line_end":240,"column_start":16,"column_end":27},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":6080},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/clock.rs","byte_start":9071258,"byte_end":9071263,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":6572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9081785,"byte_end":9081795,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":6577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9099438,"byte_end":9099448,"line_start":751,"line_end":751,"column_start":19,"column_end":29},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":6577},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9099476,"byte_end":9099486,"line_start":753,"line_end":753,"column_start":21,"column_end":31},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":6577},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9099623,"byte_end":9099633,"line_start":760,"line_end":760,"column_start":34,"column_end":44},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":6577},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9100015,"byte_end":9100020,"line_start":770,"line_end":770,"column_start":26,"column_end":31},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":6602},"to":{"krate":0,"index":6521}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9102147,"byte_end":9102152,"line_start":852,"line_end":852,"column_start":21,"column_end":26},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":6602},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9102282,"byte_end":9102285,"line_start":861,"line_end":861,"column_start":6,"column_end":9},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":6596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9102372,"byte_end":9102379,"line_start":867,"line_end":867,"column_start":9,"column_end":16},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":6588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9104917,"byte_end":9104922,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":6619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9105900,"byte_end":9105905,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":6619},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":9119229,"byte_end":9119240,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":6623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":9121218,"byte_end":9121236,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":6627},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":9121808,"byte_end":9121826,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":6627},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9125799,"byte_end":9125804,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":6631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9132032,"byte_end":9132037,"line_start":329,"line_end":329,"column_start":15,"column_end":20},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":6631},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9132245,"byte_end":9132250,"line_start":340,"line_end":340,"column_start":22,"column_end":27},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":6631},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9132275,"byte_end":9132280,"line_start":341,"line_end":341,"column_start":22,"column_end":27},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":6631},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/handle.rs","byte_start":9132657,"byte_end":9132663,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":6655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/handle.rs","byte_start":9133308,"byte_end":9133314,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":6655},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/registration.rs","byte_start":9133759,"byte_end":9133771,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":6659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/registration.rs","byte_start":9134681,"byte_end":9134693,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":6659},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/stack.rs","byte_start":9134977,"byte_end":9134982,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":6663},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/stack.rs","byte_start":9135073,"byte_end":9135078,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":6663},"to":{"krate":0,"index":6521}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9110795,"byte_end":9110801,"line_start":122,"line_end":122,"column_start":9,"column_end":15},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":6667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9114450,"byte_end":9114456,"line_start":234,"line_end":234,"column_start":18,"column_end":24},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":6667},"to":{"krate":0,"index":544}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9116445,"byte_end":9116451,"line_start":308,"line_end":308,"column_start":18,"column_end":24},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":6667},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9116928,"byte_end":9116933,"line_start":327,"line_end":327,"column_start":6,"column_end":11},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":6336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9118550,"byte_end":9118555,"line_start":389,"line_end":389,"column_start":21,"column_end":26},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":6336},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9139350,"byte_end":9139355,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":6676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9140070,"byte_end":9140075,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":6676},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9140102,"byte_end":9140107,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":6676},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9140813,"byte_end":9140820,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":6688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9144594,"byte_end":9144601,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":6688},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9144730,"byte_end":9144737,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"kind":{"Impl":{"id":534}},"from":{"krate":1,"index":7735},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9144852,"byte_end":9144859,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":6688},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9145024,"byte_end":9145031,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":6688},"to":{"krate":2,"index":1999}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9145136,"byte_end":9145143,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":6688},"to":{"krate":2,"index":1973}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9145284,"byte_end":9145291,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":6688},"to":{"krate":2,"index":1973}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9145452,"byte_end":9145459,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":6688},"to":{"krate":2,"index":2003}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9145566,"byte_end":9145573,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":6688},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9149309,"byte_end":9149317,"line_start":119,"line_end":119,"column_start":6,"column_end":14},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":6711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9150612,"byte_end":9150620,"line_start":164,"line_end":164,"column_start":32,"column_end":40},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":6711},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9153952,"byte_end":9153959,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":6716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9154088,"byte_end":9154095,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":7117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9154633,"byte_end":9154640,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":7117},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9155218,"byte_end":9155225,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":6716},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9155369,"byte_end":9155376,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":6716},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9155413,"byte_end":9155418,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"kind":{"Impl":{"id":548}},"from":{"krate":1,"index":2532},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9173558,"byte_end":9173566,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":7071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9174381,"byte_end":9174389,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":7071},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/level.rs","byte_start":9165322,"byte_end":9165327,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":6494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/level.rs","byte_start":9170079,"byte_end":9170084,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":6494},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9171200,"byte_end":9171207,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1893},"to":{"krate":0,"index":6521}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/mod.rs","byte_start":9157143,"byte_end":9157148,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":6758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/mod.rs","byte_start":9162856,"byte_end":9162860,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":6772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/bit.rs","byte_start":9175222,"byte_end":9175226,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":6966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/bit.rs","byte_start":9176700,"byte_end":9176704,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":6966},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/addr.rs","byte_start":9183923,"byte_end":9183930,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":6972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/entry.rs","byte_start":9186565,"byte_end":9186572,"line_start":3,"line_end":3,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1893},"to":{"krate":0,"index":6821}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/generation.rs","byte_start":9186959,"byte_end":9186969,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":6987},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9188108,"byte_end":9188113,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":6844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9188455,"byte_end":9188461,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":6846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9192413,"byte_end":9192418,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":6844},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9192724,"byte_end":9192730,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":6846},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/shard.rs","byte_start":9194873,"byte_end":9194878,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":6890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/shard.rs","byte_start":9196557,"byte_end":9196562,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":6890},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/slot.rs","byte_start":9196939,"byte_end":9196943,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":6913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/stack.rs","byte_start":9197914,"byte_end":9197927,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":6934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/stack.rs","byte_start":9198755,"byte_end":9198768,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":6934},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9178302,"byte_end":9178306,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":6949},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9178343,"byte_end":9178347,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":6949},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9178370,"byte_end":9178374,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":6949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9179889,"byte_end":9179893,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":6949},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180390,"byte_end":180400,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":760},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180459,"byte_end":180469,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":760},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181758,"byte_end":181766,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":774},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181803,"byte_end":181811,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":774},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181865,"byte_end":181875,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":184879,"byte_end":184889,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":760},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":186227,"byte_end":186235,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":186434,"byte_end":186442,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":774},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/rand.rs","byte_start":196514,"byte_end":196522,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":7012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/wake.rs","byte_start":198062,"byte_end":198066,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1903},"to":{"krate":0,"index":815}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/wake.rs","byte_start":198069,"byte_end":198073,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1915},"to":{"krate":0,"index":815}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/wake.rs","byte_start":198384,"byte_end":198392,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":7021},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202358,"byte_end":202366,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":7030},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202616,"byte_end":202624,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":7030},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202729,"byte_end":202737,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":7030},"to":{"krate":2,"index":2087}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":203046,"byte_end":203056,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":7039},"to":{"krate":4294967295,"index":4294967295}}]}