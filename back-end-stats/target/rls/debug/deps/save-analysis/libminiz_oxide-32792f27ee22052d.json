{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0","program":"/Users/raphael/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","miniz_oxide","--edition=2018","/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=32792f27ee22052d","-C","extra-filename=-32792f27ee22052d","--out-dir","/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps","-L","dependency=/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps","--extern","adler=/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps/libadler-c821c5517ce1286b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/raphael/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/raphael/programming/web-projects/roundnet-stats/back-end-stats/target/rls/debug/deps/libminiz_oxide-32792f27ee22052d.rmeta"},"prelude":{"crate_id":{"name":"miniz_oxide","disambiguator":[4691091720739214545,17242568732050781448]},"crate_root":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src","external_crates":[{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11611887195329836898,18391061204127126749]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[8031993392717489033,4124505603786489705]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[15271802224688203332,8792150453795694033]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[7165577602573969849,9858108452520037846]}},{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/shared.rs","num":5,"id":{"name":"adler","disambiguator":[3951958716963684372,3815331174322533622]}}],"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":0,"byte_end":4388,"line_start":1,"line_end":163,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":533},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":948,"byte_end":962,"line_start":37,"line_end":37,"column_start":24,"column_end":38},"alias_span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":966,"byte_end":982,"line_start":37,"line_end":37,"column_start":42,"column_end":58},"name":"mz_adler32_oxide","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":529},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1008,"byte_end":1023,"line_start":38,"line_end":38,"column_start":25,"column_end":40},"alias_span":null,"name":"MZ_ADLER32_INIT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":530},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1025,"byte_end":1047,"line_start":38,"line_end":38,"column_start":42,"column_end":64},"alias_span":null,"name":"MZ_DEFAULT_WINDOW_BITS","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":0,"byte_end":4388,"line_start":1,"line_end":163,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":333},{"krate":0,"index":527},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":841},{"krate":0,"index":872},{"krate":0,"index":871},{"krate":0,"index":869},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":860},{"krate":0,"index":538},{"krate":0,"index":874},{"krate":0,"index":896},{"krate":0,"index":895},{"krate":0,"index":893},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":884},{"krate":0,"index":898},{"krate":0,"index":932},{"krate":0,"index":931},{"krate":0,"index":929},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":920},{"krate":0,"index":934},{"krate":0,"index":951},{"krate":0,"index":950},{"krate":0,"index":948},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":939},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":953},{"krate":0,"index":970},{"krate":0,"index":969},{"krate":0,"index":967},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":957},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":548}],"decl_id":null,"docs":" A pure rust replacement for the [miniz](https://github.com/richgel999/miniz)\n DEFLATE/zlib encoder/decoder.\n The plan for this crate is to be used as a back-end for the\n [flate2](https://github.com/alexcrichton/flate2-rs) crate and eventually remove the\n need to depend on a C library.","sig":null,"attributes":[{"value":"! A pure rust replacement for the [miniz](https://github.com/richgel999/miniz)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":0,"byte_end":80,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"! DEFLATE/zlib encoder/decoder.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":81,"byte_end":114,"line_start":2,"line_end":2,"column_start":1,"column_end":34}},{"value":"! The plan for this crate is to be used as a back-end for the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":115,"byte_end":178,"line_start":3,"line_end":3,"column_start":1,"column_end":64}},{"value":"! [flate2](https://github.com/alexcrichton/flate2-rs) crate and eventually remove the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":179,"byte_end":266,"line_start":4,"line_end":4,"column_start":1,"column_end":88}},{"value":"! need to depend on a C library.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":267,"byte_end":301,"line_start":5,"line_end":5,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":302,"byte_end":305,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":306,"byte_end":317,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"! ## Simple compression/decompression:","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":318,"byte_end":358,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"! ``` rust","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":359,"byte_end":371,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":372,"byte_end":375,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! use miniz_oxide::inflate::decompress_to_vec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":376,"byte_end":424,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"! use miniz_oxide::deflate::compress_to_vec;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":425,"byte_end":471,"line_start":12,"line_end":12,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":472,"byte_end":475,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! fn roundtrip(data: &[u8]) {","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":476,"byte_end":507,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"!     let compressed = compress_to_vec(data, 6);","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":508,"byte_end":558,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"!     let decompressed = decompress_to_vec(compressed.as_slice()).expect(\"Failed to decompress!\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":559,"byte_end":659,"line_start":16,"line_end":16,"column_start":1,"column_end":101}},{"value":"! #   let _ = decompressed;","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":660,"byte_end":689,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"! }","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":690,"byte_end":695,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":696,"byte_end":699,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! # roundtrip(b\"Test_data test data lalalal blabla\");","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":700,"byte_end":755,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":756,"byte_end":759,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":760,"byte_end":767,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"allow(warnings)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":769,"byte_end":788,"line_start":24,"line_end":24,"column_start":1,"column_end":20}},{"value":"forbid(unsafe_code)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":789,"byte_end":812,"line_start":25,"line_end":25,"column_start":1,"column_end":24}},{"value":"no_std","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":813,"byte_end":823,"line_start":26,"line_end":26,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"deflate","qualname":"::deflate","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":39},{"krate":0,"index":314},{"krate":0,"index":329},{"krate":0,"index":654},{"krate":0,"index":685},{"krate":0,"index":684},{"krate":0,"index":682},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":673},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332}],"decl_id":null,"docs":" This module contains functionality for compression.\n","sig":null,"attributes":[{"value":"! This module contains functionality for compression.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":4390,"byte_end":4445,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":39},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"core","qualname":"::deflate::core","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":58},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":69},{"krate":0,"index":564},{"krate":0,"index":569},{"krate":0,"index":567},{"krate":0,"index":71},{"krate":0,"index":570},{"krate":0,"index":598},{"krate":0,"index":597},{"krate":0,"index":595},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":586},{"krate":0,"index":600},{"krate":0,"index":625},{"krate":0,"index":624},{"krate":0,"index":622},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":613},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":627},{"krate":0,"index":652},{"krate":0,"index":651},{"krate":0,"index":649},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":640},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":116},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":148},{"krate":0,"index":152},{"krate":0,"index":158},{"krate":0,"index":164},{"krate":0,"index":171},{"krate":0,"index":177},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":205},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":219},{"krate":0,"index":240},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":260},{"krate":0,"index":278},{"krate":0,"index":283},{"krate":0,"index":290},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":311},{"krate":0,"index":313}],"decl_id":null,"docs":" Streaming compression functionality.\n","sig":null,"attributes":[{"value":"! Streaming compression functionality.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":13042,"byte_end":13082,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":71},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":21904,"byte_end":21917,"line_start":168,"line_end":168,"column_start":9,"column_end":22},"name":"deflate_flags","qualname":"::deflate::core::deflate_flags","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":72},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":21973,"byte_end":21996,"line_start":170,"line_end":170,"column_start":15,"column_end":38},"name":"TDEFL_WRITE_ZLIB_HEADER","qualname":"::deflate::core::deflate_flags::TDEFL_WRITE_ZLIB_HEADER","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Whether to use a zlib wrapper.\n","sig":null,"attributes":[{"value":"/ Whether to use a zlib wrapper.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":21924,"byte_end":21958,"line_start":169,"line_end":169,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":73},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":22079,"byte_end":22100,"line_start":172,"line_end":172,"column_start":15,"column_end":36},"name":"TDEFL_COMPUTE_ADLER32","qualname":"::deflate::core::deflate_flags::TDEFL_COMPUTE_ADLER32","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Should we compute the adler32 checksum.\n","sig":null,"attributes":[{"value":"/ Should we compute the adler32 checksum.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":22021,"byte_end":22064,"line_start":171,"line_end":171,"column_start":5,"column_end":48}}]},{"kind":"Const","id":{"krate":0,"index":74},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":22273,"byte_end":22298,"line_start":175,"line_end":175,"column_start":15,"column_end":40},"name":"TDEFL_GREEDY_PARSING_FLAG","qualname":"::deflate::core::deflate_flags::TDEFL_GREEDY_PARSING_FLAG","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Should we use greedy parsing (as opposed to lazy parsing where look ahead one or more\n bytes to check for better matches.)\n","sig":null,"attributes":[{"value":"/ Should we use greedy parsing (as opposed to lazy parsing where look ahead one or more","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":22125,"byte_end":22214,"line_start":173,"line_end":173,"column_start":5,"column_end":94}},{"value":"/ bytes to check for better matches.)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":22219,"byte_end":22258,"line_start":174,"line_end":174,"column_start":5,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":75},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":22452,"byte_end":22487,"line_start":178,"line_end":178,"column_start":15,"column_end":50},"name":"TDEFL_NONDETERMINISTIC_PARSING_FLAG","qualname":"::deflate::core::deflate_flags::TDEFL_NONDETERMINISTIC_PARSING_FLAG","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Used in miniz to skip zero-initializing hash and dict. We don't do this here, so\n this flag is ignored.\n","sig":null,"attributes":[{"value":"/ Used in miniz to skip zero-initializing hash and dict. We don't do this here, so","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":22323,"byte_end":22407,"line_start":176,"line_end":176,"column_start":5,"column_end":89}},{"value":"/ this flag is ignored.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":22412,"byte_end":22437,"line_start":177,"line_end":177,"column_start":5,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":76},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":22574,"byte_end":22591,"line_start":180,"line_end":180,"column_start":15,"column_end":32},"name":"TDEFL_RLE_MATCHES","qualname":"::deflate::core::deflate_flags::TDEFL_RLE_MATCHES","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Only look for matches with a distance of 0.\n","sig":null,"attributes":[{"value":"/ Only look for matches with a distance of 0.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":22512,"byte_end":22559,"line_start":179,"line_end":179,"column_start":5,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":77},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":22683,"byte_end":22703,"line_start":182,"line_end":182,"column_start":15,"column_end":35},"name":"TDEFL_FILTER_MATCHES","qualname":"::deflate::core::deflate_flags::TDEFL_FILTER_MATCHES","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Only use matches that are at least 6 bytes long.\n","sig":null,"attributes":[{"value":"/ Only use matches that are at least 6 bytes long.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":22616,"byte_end":22668,"line_start":181,"line_end":181,"column_start":5,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":78},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":22886,"byte_end":22915,"line_start":185,"line_end":185,"column_start":15,"column_end":44},"name":"TDEFL_FORCE_ALL_STATIC_BLOCKS","qualname":"::deflate::core::deflate_flags::TDEFL_FORCE_ALL_STATIC_BLOCKS","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Force the compressor to only output static blocks. (Blocks using the default huffman codes\n specified in the deflate specification.)\n","sig":null,"attributes":[{"value":"/ Force the compressor to only output static blocks. (Blocks using the default huffman codes","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":22728,"byte_end":22822,"line_start":183,"line_end":183,"column_start":5,"column_end":99}},{"value":"/ specified in the deflate specification.)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":22827,"byte_end":22871,"line_start":184,"line_end":184,"column_start":5,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":79},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":23019,"byte_end":23045,"line_start":187,"line_end":187,"column_start":15,"column_end":41},"name":"TDEFL_FORCE_ALL_RAW_BLOCKS","qualname":"::deflate::core::deflate_flags::TDEFL_FORCE_ALL_RAW_BLOCKS","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Force the compressor to only output raw/uncompressed blocks.\n","sig":null,"attributes":[{"value":"/ Force the compressor to only output raw/uncompressed blocks.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":22940,"byte_end":23004,"line_start":186,"line_end":186,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":571},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":23334,"byte_end":23341,"line_start":197,"line_end":197,"column_start":5,"column_end":12},"name":"Default","qualname":"::deflate::core::CompressionStrategy::Default","value":"CompressionStrategy::Default","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Don't use any of the special strategies.\n","sig":null,"attributes":[{"value":"/ Don't use any of the special strategies.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":23285,"byte_end":23329,"line_start":196,"line_end":196,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":574},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":23408,"byte_end":23416,"line_start":199,"line_end":199,"column_start":5,"column_end":13},"name":"Filtered","qualname":"::deflate::core::CompressionStrategy::Filtered","value":"CompressionStrategy::Filtered","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Only use matches that are at least 5 bytes long.\n","sig":null,"attributes":[{"value":"/ Only use matches that are at least 5 bytes long.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":23351,"byte_end":23403,"line_start":198,"line_end":198,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":577},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":23492,"byte_end":23503,"line_start":201,"line_end":201,"column_start":5,"column_end":16},"name":"HuffmanOnly","qualname":"::deflate::core::CompressionStrategy::HuffmanOnly","value":"CompressionStrategy::HuffmanOnly","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Don't look for matches, only huffman encode the literals.\n","sig":null,"attributes":[{"value":"/ Don't look for matches, only huffman encode the literals.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":23426,"byte_end":23487,"line_start":200,"line_end":200,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":580},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":23598,"byte_end":23601,"line_start":203,"line_end":203,"column_start":5,"column_end":8},"name":"RLE","qualname":"::deflate::core::CompressionStrategy::RLE","value":"CompressionStrategy::RLE","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Only look for matches with a distance of 1, i.e do run-length encoding only.\n","sig":null,"attributes":[{"value":"/ Only look for matches with a distance of 1, i.e do run-length encoding only.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":23513,"byte_end":23593,"line_start":202,"line_end":202,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":583},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":23738,"byte_end":23743,"line_start":206,"line_end":206,"column_start":5,"column_end":10},"name":"Fixed","qualname":"::deflate::core::CompressionStrategy::Fixed","value":"CompressionStrategy::Fixed","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Only use static/fixed blocks. (Blocks using the default huffman codes\n specified in the deflate specification.)\n","sig":null,"attributes":[{"value":"/ Only use static/fixed blocks. (Blocks using the default huffman codes","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":23611,"byte_end":23684,"line_start":204,"line_end":204,"column_start":5,"column_end":78}},{"value":"/ specified in the deflate specification.)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":23689,"byte_end":23733,"line_start":205,"line_end":205,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":570},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":23259,"byte_end":23278,"line_start":195,"line_end":195,"column_start":10,"column_end":29},"name":"CompressionStrategy","qualname":"::deflate::core::CompressionStrategy","value":"CompressionStrategy::{Default, Filtered, HuffmanOnly, RLE, Fixed}","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":583}],"decl_id":null,"docs":" Strategy setting for compression.","sig":null,"attributes":[{"value":"/ Strategy setting for compression.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":23069,"byte_end":23106,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":23107,"byte_end":23110,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ The non-default settings offer some special-case compression variants.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":23111,"byte_end":23185,"line_start":192,"line_end":192,"column_start":1,"column_end":75}},{"value":"repr(i32)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":23186,"byte_end":23198,"line_start":193,"line_end":193,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":601},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":23960,"byte_end":23964,"line_start":214,"line_end":214,"column_start":5,"column_end":9},"name":"None","qualname":"::deflate::core::TDEFLFlush::None","value":"TDEFLFlush::None","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Compress as much as there is space for, and then return\n waiting for more input.\n","sig":null,"attributes":[{"value":"/ Compress as much as there is space for, and then return","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":23864,"byte_end":23923,"line_start":212,"line_end":212,"column_start":5,"column_end":64}},{"value":"/ waiting for more input.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":23928,"byte_end":23955,"line_start":213,"line_end":213,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":604},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":24043,"byte_end":24047,"line_start":216,"line_end":216,"column_start":5,"column_end":9},"name":"Sync","qualname":"::deflate::core::TDEFLFlush::Sync","value":"TDEFLFlush::Sync","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Try to flush the current data and output an empty raw block.\n","sig":null,"attributes":[{"value":"/ Try to flush the current data and output an empty raw block.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":23974,"byte_end":24038,"line_start":215,"line_end":215,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":607},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":24173,"byte_end":24177,"line_start":219,"line_end":219,"column_start":5,"column_end":9},"name":"Full","qualname":"::deflate::core::TDEFLFlush::Full","value":"TDEFLFlush::Full","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Same as sync, but reset the dictionary so that the following data does not depend\n on previous data.\n","sig":null,"attributes":[{"value":"/ Same as sync, but reset the dictionary so that the following data does not depend","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":24057,"byte_end":24142,"line_start":217,"line_end":217,"column_start":5,"column_end":90}},{"value":"/ on previous data.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":24147,"byte_end":24168,"line_start":218,"line_end":218,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":610},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":24239,"byte_end":24245,"line_start":221,"line_end":221,"column_start":5,"column_end":11},"name":"Finish","qualname":"::deflate::core::TDEFLFlush::Finish","value":"TDEFLFlush::Finish","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Try to flush everything and end the stream.\n","sig":null,"attributes":[{"value":"/ Try to flush everything and end the stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":24187,"byte_end":24234,"line_start":220,"line_end":220,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":600},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":23847,"byte_end":23857,"line_start":211,"line_end":211,"column_start":10,"column_end":20},"name":"TDEFLFlush","qualname":"::deflate::core::TDEFLFlush","value":"TDEFLFlush::{None, Sync, Full, Finish}","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":610}],"decl_id":null,"docs":" A list of deflate flush types.\n","sig":null,"attributes":[{"value":"/ A list of deflate flush types.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":23752,"byte_end":23786,"line_start":209,"line_end":209,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":24653,"byte_end":24656,"line_start":237,"line_end":237,"column_start":12,"column_end":15},"name":"new","qualname":"<TDEFLFlush>::new","value":"fn (flush: i32) -> Result<Self, MZError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":628},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":25049,"byte_end":25057,"line_start":252,"line_end":252,"column_start":5,"column_end":13},"name":"BadParam","qualname":"::deflate::core::TDEFLStatus::BadParam","value":"TDEFLStatus::BadParam","parent":{"krate":0,"index":627},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":631},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":25068,"byte_end":25080,"line_start":253,"line_end":253,"column_start":5,"column_end":17},"name":"PutBufFailed","qualname":"::deflate::core::TDEFLStatus::PutBufFailed","value":"TDEFLStatus::PutBufFailed","parent":{"krate":0,"index":627},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":634},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":25091,"byte_end":25095,"line_start":254,"line_end":254,"column_start":5,"column_end":9},"name":"Okay","qualname":"::deflate::core::TDEFLStatus::Okay","value":"TDEFLStatus::Okay","parent":{"krate":0,"index":627},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":637},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":25105,"byte_end":25109,"line_start":255,"line_end":255,"column_start":5,"column_end":9},"name":"Done","qualname":"::deflate::core::TDEFLStatus::Done","value":"TDEFLStatus::Done","parent":{"krate":0,"index":627},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":627},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":25031,"byte_end":25042,"line_start":251,"line_end":251,"column_start":10,"column_end":21},"name":"TDEFLStatus","qualname":"::deflate::core::TDEFLStatus","value":"TDEFLStatus::{BadParam, PutBufFailed, Okay, Done}","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":637}],"decl_id":null,"docs":" Return status codes.\n","sig":null,"attributes":[{"value":"/ Return status codes.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":24933,"byte_end":24957,"line_start":248,"line_end":248,"column_start":1,"column_end":25}},{"value":"repr(i32)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":24958,"byte_end":24970,"line_start":249,"line_end":249,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":111},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":29497,"byte_end":29512,"line_start":394,"line_end":394,"column_start":12,"column_end":27},"name":"CompressorOxide","qualname":"::deflate::core::CompressorOxide","value":"CompressorOxide {  }","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" Main compression struct.\n","sig":null,"attributes":[{"value":"/ Main compression struct.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":29457,"byte_end":29485,"line_start":393,"line_end":393,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":29810,"byte_end":29813,"line_start":406,"line_end":406,"column_start":12,"column_end":15},"name":"new","qualname":"<CompressorOxide>::new","value":"fn (flags: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `CompressorOxide` with the given flags.","sig":null,"attributes":[{"value":"/ Create a new `CompressorOxide` with the given flags.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":29637,"byte_end":29693,"line_start":402,"line_end":402,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":29698,"byte_end":29701,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":29706,"byte_end":29717,"line_start":404,"line_end":404,"column_start":5,"column_end":16}},{"value":"/ This function may be changed to take different parameters in the future.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":29722,"byte_end":29798,"line_start":405,"line_end":405,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":30219,"byte_end":30226,"line_start":418,"line_end":418,"column_start":12,"column_end":19},"name":"adler32","qualname":"<CompressorOxide>::adler32","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the adler32 checksum of the currently encoded data.\n","sig":null,"attributes":[{"value":"/ Get the adler32 checksum of the currently encoded data.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":30148,"byte_end":30207,"line_start":417,"line_end":417,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":30401,"byte_end":30419,"line_start":424,"line_end":424,"column_start":12,"column_end":30},"name":"prev_return_status","qualname":"<CompressorOxide>::prev_return_status","value":"fn (&self) -> TDEFLStatus","parent":null,"children":[],"decl_id":null,"docs":" Get the return status of the previous [`compress`](fn.compress.html)\n call with this compressor.\n","sig":null,"attributes":[{"value":"/ Get the return status of the previous [`compress`](fn.compress.html)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":30282,"byte_end":30354,"line_start":422,"line_end":422,"column_start":5,"column_end":77}},{"value":"/ call with this compressor.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":30359,"byte_end":30389,"line_start":423,"line_end":423,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":30658,"byte_end":30663,"line_start":432,"line_end":432,"column_start":12,"column_end":17},"name":"flags","qualname":"<CompressorOxide>::flags","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the raw compressor flags.","sig":null,"attributes":[{"value":"/ Get the raw compressor flags.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":30494,"byte_end":30527,"line_start":428,"line_end":428,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":30532,"byte_end":30535,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":30540,"byte_end":30551,"line_start":430,"line_end":430,"column_start":5,"column_end":16}},{"value":"/ This function may be deprecated or changed in the future to use more rust-style flags.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":30556,"byte_end":30646,"line_start":431,"line_end":431,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":30816,"byte_end":30827,"line_start":437,"line_end":437,"column_start":12,"column_end":23},"name":"data_format","qualname":"<CompressorOxide>::data_format","value":"fn (&self) -> DataFormat","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the compressor is wrapping the data in a zlib format or not.\n","sig":null,"attributes":[{"value":"/ Returns whether the compressor is wrapping the data in a zlib format or not.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":30724,"byte_end":30804,"line_start":436,"line_end":436,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":31137,"byte_end":31142,"line_start":448,"line_end":448,"column_start":12,"column_end":17},"name":"reset","qualname":"<CompressorOxide>::reset","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reset the state of the compressor, keeping the same parameters.","sig":null,"attributes":[{"value":"/ Reset the state of the compressor, keeping the same parameters.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":31010,"byte_end":31077,"line_start":445,"line_end":445,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":31082,"byte_end":31085,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This avoids re-allocating data.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":31090,"byte_end":31125,"line_start":447,"line_end":447,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":31678,"byte_end":31699,"line_start":462,"line_end":462,"column_start":12,"column_end":33},"name":"set_compression_level","qualname":"<CompressorOxide>::set_compression_level","value":"fn (&mut self, level: CompressionLevel) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the compression level of the compressor.","sig":null,"attributes":[{"value":"/ Set the compression level of the compressor.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":31429,"byte_end":31477,"line_start":457,"line_end":457,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":31482,"byte_end":31485,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Using this to change level after compresson has started is supported.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":31490,"byte_end":31563,"line_start":459,"line_end":459,"column_start":5,"column_end":78}},{"value":"/ # Notes","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":31568,"byte_end":31579,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/ The compression strategy will be reset to the default one when this is called.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":31584,"byte_end":31666,"line_start":461,"line_end":461,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":32118,"byte_end":32143,"line_start":472,"line_end":472,"column_start":12,"column_end":37},"name":"set_compression_level_raw","qualname":"<CompressorOxide>::set_compression_level_raw","value":"fn (&mut self, level: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the compression level of the compressor using an integer value.","sig":null,"attributes":[{"value":"/ Set the compression level of the compressor using an integer value.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":31846,"byte_end":31917,"line_start":467,"line_end":467,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":31922,"byte_end":31925,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ Using this to change level after compresson has started is supported.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":31930,"byte_end":32003,"line_start":469,"line_end":469,"column_start":5,"column_end":78}},{"value":"/ # Notes","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":32008,"byte_end":32019,"line_start":470,"line_end":470,"column_start":5,"column_end":16}},{"value":"/ The compression strategy will be reset to the default one when this is called.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":32024,"byte_end":32106,"line_start":471,"line_end":471,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":32735,"byte_end":32755,"line_start":486,"line_end":486,"column_start":12,"column_end":32},"name":"set_format_and_level","qualname":"<CompressorOxide>::set_format_and_level","value":"fn (&mut self, data_format: DataFormat, level: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Update the compression settings of the compressor.","sig":null,"attributes":[{"value":"/ Update the compression settings of the compressor.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":32270,"byte_end":32324,"line_start":477,"line_end":477,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":32329,"byte_end":32332,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Changing the `DataFormat` after compression has started will result in","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":32337,"byte_end":32411,"line_start":479,"line_end":479,"column_start":5,"column_end":79}},{"value":"/ a corrupted stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":32416,"byte_end":32439,"line_start":480,"line_end":480,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":32444,"byte_end":32447,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":32452,"byte_end":32463,"line_start":482,"line_end":482,"column_start":5,"column_end":16}},{"value":"/ This function mainly intented for setting the initial settings after e.g creating with","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":32468,"byte_end":32558,"line_start":483,"line_end":483,"column_start":5,"column_end":95}},{"value":"/ `default` or after calling `CompressorOxide::reset()`, and behaviour may be changed","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":32563,"byte_end":32650,"line_start":484,"line_end":484,"column_start":5,"column_end":92}},{"value":"/ to disallow calling it after starting compression in the future.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":32655,"byte_end":32723,"line_start":485,"line_end":485,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":128},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":33659,"byte_end":33671,"line_start":514,"line_end":514,"column_start":12,"column_end":24},"name":"CallbackFunc","qualname":"::deflate::core::CallbackFunc","value":"CallbackFunc { put_buf_func }","parent":null,"children":[{"krate":0,"index":130}],"decl_id":null,"docs":" Callback function and user used in `compress_to_output`.\n","sig":null,"attributes":[{"value":"/ Callback function and user used in `compress_to_output`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":33587,"byte_end":33647,"line_start":513,"line_end":513,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":130},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":33686,"byte_end":33698,"line_start":515,"line_end":515,"column_start":9,"column_end":21},"name":"put_buf_func","qualname":"::deflate::core::CallbackFunc::put_buf_func","value":"&'a mut (dyn for<'r> core::ops::FnMut(&'r [u8]) -> bool + 'a)","parent":{"krate":0,"index":128},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":308},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":92467,"byte_end":92475,"line_start":2180,"line_end":2180,"column_start":8,"column_end":16},"name":"compress","qualname":"::deflate::core::compress","value":"fn (d: &mut CompressorOxide, in_buf: &[u8], out_buf: &mut [u8], flush: TDEFLFlush) -> (TDEFLStatus, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Main compression function. Tries to compress as much as possible from `in_buf` and\n puts compressed output into `out_buf`.","sig":null,"attributes":[{"value":"/ Main compression function. Tries to compress as much as possible from `in_buf` and","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":91956,"byte_end":92042,"line_start":2170,"line_end":2170,"column_start":1,"column_end":87}},{"value":"/ puts compressed output into `out_buf`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":92043,"byte_end":92085,"line_start":2171,"line_end":2171,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":92086,"byte_end":92089,"line_start":2172,"line_end":2172,"column_start":1,"column_end":4}},{"value":"/ The value of `flush` determines if the compressor should attempt to flush all output","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":92090,"byte_end":92178,"line_start":2173,"line_end":2173,"column_start":1,"column_end":89}},{"value":"/ and alternatively try to finish the stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":92179,"byte_end":92226,"line_start":2174,"line_end":2174,"column_start":1,"column_end":48}},{"value":"/ Should be `TDeflflush::Finish` on the final call.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":92227,"byte_end":92280,"line_start":2175,"line_end":2175,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":92281,"byte_end":92284,"line_start":2176,"line_end":2176,"column_start":1,"column_end":4}},{"value":"/ # Returns","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":92285,"byte_end":92298,"line_start":2177,"line_end":2177,"column_start":1,"column_end":14}},{"value":"/ Returns a tuple containing the current status of the compressor, the current position","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":92299,"byte_end":92388,"line_start":2178,"line_end":2178,"column_start":1,"column_end":90}},{"value":"/ in the input buffer and the current position in the output buffer.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":92389,"byte_end":92459,"line_start":2179,"line_end":2179,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":309},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":93027,"byte_end":93045,"line_start":2201,"line_end":2201,"column_start":8,"column_end":26},"name":"compress_to_output","qualname":"::deflate::core::compress_to_output","value":"fn (d: &mut CompressorOxide, in_buf: &[u8], flush: TDEFLFlush, mut callback_func: impl FnMut(&[u8]) -> bool) -> (TDEFLStatus, usize)","parent":null,"children":[],"decl_id":null,"docs":" Main compression function. Callbacks output.","sig":null,"attributes":[{"value":"/ Main compression function. Callbacks output.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":92725,"byte_end":92773,"line_start":2193,"line_end":2193,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":92774,"byte_end":92777,"line_start":2194,"line_end":2194,"column_start":1,"column_end":4}},{"value":"/ # Returns","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":92778,"byte_end":92791,"line_start":2195,"line_end":2195,"column_start":1,"column_end":14}},{"value":"/ Returns a tuple containing the current status of the compressor, the current position","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":92792,"byte_end":92881,"line_start":2196,"line_end":2196,"column_start":1,"column_end":90}},{"value":"/ in the input buffer.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":92882,"byte_end":92906,"line_start":2197,"line_end":2197,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":92907,"byte_end":92910,"line_start":2198,"line_end":2198,"column_start":1,"column_end":4}},{"value":"/ The caller is responsible for ensuring the `CallbackFunc` struct will not cause undefined","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":92911,"byte_end":93004,"line_start":2199,"line_end":2199,"column_start":1,"column_end":94}},{"value":"/ behaviour.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":93005,"byte_end":93019,"line_start":2200,"line_end":2200,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":313},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":97014,"byte_end":97047,"line_start":2320,"line_end":2320,"column_start":8,"column_end":41},"name":"create_comp_flags_from_zip_params","qualname":"::deflate::core::create_comp_flags_from_zip_params","value":"fn (level: i32, window_bits: i32, strategy: i32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Create a set of compression flags using parameters used by zlib and other compressors.\n Mainly intented for use with transition from c libraries as it deals with raw integers.","sig":null,"attributes":[{"value":"/ Create a set of compression flags using parameters used by zlib and other compressors.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":96365,"byte_end":96455,"line_start":2308,"line_end":2308,"column_start":1,"column_end":91}},{"value":"/ Mainly intented for use with transition from c libraries as it deals with raw integers.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":96456,"byte_end":96547,"line_start":2309,"line_end":2309,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":96548,"byte_end":96551,"line_start":2310,"line_end":2310,"column_start":1,"column_end":4}},{"value":"/ # Parameters","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":96552,"byte_end":96568,"line_start":2311,"line_end":2311,"column_start":1,"column_end":17}},{"value":"/ `level` determines compression level. Clamped to maximum of 10. Negative values result in","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":96569,"byte_end":96662,"line_start":2312,"line_end":2312,"column_start":1,"column_end":94}},{"value":"/ `Compressionlevel::DefaultLevel`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":96663,"byte_end":96700,"line_start":2313,"line_end":2313,"column_start":1,"column_end":38}},{"value":"/ `window_bits`: Above 0, wraps the stream in a zlib wrapper, 0 or negative for a raw deflate","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":96701,"byte_end":96796,"line_start":2314,"line_end":2314,"column_start":1,"column_end":96}},{"value":"/ stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":96797,"byte_end":96808,"line_start":2315,"line_end":2315,"column_start":1,"column_end":12}},{"value":"/ `strategy`: Sets the strategy if this conforms to any of the values in `CompressionStrategy`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":96809,"byte_end":96906,"line_start":2316,"line_end":2316,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":96907,"byte_end":96910,"line_start":2317,"line_end":2317,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":96911,"byte_end":96922,"line_start":2318,"line_end":2318,"column_start":1,"column_end":12}},{"value":"/ This function may be removed or moved to the `miniz_oxide_c_api` in the future.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":96923,"byte_end":97006,"line_start":2319,"line_end":2319,"column_start":1,"column_end":84}}]},{"kind":"Mod","id":{"krate":0,"index":314},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/stream.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::deflate::stream","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/stream.rs","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":323},{"krate":0,"index":328}],"decl_id":null,"docs":" Extra streaming compression functionality.","sig":null,"attributes":[{"value":"! Extra streaming compression functionality.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/stream.rs","byte_start":99600,"byte_end":99646,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/stream.rs","byte_start":99647,"byte_end":99650,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! As of now this is mainly inteded for use to build a higher-level wrapper.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/stream.rs","byte_start":99651,"byte_end":99728,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/stream.rs","byte_start":99729,"byte_end":99732,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! There is no DeflateState as the needed state is contained in the compressor struct itself.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/stream.rs","byte_start":99733,"byte_end":99827,"line_start":5,"line_end":5,"column_start":1,"column_end":95}}]},{"kind":"Function","id":{"krate":0,"index":328},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/stream.rs","byte_start":100379,"byte_end":100386,"line_start":20,"line_end":20,"column_start":8,"column_end":15},"name":"deflate","qualname":"::deflate::stream::deflate","value":"fn (compressor: &mut CompressorOxide, input: &[u8], output: &mut [u8], flush: MZFlush) -> StreamResult","parent":null,"children":[],"decl_id":null,"docs":" Try to compress from input to output with the given Compressor","sig":null,"attributes":[{"value":"/ Try to compress from input to output with the given Compressor","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/stream.rs","byte_start":100000,"byte_end":100066,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/stream.rs","byte_start":100067,"byte_end":100070,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/stream.rs","byte_start":100071,"byte_end":100083,"line_start":13,"line_end":13,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/stream.rs","byte_start":100084,"byte_end":100087,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Returns `MZError::Buf` If the size of the `output` slice is empty or no progress was made due to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/stream.rs","byte_start":100088,"byte_end":100188,"line_start":15,"line_end":15,"column_start":1,"column_end":101}},{"value":"/ lack of expected input data or called after the compression was finished without","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/stream.rs","byte_start":100189,"byte_end":100273,"line_start":16,"line_end":16,"column_start":1,"column_end":85}},{"value":"/ MZFlush::Finish.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/stream.rs","byte_start":100274,"byte_end":100294,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/stream.rs","byte_start":100295,"byte_end":100298,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Returns `MZError::Param` if the compressor parameters are set wrong.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/stream.rs","byte_start":100299,"byte_end":100371,"line_start":19,"line_end":19,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":655},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":4966,"byte_end":4979,"line_start":18,"line_end":18,"column_start":5,"column_end":18},"name":"NoCompression","qualname":"::deflate::CompressionLevel::NoCompression","value":"CompressionLevel::NoCompression","parent":{"krate":0,"index":654},"children":[],"decl_id":null,"docs":" Don't do any compression, only output uncompressed blocks.\n","sig":null,"attributes":[{"value":"/ Don't do any compression, only output uncompressed blocks.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":4899,"byte_end":4961,"line_start":17,"line_end":17,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":658},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":5079,"byte_end":5088,"line_start":20,"line_end":20,"column_start":5,"column_end":14},"name":"BestSpeed","qualname":"::deflate::CompressionLevel::BestSpeed","value":"CompressionLevel::BestSpeed","parent":{"krate":0,"index":654},"children":[],"decl_id":null,"docs":" Fast compression. Uses a special compression routine that is optimized for speed.\n","sig":null,"attributes":[{"value":"/ Fast compression. Uses a special compression routine that is optimized for speed.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":4989,"byte_end":5074,"line_start":19,"line_end":19,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":661},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":5177,"byte_end":5192,"line_start":22,"line_end":22,"column_start":5,"column_end":20},"name":"BestCompression","qualname":"::deflate::CompressionLevel::BestCompression","value":"CompressionLevel::BestCompression","parent":{"krate":0,"index":654},"children":[],"decl_id":null,"docs":" Slow/high compression. Do a lot of checks to try to find good matches.\n","sig":null,"attributes":[{"value":"/ Slow/high compression. Do a lot of checks to try to find good matches.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":5098,"byte_end":5172,"line_start":21,"line_end":21,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":664},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":5246,"byte_end":5261,"line_start":24,"line_end":24,"column_start":5,"column_end":20},"name":"UberCompression","qualname":"::deflate::CompressionLevel::UberCompression","value":"CompressionLevel::UberCompression","parent":{"krate":0,"index":654},"children":[],"decl_id":null,"docs":" Even more checks, can be very slow.\n","sig":null,"attributes":[{"value":"/ Even more checks, can be very slow.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":5202,"byte_end":5241,"line_start":23,"line_end":23,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":667},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":5330,"byte_end":5342,"line_start":26,"line_end":26,"column_start":5,"column_end":17},"name":"DefaultLevel","qualname":"::deflate::CompressionLevel::DefaultLevel","value":"CompressionLevel::DefaultLevel","parent":{"krate":0,"index":654},"children":[],"decl_id":null,"docs":" Default compromise between speed and compression.\n","sig":null,"attributes":[{"value":"/ Default compromise between speed and compression.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":5272,"byte_end":5325,"line_start":25,"line_end":25,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":670},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":5395,"byte_end":5413,"line_start":28,"line_end":28,"column_start":5,"column_end":23},"name":"DefaultCompression","qualname":"::deflate::CompressionLevel::DefaultCompression","value":"CompressionLevel::DefaultCompression","parent":{"krate":0,"index":654},"children":[],"decl_id":null,"docs":" Use the default compression level.\n","sig":null,"attributes":[{"value":"/ Use the default compression level.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":5352,"byte_end":5390,"line_start":27,"line_end":27,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":654},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":4876,"byte_end":4892,"line_start":16,"line_end":16,"column_start":10,"column_end":26},"name":"CompressionLevel","qualname":"::deflate::CompressionLevel","value":"CompressionLevel::{NoCompression, BestSpeed, BestCompression, UberCompression, DefaultLevel, DefaultCompression}","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":667},{"krate":0,"index":670}],"decl_id":null,"docs":" How much processing the compressor should do to compress the data.\n `NoCompression` and `Bestspeed` have special meanings, the other levels determine the number\n of checks for matches in the hash chains and whether to use lazy or greedy parsing.\n","sig":null,"attributes":[{"value":"/ How much processing the compressor should do to compress the data.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":4547,"byte_end":4617,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ `NoCompression` and `Bestspeed` have special meanings, the other levels determine the number","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":4618,"byte_end":4714,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"/ of checks for matches in the hash chains and whether to use lazy or greedy parsing.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":4715,"byte_end":4802,"line_start":13,"line_end":13,"column_start":1,"column_end":88}},{"value":"repr(i32)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":4803,"byte_end":4815,"line_start":14,"line_end":14,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":330},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":7508,"byte_end":7523,"line_start":110,"line_end":110,"column_start":8,"column_end":23},"name":"compress_to_vec","qualname":"::deflate::compress_to_vec","value":"fn (input: &[u8], level: u8) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the input data to a vector, using the specified compression level (0-10).\n","sig":null,"attributes":[{"value":"/ Compress the input data to a vector, using the specified compression level (0-10).","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":7414,"byte_end":7500,"line_start":109,"line_end":109,"column_start":1,"column_end":87}}]},{"kind":"Function","id":{"krate":0,"index":331},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":7734,"byte_end":7754,"line_start":116,"line_end":116,"column_start":8,"column_end":28},"name":"compress_to_vec_zlib","qualname":"::deflate::compress_to_vec_zlib","value":"fn (input: &[u8], level: u8) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the input data to a vector, using the specified compression level (0-10), and with a\n zlib wrapper.\n","sig":null,"attributes":[{"value":"/ Compress the input data to a vector, using the specified compression level (0-10), and with a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":7611,"byte_end":7708,"line_start":114,"line_end":114,"column_start":1,"column_end":98}},{"value":"/ zlib wrapper.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":7709,"byte_end":7726,"line_start":115,"line_end":115,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":333},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"inflate","qualname":"::inflate","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":456},{"krate":0,"index":471},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":805},{"krate":0,"index":839},{"krate":0,"index":838},{"krate":0,"index":836},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":827},{"krate":0,"index":521},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526}],"decl_id":null,"docs":" This module contains functionality for decompression.\n","sig":null,"attributes":[{"value":"! This module contains functionality for decompression.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":103507,"byte_end":103564,"line_start":1,"line_end":1,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":338},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"core","qualname":"::inflate::core","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":356},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":404},{"krate":0,"index":408},{"krate":0,"index":687},{"krate":0,"index":769},{"krate":0,"index":767},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":759},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":770},{"krate":0,"index":772},{"krate":0,"index":774},{"krate":0,"index":776},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":778},{"krate":0,"index":786},{"krate":0,"index":784},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455}],"decl_id":null,"docs":" Streaming decompression functionality.\n","sig":null,"attributes":[{"value":"! Streaming decompression functionality.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":107702,"byte_end":107744,"line_start":1,"line_end":1,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":348},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":107927,"byte_end":107945,"line_start":11,"line_end":11,"column_start":11,"column_end":29},"name":"TINFL_LZ_DICT_SIZE","qualname":"::inflate::core::TINFL_LZ_DICT_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":374},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":111558,"byte_end":111571,"line_start":105,"line_end":105,"column_start":9,"column_end":22},"name":"inflate_flags","qualname":"::inflate::core::inflate_flags","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","parent":null,"children":[{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":375},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":111634,"byte_end":111662,"line_start":107,"line_end":107,"column_start":15,"column_end":43},"name":"TINFL_FLAG_PARSE_ZLIB_HEADER","qualname":"::inflate::core::inflate_flags::TINFL_FLAG_PARSE_ZLIB_HEADER","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Should we try to parse a zlib header?\n","sig":null,"attributes":[{"value":"/ Should we try to parse a zlib header?","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":111578,"byte_end":111619,"line_start":106,"line_end":106,"column_start":5,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":376},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":111763,"byte_end":111788,"line_start":109,"line_end":109,"column_start":15,"column_end":40},"name":"TINFL_FLAG_HAS_MORE_INPUT","qualname":"::inflate::core::inflate_flags::TINFL_FLAG_HAS_MORE_INPUT","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" There is more input that hasn't been given to the decompressor yet.\n","sig":null,"attributes":[{"value":"/ There is more input that hasn't been given to the decompressor yet.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":111677,"byte_end":111748,"line_start":108,"line_end":108,"column_start":5,"column_end":76}}]},{"kind":"Const","id":{"krate":0,"index":377},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":111863,"byte_end":111903,"line_start":111,"line_end":111,"column_start":15,"column_end":55},"name":"TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF","qualname":"::inflate::core::inflate_flags::TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" The output buffer should not wrap around.\n","sig":null,"attributes":[{"value":"/ The output buffer should not wrap around.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":111803,"byte_end":111848,"line_start":110,"line_end":110,"column_start":5,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":378},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":111997,"byte_end":112023,"line_start":113,"line_end":113,"column_start":15,"column_end":41},"name":"TINFL_FLAG_COMPUTE_ADLER32","qualname":"::inflate::core::inflate_flags::TINFL_FLAG_COMPUTE_ADLER32","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Should we calculate the adler32 checksum of the output data?\n","sig":null,"attributes":[{"value":"/ Should we calculate the adler32 checksum of the output data?","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":111918,"byte_end":111982,"line_start":112,"line_end":112,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":383},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":112283,"byte_end":112300,"line_start":128,"line_end":128,"column_start":12,"column_end":29},"name":"DecompressorOxide","qualname":"::inflate::core::DecompressorOxide","value":"DecompressorOxide {  }","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":400},{"krate":0,"index":402}],"decl_id":null,"docs":" Main decompression struct.","sig":null,"attributes":[{"value":"/ Main decompression struct.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":112237,"byte_end":112267,"line_start":126,"line_end":126,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":112268,"byte_end":112271,"line_start":127,"line_end":127,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":113481,"byte_end":113484,"line_start":165,"line_end":165,"column_start":12,"column_end":15},"name":"new","qualname":"<DecompressorOxide>::new","value":"fn () -> DecompressorOxide","parent":null,"children":[],"decl_id":null,"docs":" Create a new tinfl_decompressor with all fields set to 0.\n","sig":null,"attributes":[{"value":"/ Create a new tinfl_decompressor with all fields set to 0.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":113408,"byte_end":113469,"line_start":164,"line_end":164,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":113621,"byte_end":113625,"line_start":171,"line_end":171,"column_start":12,"column_end":16},"name":"init","qualname":"<DecompressorOxide>::init","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the current state to `Start`.\n","sig":null,"attributes":[{"value":"/ Set the current state to `Start`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":113558,"byte_end":113595,"line_start":169,"line_end":169,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":113600,"byte_end":113609,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":113852,"byte_end":113859,"line_start":178,"line_end":178,"column_start":12,"column_end":19},"name":"adler32","qualname":"<DecompressorOxide>::adler32","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the adler32 checksum of the currently decompressed data.\n","sig":null,"attributes":[{"value":"/ Returns the adler32 checksum of the currently decompressed data.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":113758,"byte_end":113826,"line_start":176,"line_end":176,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":113831,"byte_end":113840,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":455},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":143970,"byte_end":143980,"line_start":1020,"line_end":1020,"column_start":8,"column_end":18},"name":"decompress","qualname":"::inflate::core::decompress","value":"fn (r: &mut DecompressorOxide, in_buf: &[u8], out: &mut [u8], out_pos: usize, flags: u32) -> (TINFLStatus, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Main decompression function. Keeps decompressing data from `in_buf` until the `in_buf` is\n empty, `out_cur` is full, the end of the deflate stream is hit, or there is an error in the\n deflate stream.","sig":null,"attributes":[{"value":"/ Main decompression function. Keeps decompressing data from `in_buf` until the `in_buf` is","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":141898,"byte_end":141991,"line_start":985,"line_end":985,"column_start":1,"column_end":94}},{"value":"/ empty, `out_cur` is full, the end of the deflate stream is hit, or there is an error in the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":141992,"byte_end":142087,"line_start":986,"line_end":986,"column_start":1,"column_end":96}},{"value":"/ deflate stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":142088,"byte_end":142107,"line_start":987,"line_end":987,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":142108,"byte_end":142111,"line_start":988,"line_end":988,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":142112,"byte_end":142127,"line_start":989,"line_end":989,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":142128,"byte_end":142131,"line_start":990,"line_end":990,"column_start":1,"column_end":4}},{"value":"/ `in_buf` is a reference to the compressed data that is to be decompressed. The decompressor will","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":142132,"byte_end":142232,"line_start":991,"line_end":991,"column_start":1,"column_end":101}},{"value":"/ start at the first byte of this buffer.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":142233,"byte_end":142276,"line_start":992,"line_end":992,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":142277,"byte_end":142280,"line_start":993,"line_end":993,"column_start":1,"column_end":4}},{"value":"/ `out_cur` is a mutable cursor into the buffer that will store the decompressed data, and that","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":142281,"byte_end":142378,"line_start":994,"line_end":994,"column_start":1,"column_end":98}},{"value":"/ stores previously decompressed data if any.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":142379,"byte_end":142426,"line_start":995,"line_end":995,"column_start":1,"column_end":48}},{"value":"/ * The position of the output cursor indicates where in the output buffer slice writing should","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":142427,"byte_end":142524,"line_start":996,"line_end":996,"column_start":1,"column_end":98}},{"value":"/ start.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":142525,"byte_end":142535,"line_start":997,"line_end":997,"column_start":1,"column_end":11}},{"value":"/ * If TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF is not set, the output buffer is used in a","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":142536,"byte_end":142628,"line_start":998,"line_end":998,"column_start":1,"column_end":93}},{"value":"/ wrapping manner, and it's size is required to be a power of 2.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":142629,"byte_end":142695,"line_start":999,"line_end":999,"column_start":1,"column_end":67}},{"value":"/ * The decompression function normally needs access to 32KiB of the previously decompressed data","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":142696,"byte_end":142795,"line_start":1000,"line_end":1000,"column_start":1,"column_end":100}},{"value":"/(or to the beginning of the decompressed data if less than 32KiB has been decompressed.)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":142796,"byte_end":142887,"line_start":1001,"line_end":1001,"column_start":1,"column_end":92}},{"value":"/     - If this data is not available, decompression may fail.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":142888,"byte_end":142952,"line_start":1002,"line_end":1002,"column_start":1,"column_end":65}},{"value":"/     - Some deflate compressors allow specifying a window size which limits match distances to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":142953,"byte_end":143050,"line_start":1003,"line_end":1003,"column_start":1,"column_end":98}},{"value":"/ less than this, or alternatively an RLE mode where matches will only refer to the previous byte","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":143051,"byte_end":143150,"line_start":1004,"line_end":1004,"column_start":1,"column_end":100}},{"value":"/ and thus allows a smaller output buffer. The window size can be specified in the zlib","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":143151,"byte_end":143240,"line_start":1005,"line_end":1005,"column_start":1,"column_end":90}},{"value":"/ header structure, however, the header data should not be relied on to be correct.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":143241,"byte_end":143326,"line_start":1006,"line_end":1006,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":143327,"byte_end":143330,"line_start":1007,"line_end":1007,"column_start":1,"column_end":4}},{"value":"/ `flags`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":143331,"byte_end":143342,"line_start":1008,"line_end":1008,"column_start":1,"column_end":12}},{"value":"/ Flags to indicate settings and status to the decompression function.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":143343,"byte_end":143415,"line_start":1009,"line_end":1009,"column_start":1,"column_end":73}},{"value":"/ * The `TINFL_FLAG_HAS_MORE_INPUT` has to be specified if more compressed data is to be provided","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":143416,"byte_end":143515,"line_start":1010,"line_end":1010,"column_start":1,"column_end":100}},{"value":"/ in a subsequent call to this function.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":143516,"byte_end":143558,"line_start":1011,"line_end":1011,"column_start":1,"column_end":43}},{"value":"/ * See the the [`inflate_flags`](inflate_flags/index.html) module for details on other flags.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":143559,"byte_end":143655,"line_start":1012,"line_end":1012,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":143656,"byte_end":143659,"line_start":1013,"line_end":1013,"column_start":1,"column_end":4}},{"value":"/ # Returns","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":143660,"byte_end":143673,"line_start":1014,"line_end":1014,"column_start":1,"column_end":14}},{"value":"/ returns a tuple containing the status of the compressor, the number of input bytes read, and the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":143674,"byte_end":143774,"line_start":1015,"line_end":1015,"column_start":1,"column_end":101}},{"value":"/ number of bytes output to `out_cur`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":143775,"byte_end":143815,"line_start":1016,"line_end":1016,"column_start":1,"column_end":41}},{"value":"/ Updates the position of `out_cur` to point to the next free spot in the output buffer.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":143816,"byte_end":143906,"line_start":1017,"line_end":1017,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":143907,"byte_end":143910,"line_start":1018,"line_end":1018,"column_start":1,"column_end":4}},{"value":"/ This function shouldn't panic pending any bugs.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":143911,"byte_end":143962,"line_start":1019,"line_end":1019,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":471},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::inflate::stream","value":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":489},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512}],"decl_id":null,"docs":" Extra streaming decompression functionality.","sig":null,"attributes":[{"value":"! Extra streaming decompression functionality.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":181469,"byte_end":181517,"line_start":1,"line_end":1,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":181518,"byte_end":181521,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! As of now this is mainly inteded for use to build a higher-level wrapper.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":181522,"byte_end":181599,"line_start":3,"line_end":3,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":489},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":181954,"byte_end":181966,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"InflateState","qualname":"::inflate::stream::InflateState","value":"InflateState {  }","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498}],"decl_id":null,"docs":" A struct that compbines a decompressor with extra data for streaming decompression.","sig":null,"attributes":[{"value":"/ A struct that compbines a decompressor with extra data for streaming decompression.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":181851,"byte_end":181938,"line_start":11,"line_end":11,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":181939,"byte_end":181942,"line_start":12,"line_end":12,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":183475,"byte_end":183478,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<InflateState>::new","value":"fn (data_format: DataFormat) -> InflateState","parent":null,"children":[],"decl_id":null,"docs":" Create a new state.","sig":null,"attributes":[{"value":"/ Create a new state.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":183157,"byte_end":183180,"line_start":52,"line_end":52,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":183185,"byte_end":183188,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this struct is quite large due to internal buffers, and as such storing it on","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":183193,"byte_end":183284,"line_start":54,"line_end":54,"column_start":5,"column_end":96}},{"value":"/ the stack is not recommended.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":183289,"byte_end":183322,"line_start":55,"line_end":55,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":183327,"byte_end":183330,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":183335,"byte_end":183351,"line_start":57,"line_end":57,"column_start":5,"column_end":21}},{"value":"/ `data_format`: Determines whether the compressed data is assumed to wrapped with zlib","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":183356,"byte_end":183445,"line_start":58,"line_end":58,"column_start":5,"column_end":94}},{"value":"/ metadata.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":183450,"byte_end":183463,"line_start":59,"line_end":59,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":183813,"byte_end":183822,"line_start":71,"line_end":71,"column_start":12,"column_end":21},"name":"new_boxed","qualname":"<InflateState>::new_boxed","value":"fn (data_format: DataFormat) -> Box<InflateState>","parent":null,"children":[],"decl_id":null,"docs":" Create a new state on the heap.","sig":null,"attributes":[{"value":"/ Create a new state on the heap.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":183625,"byte_end":183660,"line_start":66,"line_end":66,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":183665,"byte_end":183668,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":183673,"byte_end":183689,"line_start":68,"line_end":68,"column_start":5,"column_end":21}},{"value":"/ `data_format`: Determines whether the compressed data is assumed to wrapped with zlib","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":183694,"byte_end":183783,"line_start":69,"line_end":69,"column_start":5,"column_end":94}},{"value":"/ metadata.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":183788,"byte_end":183801,"line_start":70,"line_end":70,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":184031,"byte_end":184043,"line_start":78,"line_end":78,"column_start":12,"column_end":24},"name":"decompressor","qualname":"<InflateState>::decompressor","value":"fn (&mut self) -> &mut DecompressorOxide","parent":null,"children":[],"decl_id":null,"docs":" Access the innner decompressor.\n","sig":null,"attributes":[{"value":"/ Access the innner decompressor.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":183984,"byte_end":184019,"line_start":77,"line_end":77,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":184208,"byte_end":184219,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"last_status","qualname":"<InflateState>::last_status","value":"fn (&self) -> TINFLStatus","parent":null,"children":[],"decl_id":null,"docs":" Return the status of the last call to `inflate` with this `InflateState`.\n","sig":null,"attributes":[{"value":"/ Return the status of the last call to `inflate` with this `InflateState`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":184119,"byte_end":184196,"line_start":82,"line_end":82,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":184545,"byte_end":184571,"line_start":92,"line_end":92,"column_start":12,"column_end":38},"name":"new_boxed_with_window_bits","qualname":"<InflateState>::new_boxed_with_window_bits","value":"fn (window_bits: i32) -> Box<InflateState>","parent":null,"children":[],"decl_id":null,"docs":" Create a new state using miniz/zlib style window bits parameter.","sig":null,"attributes":[{"value":"/ Create a new state using miniz/zlib style window bits parameter.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":184280,"byte_end":184348,"line_start":87,"line_end":87,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":184353,"byte_end":184356,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ The decompressor does not support different window sizes. As such,","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":184361,"byte_end":184431,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ any positive (>0) value will set the zlib header flag, while a negative one","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":184436,"byte_end":184515,"line_start":90,"line_end":90,"column_start":5,"column_end":84}},{"value":"/ will not.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":184520,"byte_end":184533,"line_start":91,"line_end":91,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":184861,"byte_end":184866,"line_start":100,"line_end":100,"column_start":12,"column_end":17},"name":"reset","qualname":"<InflateState>::reset","value":"fn (&mut self, data_format: DataFormat) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reset the decompressor without re-allocating memory, using the given\n data format.\n","sig":null,"attributes":[{"value":"/ Reset the decompressor without re-allocating memory, using the given","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":184756,"byte_end":184828,"line_start":98,"line_end":98,"column_start":5,"column_end":77}},{"value":"/ data format.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":184833,"byte_end":184849,"line_start":99,"line_end":99,"column_start":5,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":510},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":185604,"byte_end":185611,"line_start":121,"line_end":121,"column_start":8,"column_end":15},"name":"inflate","qualname":"::inflate::stream::inflate","value":"fn (state: &mut InflateState, input: &[u8], output: &mut [u8], flush: MZFlush) -> StreamResult","parent":null,"children":[],"decl_id":null,"docs":" Try to decompress from `input` to `output` with the given `InflateState`","sig":null,"attributes":[{"value":"/ Try to decompress from `input` to `output` with the given `InflateState`","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":185213,"byte_end":185289,"line_start":112,"line_end":112,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":185290,"byte_end":185293,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":185294,"byte_end":185306,"line_start":114,"line_end":114,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":185307,"byte_end":185310,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ Returns `MZError::Buf` If the size of the `output` slice is empty or no progress was made due to","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":185311,"byte_end":185411,"line_start":116,"line_end":116,"column_start":1,"column_end":101}},{"value":"/ lack of expected input data or called after the decompression was","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":185412,"byte_end":185481,"line_start":117,"line_end":117,"column_start":1,"column_end":70}},{"value":"/ finished without MZFlush::Finish.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":185482,"byte_end":185519,"line_start":118,"line_end":118,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":185520,"byte_end":185523,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ Returns `MZError::Param` if the compressor parameters are set wrong.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":185524,"byte_end":185596,"line_start":120,"line_end":120,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":806},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":104276,"byte_end":104300,"line_start":27,"line_end":27,"column_start":5,"column_end":29},"name":"FailedCannotMakeProgress","qualname":"::inflate::TINFLStatus::FailedCannotMakeProgress","value":"TINFLStatus::FailedCannotMakeProgress","parent":{"krate":0,"index":805},"children":[],"decl_id":null,"docs":" More input data was expected, but the caller indicated that there was more data, so the\n input stream is likely truncated.\n","sig":null,"attributes":[{"value":"/ More input data was expected, but the caller indicated that there was more data, so the","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":104138,"byte_end":104229,"line_start":25,"line_end":25,"column_start":5,"column_end":96}},{"value":"/ input stream is likely truncated.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":104234,"byte_end":104271,"line_start":26,"line_end":26,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":809},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":104413,"byte_end":104421,"line_start":29,"line_end":29,"column_start":5,"column_end":13},"name":"BadParam","qualname":"::inflate::TINFLStatus::BadParam","value":"TINFLStatus::BadParam","parent":{"krate":0,"index":805},"children":[],"decl_id":null,"docs":" One or more of the input parameters were invalid.\n","sig":null,"attributes":[{"value":"/ One or more of the input parameters were invalid.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":104355,"byte_end":104408,"line_start":28,"line_end":28,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":812},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":104574,"byte_end":104589,"line_start":32,"line_end":32,"column_start":5,"column_end":20},"name":"Adler32Mismatch","qualname":"::inflate::TINFLStatus::Adler32Mismatch","value":"TINFLStatus::Adler32Mismatch","parent":{"krate":0,"index":805},"children":[],"decl_id":null,"docs":" The decompression went fine, but the adler32 checksum did not match the one\n provided in the header.\n","sig":null,"attributes":[{"value":"/ The decompression went fine, but the adler32 checksum did not match the one","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":104458,"byte_end":104537,"line_start":30,"line_end":30,"column_start":5,"column_end":84}},{"value":"/ provided in the header.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":104542,"byte_end":104569,"line_start":31,"line_end":31,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":815},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":104683,"byte_end":104689,"line_start":34,"line_end":34,"column_start":5,"column_end":11},"name":"Failed","qualname":"::inflate::TINFLStatus::Failed","value":"TINFLStatus::Failed","parent":{"krate":0,"index":805},"children":[],"decl_id":null,"docs":" Failed to decompress due to invalid data.\n","sig":null,"attributes":[{"value":"/ Failed to decompress due to invalid data.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":104633,"byte_end":104678,"line_start":33,"line_end":33,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":818},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":104769,"byte_end":104773,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"name":"Done","qualname":"::inflate::TINFLStatus::Done","value":"TINFLStatus::Done","parent":{"krate":0,"index":805},"children":[],"decl_id":null,"docs":" Finished decomression without issues.\n","sig":null,"attributes":[{"value":"/ Finished decomression without issues.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":104723,"byte_end":104764,"line_start":35,"line_end":35,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":821},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":104879,"byte_end":104893,"line_start":38,"line_end":38,"column_start":5,"column_end":19},"name":"NeedsMoreInput","qualname":"::inflate::TINFLStatus::NeedsMoreInput","value":"TINFLStatus::NeedsMoreInput","parent":{"krate":0,"index":805},"children":[],"decl_id":null,"docs":" The decompressor needs more input data to continue decompressing.\n","sig":null,"attributes":[{"value":"/ The decompressor needs more input data to continue decompressing.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":104805,"byte_end":104874,"line_start":37,"line_end":37,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":824},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":105011,"byte_end":105024,"line_start":40,"line_end":40,"column_start":5,"column_end":18},"name":"HasMoreOutput","qualname":"::inflate::TINFLStatus::HasMoreOutput","value":"TINFLStatus::HasMoreOutput","parent":{"krate":0,"index":805},"children":[],"decl_id":null,"docs":" There is still pending data that didn't fit in the output buffer.\n","sig":null,"attributes":[{"value":"/ There is still pending data that didn't fit in the output buffer.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":104937,"byte_end":105006,"line_start":39,"line_end":39,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":805},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":104120,"byte_end":104131,"line_start":24,"line_end":24,"column_start":10,"column_end":21},"name":"TINFLStatus","qualname":"::inflate::TINFLStatus","value":"TINFLStatus::{FailedCannotMakeProgress, BadParam, Adler32Mismatch, Failed, Done, NeedsMoreInput, HasMoreOutput}","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":812},{"krate":0,"index":815},{"krate":0,"index":818},{"krate":0,"index":821},{"krate":0,"index":824}],"decl_id":null,"docs":" Return status codes.\n","sig":null,"attributes":[{"value":"/ Return status codes.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":104023,"byte_end":104047,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"repr(i8)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":104048,"byte_end":104059,"line_start":22,"line_end":22,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":105096,"byte_end":105104,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"from_i32","qualname":"<TINFLStatus>::from_i32","value":"fn (value: i32) -> Option<TINFLStatus>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":524},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":105852,"byte_end":105869,"line_start":63,"line_end":63,"column_start":8,"column_end":25},"name":"decompress_to_vec","qualname":"::inflate::decompress_to_vec","value":"fn (input: &[u8]) -> Result<Vec<u8>, TINFLStatus>","parent":null,"children":[],"decl_id":null,"docs":" Decompress the deflate-encoded data in `input` to a vector.","sig":null,"attributes":[{"value":"/ Decompress the deflate-encoded data in `input` to a vector.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":105676,"byte_end":105739,"line_start":59,"line_end":59,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":105740,"byte_end":105743,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Returns a status and an integer representing where the decompressor failed on failure.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":105744,"byte_end":105834,"line_start":61,"line_end":61,"column_start":1,"column_end":91}},{"value":"inline","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":105835,"byte_end":105844,"line_start":62,"line_end":62,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":525},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":106157,"byte_end":106179,"line_start":71,"line_end":71,"column_start":8,"column_end":30},"name":"decompress_to_vec_zlib","qualname":"::inflate::decompress_to_vec_zlib","value":"fn (input: &[u8]) -> Result<Vec<u8>, TINFLStatus>","parent":null,"children":[],"decl_id":null,"docs":" Decompress the deflate-encoded data (with a zlib wrapper) in `input` to a vector.","sig":null,"attributes":[{"value":"/ Decompress the deflate-encoded data (with a zlib wrapper) in `input` to a vector.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":105959,"byte_end":106044,"line_start":67,"line_end":67,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":106045,"byte_end":106048,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Returns a status and an integer representing where the decompressor failed on failure.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":106049,"byte_end":106139,"line_start":69,"line_end":69,"column_start":1,"column_end":91}},{"value":"inline","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":106140,"byte_end":106149,"line_start":70,"line_end":70,"column_start":1,"column_end":10}}]},{"kind":"Const","id":{"krate":0,"index":529},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/shared.rs","byte_start":192043,"byte_end":192058,"line_start":4,"line_end":4,"column_start":11,"column_end":26},"name":"MZ_ADLER32_INIT","qualname":"::shared::MZ_ADLER32_INIT","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":530},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/shared.rs","byte_start":192095,"byte_end":192117,"line_start":7,"line_end":7,"column_start":11,"column_end":33},"name":"MZ_DEFAULT_WINDOW_BITS","qualname":"::shared::MZ_DEFAULT_WINDOW_BITS","value":"i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":533},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/shared.rs","byte_start":192271,"byte_end":192285,"line_start":14,"line_end":14,"column_start":8,"column_end":22},"name":"update_adler32","qualname":"::shared::update_adler32","value":"fn (adler: u32, data: &[u8]) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":842},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1332,"byte_end":1336,"line_start":48,"line_end":48,"column_start":5,"column_end":9},"name":"None","qualname":"::MZFlush::None","value":"MZFlush::None","parent":{"krate":0,"index":841},"children":[],"decl_id":null,"docs":" Don't force any flushing.\n Used when more input data is expected.\n","sig":null,"attributes":[{"value":"/ Don't force any flushing.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1251,"byte_end":1280,"line_start":46,"line_end":46,"column_start":5,"column_end":34}},{"value":"/ Used when more input data is expected.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1285,"byte_end":1327,"line_start":47,"line_end":47,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":845},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1411,"byte_end":1418,"line_start":51,"line_end":51,"column_start":5,"column_end":12},"name":"Partial","qualname":"::MZFlush::Partial","value":"MZFlush::Partial","parent":{"krate":0,"index":841},"children":[],"decl_id":null,"docs":" Zlib partial flush.\n Currently treated as `Sync`.\n","sig":null,"attributes":[{"value":"/ Zlib partial flush.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1346,"byte_end":1369,"line_start":49,"line_end":49,"column_start":5,"column_end":28}},{"value":"/ Currently treated as `Sync`.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1374,"byte_end":1406,"line_start":50,"line_end":50,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":848},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1552,"byte_end":1556,"line_start":54,"line_end":54,"column_start":5,"column_end":9},"name":"Sync","qualname":"::MZFlush::Sync","value":"MZFlush::Sync","parent":{"krate":0,"index":841},"children":[],"decl_id":null,"docs":" Finish compressing the currently buffered data, and output an empty raw block.\n Has no use in decompression.\n","sig":null,"attributes":[{"value":"/ Finish compressing the currently buffered data, and output an empty raw block.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1428,"byte_end":1510,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ Has no use in decompression.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1515,"byte_end":1547,"line_start":53,"line_end":53,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":851},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1758,"byte_end":1762,"line_start":58,"line_end":58,"column_start":5,"column_end":9},"name":"Full","qualname":"::MZFlush::Full","value":"MZFlush::Full","parent":{"krate":0,"index":841},"children":[],"decl_id":null,"docs":" Same as `Sync`, but resets the compression dictionary so that further compressed\n data does not depend on data compressed before the flush.\n Has no use in decompression.\n","sig":null,"attributes":[{"value":"/ Same as `Sync`, but resets the compression dictionary so that further compressed","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1566,"byte_end":1650,"line_start":55,"line_end":55,"column_start":5,"column_end":89}},{"value":"/ data does not depend on data compressed before the flush.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1655,"byte_end":1716,"line_start":56,"line_end":56,"column_start":5,"column_end":66}},{"value":"/ Has no use in decompression.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1721,"byte_end":1753,"line_start":57,"line_end":57,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":854},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1836,"byte_end":1842,"line_start":60,"line_end":60,"column_start":5,"column_end":11},"name":"Finish","qualname":"::MZFlush::Finish","value":"MZFlush::Finish","parent":{"krate":0,"index":841},"children":[],"decl_id":null,"docs":" Attempt to flush the remaining data and end the stream.\n","sig":null,"attributes":[{"value":"/ Attempt to flush the remaining data and end the stream.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1772,"byte_end":1831,"line_start":59,"line_end":59,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":857},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1877,"byte_end":1882,"line_start":62,"line_end":62,"column_start":5,"column_end":10},"name":"Block","qualname":"::MZFlush::Block","value":"MZFlush::Block","parent":{"krate":0,"index":841},"children":[],"decl_id":null,"docs":" Not implemented.\n","sig":null,"attributes":[{"value":"/ Not implemented.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1852,"byte_end":1872,"line_start":61,"line_end":61,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":841},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1237,"byte_end":1244,"line_start":45,"line_end":45,"column_start":10,"column_end":17},"name":"MZFlush","qualname":"::MZFlush","value":"MZFlush::{None, Partial, Sync, Full, Finish, Block}","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":845},{"krate":0,"index":848},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":857}],"decl_id":null,"docs":" A list of flush types.","sig":null,"attributes":[{"value":"/ A list of flush types.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1051,"byte_end":1077,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1078,"byte_end":1081,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ See [http://www.bolet.org/~pornin/deflate-flush.html] for more in-depth info.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1082,"byte_end":1163,"line_start":42,"line_end":42,"column_start":1,"column_end":82}},{"value":"repr(i32)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1164,"byte_end":1176,"line_start":43,"line_end":43,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2032,"byte_end":2035,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<MZFlush>::new","value":"fn (flush: i32) -> Result<Self, MZError>","parent":null,"children":[],"decl_id":null,"docs":" Create an MZFlush value from an integer value.","sig":null,"attributes":[{"value":"/ Create an MZFlush value from an integer value.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1910,"byte_end":1960,"line_start":66,"line_end":66,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1965,"byte_end":1968,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Returns `MZError::Param` on invalid values.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1973,"byte_end":2020,"line_start":68,"line_end":68,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":875},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2437,"byte_end":2439,"line_start":84,"line_end":84,"column_start":5,"column_end":7},"name":"Ok","qualname":"::MZStatus::Ok","value":"MZStatus::Ok","parent":{"krate":0,"index":874},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":878},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2449,"byte_end":2458,"line_start":85,"line_end":85,"column_start":5,"column_end":14},"name":"StreamEnd","qualname":"::MZStatus::StreamEnd","value":"MZStatus::StreamEnd","parent":{"krate":0,"index":874},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":881},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2468,"byte_end":2476,"line_start":86,"line_end":86,"column_start":5,"column_end":13},"name":"NeedDict","qualname":"::MZStatus::NeedDict","value":"MZStatus::NeedDict","parent":{"krate":0,"index":874},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":874},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2422,"byte_end":2430,"line_start":83,"line_end":83,"column_start":10,"column_end":18},"name":"MZStatus","qualname":"::MZStatus","value":"MZStatus::{Ok, StreamEnd, NeedDict}","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":878},{"krate":0,"index":881}],"decl_id":null,"docs":" A list of miniz successful status codes.\n","sig":null,"attributes":[{"value":"/ A list of miniz successful status codes.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2304,"byte_end":2348,"line_start":80,"line_end":80,"column_start":1,"column_end":45}},{"value":"repr(i32)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2349,"byte_end":2361,"line_start":81,"line_end":81,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":899},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2613,"byte_end":2618,"line_start":93,"line_end":93,"column_start":5,"column_end":10},"name":"ErrNo","qualname":"::MZError::ErrNo","value":"MZError::ErrNo","parent":{"krate":0,"index":898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":902},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2629,"byte_end":2635,"line_start":94,"line_end":94,"column_start":5,"column_end":11},"name":"Stream","qualname":"::MZError::Stream","value":"MZError::Stream","parent":{"krate":0,"index":898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":905},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2646,"byte_end":2650,"line_start":95,"line_end":95,"column_start":5,"column_end":9},"name":"Data","qualname":"::MZError::Data","value":"MZError::Data","parent":{"krate":0,"index":898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":908},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2661,"byte_end":2664,"line_start":96,"line_end":96,"column_start":5,"column_end":8},"name":"Mem","qualname":"::MZError::Mem","value":"MZError::Mem","parent":{"krate":0,"index":898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":911},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2675,"byte_end":2678,"line_start":97,"line_end":97,"column_start":5,"column_end":8},"name":"Buf","qualname":"::MZError::Buf","value":"MZError::Buf","parent":{"krate":0,"index":898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":914},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2689,"byte_end":2696,"line_start":98,"line_end":98,"column_start":5,"column_end":12},"name":"Version","qualname":"::MZError::Version","value":"MZError::Version","parent":{"krate":0,"index":898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":917},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2707,"byte_end":2712,"line_start":99,"line_end":99,"column_start":5,"column_end":10},"name":"Param","qualname":"::MZError::Param","value":"MZError::Param","parent":{"krate":0,"index":898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":898},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2599,"byte_end":2606,"line_start":92,"line_end":92,"column_start":10,"column_end":17},"name":"MZError","qualname":"::MZError","value":"MZError::{ErrNo, Stream, Data, Mem, Buf, Version, Param}","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":902},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":914},{"krate":0,"index":917}],"decl_id":null,"docs":" A list of miniz failed status codes.\n","sig":null,"attributes":[{"value":"/ A list of miniz failed status codes.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2485,"byte_end":2525,"line_start":89,"line_end":89,"column_start":1,"column_end":41}},{"value":"repr(i32)","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2526,"byte_end":2538,"line_start":90,"line_end":90,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":935},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2916,"byte_end":2920,"line_start":106,"line_end":106,"column_start":5,"column_end":9},"name":"Zlib","qualname":"::DataFormat::Zlib","value":"DataFormat::Zlib","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Wrapped using the [zlib](http://www.zlib.org/rfc-zlib.html) format.\n","sig":null,"attributes":[{"value":"/ Wrapped using the [zlib](http://www.zlib.org/rfc-zlib.html) format.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2840,"byte_end":2911,"line_start":105,"line_end":105,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":937},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2947,"byte_end":2950,"line_start":108,"line_end":108,"column_start":5,"column_end":8},"name":"Raw","qualname":"::DataFormat::Raw","value":"DataFormat::Raw","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Raw DEFLATE.\n","sig":null,"attributes":[{"value":"/ Raw DEFLATE.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2926,"byte_end":2942,"line_start":107,"line_end":107,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":934},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2823,"byte_end":2833,"line_start":104,"line_end":104,"column_start":10,"column_end":20},"name":"DataFormat","qualname":"::DataFormat","value":"DataFormat::{Zlib, Raw}","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":937}],"decl_id":null,"docs":" How compressed data is wrapped.\n","sig":null,"attributes":[{"value":"/ How compressed data is wrapped.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2727,"byte_end":2762,"line_start":102,"line_end":102,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":543},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":3461,"byte_end":3469,"line_start":129,"line_end":129,"column_start":10,"column_end":18},"name":"MZResult","qualname":"::MZResult","value":"Result<MZStatus, MZError>","parent":null,"children":[],"decl_id":null,"docs":" `Result` alias for all miniz status codes both successful and failed.\n","sig":null,"attributes":[{"value":"/ `Result` alias for all miniz status codes both successful and failed.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":3378,"byte_end":3451,"line_start":128,"line_end":128,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":953},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":3655,"byte_end":3667,"line_start":133,"line_end":133,"column_start":12,"column_end":24},"name":"StreamResult","qualname":"::StreamResult","value":"StreamResult { bytes_consumed, bytes_written, status }","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956}],"decl_id":null,"docs":" A structure containg the result of a call to the inflate or deflate streaming functions.\n","sig":null,"attributes":[{"value":"/ A structure containg the result of a call to the inflate or deflate streaming functions.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":3500,"byte_end":3592,"line_start":131,"line_end":131,"column_start":1,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":954},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":3737,"byte_end":3751,"line_start":135,"line_end":135,"column_start":9,"column_end":23},"name":"bytes_consumed","qualname":"::StreamResult::bytes_consumed","value":"usize","parent":{"krate":0,"index":953},"children":[],"decl_id":null,"docs":" The number of bytes consumed from the input slice.\n","sig":null,"attributes":[{"value":"/ The number of bytes consumed from the input slice.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":3674,"byte_end":3728,"line_start":134,"line_end":134,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":955},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":3825,"byte_end":3838,"line_start":137,"line_end":137,"column_start":9,"column_end":22},"name":"bytes_written","qualname":"::StreamResult::bytes_written","value":"usize","parent":{"krate":0,"index":953},"children":[],"decl_id":null,"docs":" The number of bytes written to the output slice.\n","sig":null,"attributes":[{"value":"/ The number of bytes written to the output slice.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":3764,"byte_end":3816,"line_start":136,"line_end":136,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":956},"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":3894,"byte_end":3900,"line_start":139,"line_end":139,"column_start":9,"column_end":15},"name":"status","qualname":"::StreamResult::status","value":"core::result::Result<MZStatus, MZError>","parent":{"krate":0,"index":953},"children":[],"decl_id":null,"docs":" The return status of the call.\n","sig":null,"attributes":[{"value":"/ The return status of the call.","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":3851,"byte_end":3885,"line_start":138,"line_end":138,"column_start":5,"column_end":39}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/buffer.rs","byte_start":12526,"byte_end":12537,"line_start":30,"line_end":30,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/buffer.rs","byte_start":12650,"byte_end":12661,"line_start":37,"line_end":37,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/buffer.rs","byte_start":12928,"byte_end":12936,"line_start":51,"line_end":51,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":24277,"byte_end":24287,"line_start":224,"line_end":224,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":24629,"byte_end":24639,"line_start":236,"line_end":236,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":29615,"byte_end":29630,"line_start":401,"line_end":401,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":33094,"byte_end":33109,"line_start":497,"line_end":497,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":33746,"byte_end":33758,"line_start":518,"line_end":518,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":34431,"byte_end":34442,"line_start":542,"line_end":542,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":35321,"byte_end":35332,"line_start":574,"line_end":574,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":36285,"byte_end":36298,"line_start":610,"line_end":610,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":37856,"byte_end":37873,"line_start":665,"line_end":665,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":39078,"byte_end":39087,"line_start":714,"line_end":714,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":40907,"byte_end":40910,"line_start":766,"line_end":766,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":42923,"byte_end":42935,"line_start":826,"line_end":826,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":43200,"byte_end":43212,"line_start":836,"line_end":836,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":55450,"byte_end":55459,"line_start":1194,"line_end":1194,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":62666,"byte_end":62677,"line_start":1389,"line_end":1389,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":64390,"byte_end":64397,"line_start":1448,"line_end":1448,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":108523,"byte_end":108535,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":113384,"byte_end":113401,"line_start":163,"line_end":163,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":114082,"byte_end":114099,"line_start":187,"line_end":187,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":115811,"byte_end":115816,"line_start":259,"line_end":259,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/output_buffer.rs","byte_start":180282,"byte_end":180294,"line_start":11,"line_end":11,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":182747,"byte_end":182759,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":183138,"byte_end":183150,"line_start":51,"line_end":51,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":105071,"byte_end":105082,"line_start":43,"line_end":43,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1896,"byte_end":1903,"line_start":65,"line_end":65,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2960,"byte_end":2970,"line_start":111,"line_end":111,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":3920,"byte_end":3932,"line_start":142,"line_end":142,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":4185,"byte_end":4193,"line_start":153,"line_end":153,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":4309,"byte_end":4317,"line_start":159,"line_end":159,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":886,"byte_end":893,"line_start":33,"line_end":33,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":4505,"byte_end":4509,"line_start":7,"line_end":7,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":39}},{"kind":"Mod","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/mod.rs","byte_start":4519,"byte_end":4525,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":314}},{"kind":"Mod","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":903,"byte_end":910,"line_start":34,"line_end":34,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":333}},{"kind":"Mod","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":103654,"byte_end":103658,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":338}},{"kind":"Mod","span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":103687,"byte_end":103693,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":471}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/buffer.rs","byte_start":12526,"byte_end":12537,"line_start":30,"line_end":30,"column_start":6,"column_end":17},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":19},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/buffer.rs","byte_start":12650,"byte_end":12661,"line_start":37,"line_end":37,"column_start":18,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":19},"to":{"krate":1,"index":1893}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/buffer.rs","byte_start":12928,"byte_end":12936,"line_start":51,"line_end":51,"column_start":18,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":33},"to":{"krate":1,"index":1893}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":24277,"byte_end":24287,"line_start":224,"line_end":224,"column_start":24,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":600},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":24629,"byte_end":24639,"line_start":236,"line_end":236,"column_start":6,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":29615,"byte_end":29630,"line_start":401,"line_end":401,"column_start":6,"column_end":21},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":33094,"byte_end":33109,"line_start":497,"line_end":497,"column_start":18,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":111},"to":{"krate":1,"index":1893}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":33746,"byte_end":33758,"line_start":518,"line_end":518,"column_start":10,"column_end":22},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":34431,"byte_end":34442,"line_start":542,"line_end":542,"column_start":10,"column_end":21},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":35321,"byte_end":35332,"line_start":574,"line_end":574,"column_start":10,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":36285,"byte_end":36298,"line_start":610,"line_end":610,"column_start":10,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":37856,"byte_end":37873,"line_start":665,"line_end":665,"column_start":10,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":39078,"byte_end":39087,"line_start":714,"line_end":714,"column_start":6,"column_end":15},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":40907,"byte_end":40910,"line_start":766,"line_end":766,"column_start":6,"column_end":9},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":42923,"byte_end":42935,"line_start":826,"line_end":826,"column_start":18,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":188},"to":{"krate":1,"index":1893}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":43200,"byte_end":43212,"line_start":836,"line_end":836,"column_start":6,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":55450,"byte_end":55459,"line_start":1194,"line_end":1194,"column_start":6,"column_end":15},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":62666,"byte_end":62677,"line_start":1389,"line_end":1389,"column_start":6,"column_end":17},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/deflate/core.rs","byte_start":64390,"byte_end":64397,"line_start":1448,"line_end":1448,"column_start":6,"column_end":13},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":108523,"byte_end":108535,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":113384,"byte_end":113401,"line_start":163,"line_end":163,"column_start":6,"column_end":23},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":114082,"byte_end":114099,"line_start":187,"line_end":187,"column_start":18,"column_end":35},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":383},"to":{"krate":1,"index":1893}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/core.rs","byte_start":115811,"byte_end":115816,"line_start":259,"line_end":259,"column_start":6,"column_end":11},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/output_buffer.rs","byte_start":180282,"byte_end":180294,"line_start":11,"line_end":11,"column_start":10,"column_end":22},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":182747,"byte_end":182759,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":489},"to":{"krate":1,"index":1893}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/stream.rs","byte_start":183138,"byte_end":183150,"line_start":51,"line_end":51,"column_start":6,"column_end":18},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/inflate/mod.rs","byte_start":105071,"byte_end":105082,"line_start":43,"line_end":43,"column_start":6,"column_end":17},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":805},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":1896,"byte_end":1903,"line_start":65,"line_end":65,"column_start":6,"column_end":13},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":2960,"byte_end":2970,"line_start":111,"line_end":111,"column_start":6,"column_end":16},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":3920,"byte_end":3932,"line_start":142,"line_end":142,"column_start":6,"column_end":18},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":4185,"byte_end":4193,"line_start":153,"line_end":153,"column_start":44,"column_end":52},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":543},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/Users/raphael/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.4.0/src/lib.rs","byte_start":4309,"byte_end":4317,"line_start":159,"line_end":159,"column_start":45,"column_end":53},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":543},"to":{"krate":1,"index":1823}}]}